{"MLDebug0": {"stat": "pass", "details": {}}, "MLDebug1": {"stat": "pass", "details": {}}, "MLDebug2": {"stat": "fail", "details": {"test_process_found_restarts_process": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 42, in test_process_found_restarts_process\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: Popen('notepad')\nActual: Popen(['notepad'])\n", "test_process_not_found_starts_process": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 30, in test_process_not_found_starts_process\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: Popen('random_non_existent_process')\nActual: Popen(['random_non_existent_process'])\n", "test_process_terminates_and_restarts_multiple_instances": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_process_terminates_and_restarts_multiple_instances\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: Popen('multi_instance')\nActual: Popen(['multi_instance'])\n"}}, "MLDebug3": {"stat": "pass", "details": {}}, "MLDebug4": {"stat": "pass", "details": {}}, "MLDebug5": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug6": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug7": {"stat": "pass", "details": {}}, "MLDebug8": {"stat": "pass", "details": {}}, "MLDebug9": {"stat": "pass", "details": {}}, "MLDebug10": {"stat": "pass", "details": {}}, "MLDebug11": {"stat": "pass", "details": {}}, "MLDebug12": {"stat": "pass", "details": {}}, "MLDebug13": {"stat": "pass", "details": {}}, "MLDebug14": {"stat": "pass", "details": {}}, "MLDebug15": {"stat": "pass", "details": {}}, "MLDebug16": {"stat": "pass", "details": {}}, "MLDebug17": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug18": {"stat": "pass", "details": {}}, "MLDebug19": {"stat": "pass", "details": {}}, "MLDebug20": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug21": {"stat": "pass", "details": {}}, "MLDebug22": {"stat": "pass", "details": {}}, "MLDebug23": {"stat": "pass", "details": {}}, "MLDebug24": {"stat": "pass", "details": {}}, "MLDebug25": {"stat": "pass", "details": {}}, "MLDebug26": {"stat": "pass", "details": {}}, "MLDebug27": {"stat": "pass", "details": {}}, "MLDebug28": {"stat": "pass", "details": {}}, "MLDebug29": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug30": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug31": {"stat": "pass", "details": {}}, "MLDebug32": {"stat": "pass", "details": {}}, "MLDebug33": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug34": {"stat": "pass", "details": {}}, "MLDebug35": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug36": {"stat": "pass", "details": {}}, "MLDebug37": {"stat": "pass", "details": {}}, "MLDebug38": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug39": {"stat": "pass", "details": {}}, "MLDebug40": {"stat": "pass", "details": {}}, "MLDebug41": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug42": {"stat": "pass", "details": {}}, "MLDebug43": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug44": {"stat": "pass", "details": {}}, "MLDebug45": {"stat": "pass", "details": {}}, "MLDebug46": {"stat": "pass", "details": {}}, "MLDebug47": {"stat": "pass", "details": {}}, "MLDebug48": {"stat": "pass", "details": {}}, "MLDebug49": {"stat": "pass", "details": {}}, "MLDebug50": {"stat": "pass", "details": {}}, "MLDebug51": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug52": {"stat": "pass", "details": {}}, "MLDebug53": {"stat": "pass", "details": {}}, "MLDebug54": {"stat": "pass", "details": {}}, "MLDebug55": {"stat": "pass", "details": {}}, "MLDebug56": {"stat": "pass", "details": {}}, "MLDebug57": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug58": {"stat": "pass", "details": {}}, "MLDebug59": {"stat": "pass", "details": {}}, "MLDebug60": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug61": {"stat": "pass", "details": {}}, "MLDebug62": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug63": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug64": {"stat": "pass", "details": {}}, "MLDebug65": {"stat": "pass", "details": {}}, "MLDebug66": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug67": {"stat": "pass", "details": {}}, "MLDebug68": {"stat": "fail", "details": {"test_normal_operation": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_normal_operation\nAssertionError: Lists differ: [(1, 1), ('value1', 1), ('value2', 1)] != [('value1', 1), ('value2', 1), (1, 1)]\n\nFirst differing element 0:\n(1, 1)\n('value1', 1)\n\n- [(1, 1), ('value1', 1), ('value2', 1)]\n?  --------\n\n+ [('value1', 1), ('value2', 1), (1, 1)]\n?                            ++++++++\n\n"}}, "MLDebug69": {"stat": "fail", "details": {"ALL": "invalid decimal literal (__test__.py, line 1)"}}, "MLDebug70": {"stat": "pass", "details": {}}, "MLDebug71": {"stat": "pass", "details": {}}, "MLDebug72": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug73": {"stat": "pass", "details": {}}, "MLDebug74": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug75": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug76": {"stat": "pass", "details": {}}, "MLDebug77": {"stat": "pass", "details": {}}, "MLDebug78": {"stat": "pass", "details": {}}, "MLDebug79": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug80": {"stat": "pass", "details": {}}, "MLDebug81": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug82": {"stat": "pass", "details": {}}, "MLDebug83": {"stat": "pass", "details": {}}, "MLDebug84": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug85": {"stat": "pass", "details": {}}, "MLDebug86": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug87": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug88": {"stat": "pass", "details": {}}, "MLDebug89": {"stat": "pass", "details": {}}, "MLDebug90": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug91": {"stat": "pass", "details": {}}, "MLDebug92": {"stat": "pass", "details": {}}, "MLDebug93": {"stat": "pass", "details": {}}, "MLDebug94": {"stat": "pass", "details": {}}, "MLDebug95": {"stat": "pass", "details": {}}, "MLDebug96": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug97": {"stat": "pass", "details": {}}, "MLDebug98": {"stat": "pass", "details": {}}, "MLDebug99": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug100": {"stat": "pass", "details": {}}, "MLDebug101": {"stat": "fail", "details": {"test_image_size_and_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_image_size_and_type\nAssertionError: Lists differ: [[[102, 220, 225], [95, 179, 61], [234, 203,[6230 chars]88]]] != [[[57, 12, 140], [125, 114, 71], [52, 44, 21[6305 chars]45]]]\n\nFirst differing element 0:\n[[102, 220, 225], [95, 179, 61], [234, 203,[269 chars]221]]\n[[57, 12, 140], [125, 114, 71], [52, 44, 21[266 chars] 36]]\n\nDiff is 16643 characters long. Set self.maxDiff to None to see it. : DataFrame contents should match the expected output\n"}}, "MLDebug102": {"stat": "fail", "details": {"test_invalid_content_type": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 71, in test_invalid_content_type\n  File \"__test__.py\", line 19, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_invalid_json": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 104, in test_invalid_json\n  File \"__test__.py\", line 19, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_missing_data_key": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 115, in test_missing_data_key\n  File \"__test__.py\", line 19, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_valid_json_data": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 92, in test_valid_json_data\n  File \"__test__.py\", line 19, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n"}}, "MLDebug103": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug104": {"stat": "pass", "details": {}}, "MLDebug105": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug106": {"stat": "pass", "details": {}}, "MLDebug107": {"stat": "pass", "details": {}}, "MLDebug108": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug109": {"stat": "pass", "details": {}}, "MLDebug110": {"stat": "pass", "details": {}}, "MLDebug111": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug112": {"stat": "pass", "details": {}}, "MLDebug113": {"stat": "pass", "details": {}}, "MLDebug114": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug115": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug116": {"stat": "pass", "details": {}}, "MLDebug117": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug118": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 132, in test_case_10\nAssertionError: Lists differ: [0, 1] != [0, 1, 2, 3, 4]\n\nSecond list contains 3 additional elements.\nFirst extra element 2:\n2\n\n- [0, 1]\n+ [0, 1, 2, 3, 4]\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 125, in test_case_9\nAssertionError: Lists differ: ['fea[146 chars]re_11', 'feature_12', 'feature_13', 'feature_14', 'feature_15'] != ['fea[146 chars]re_11']\n\nFirst list contains 4 additional elements.\nFirst extra element 12:\n'feature_12'\n\n  ['feature_0',\n   'feature_1',\n   'feature_2',\n   'feature_3',\n   'feature_4',\n   'feature_5',\n   'feature_6',\n   'feature_7',\n   'feature_8',\n   'feature_9',\n   'feature_10',\n-  'feature_11',\n?              ^\n\n+  'feature_11']\n?              ^\n\n-  'feature_12',\n-  'feature_13',\n-  'feature_14',\n-  'feature_15']\n", "test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (3,16) (12,) (3,16) \n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (4,36) (24,) (4,36) \n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (5,49) (35,) (5,49) \n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (6,64) (48,) (6,64) \n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 105, in test_case_8\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2241, in allclose\n    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2351, in isclose\n    return within_tol(x, y, atol, rtol)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2332, in within_tol\n    return less_equal(abs(x-y), atol + rtol * abs(y))\nValueError: operands could not be broadcast together with shapes (5,9) (3,15) \n"}}, "MLDebug119": {"stat": "fail", "details": {"ALL": "name 'de' is not defined"}}, "MLDebug120": {"stat": "pass", "details": {}}, "MLDebug121": {"stat": "pass", "details": {}}, "MLDebug122": {"stat": "pass", "details": {}}, "MLDebug123": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug124": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug125": {"stat": "pass", "details": {}}, "MLDebug126": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug127": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_3\nAssertionError: Lists differ: ['a'] != ['a', 'b']\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n'b'\n\n- ['a']\n+ ['a', 'b']\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_5\nAssertionError: Lists differ: ['a', 'c'] != ['a', 'b', 'c']\n\nFirst differing element 1:\n'c'\n'b'\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n'c'\n\n- ['a', 'c']\n+ ['a', 'b', 'c']\n?       +++++\n\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 122, in test_case_8\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4214, in _get_value\n    series = self._get_item_cache(col)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4638, in _get_item_cache\n    loc = self.columns.get_loc(item)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'mean'\n"}}, "MLDebug128": {"stat": "pass", "details": {}}, "MLDebug129": {"stat": "pass", "details": {}}, "MLDebug130": {"stat": "pass", "details": {}}, "MLDebug131": {"stat": "pass", "details": {}}, "MLDebug132": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug133": {"stat": "pass", "details": {}}, "MLDebug134": {"stat": "pass", "details": {}}, "MLDebug135": {"stat": "pass", "details": {}}, "MLDebug136": {"stat": "pass", "details": {}}, "MLDebug137": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug138": {"stat": "pass", "details": {}}, "MLDebug139": {"stat": "pass", "details": {}}, "MLDebug140": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 7) (__test__.py, line 7)"}}, "MLDebug141": {"stat": "pass", "details": {}}, "MLDebug142": {"stat": "pass", "details": {}}, "MLDebug143": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 29) (__test__.py, line 29)"}}, "MLDebug144": {"stat": "pass", "details": {}}, "MLDebug145": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug146": {"stat": "pass", "details": {}}, "MLDebug147": {"stat": "pass", "details": {}}, "MLDebug148": {"stat": "pass", "details": {}}, "MLDebug149": {"stat": "fail", "details": {"ALL": "invalid character '\u2192' (U+2192) (__test__.py, line 22)"}}, "MLDebug150": {"stat": "pass", "details": {}}, "MLDebug151": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug152": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug153": {"stat": "pass", "details": {}}, "MLDebug154": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug155": {"stat": "pass", "details": {}}, "MLDebug156": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug157": {"stat": "pass", "details": {}}, "MLDebug158": {"stat": "fail", "details": {"test_with_5x1_array": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_with_5x1_array\nAssertionError: Tuples differ: (2, 2) != (5, 1)\n\nFirst differing element 0:\n2\n5\n\n- (2, 2)\n+ (5, 1) : DataFrame shape should be (5, 1) for a single component.\n"}}, "MLDebug159": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug160": {"stat": "pass", "details": {}}, "MLDebug161": {"stat": "pass", "details": {}}, "MLDebug162": {"stat": "pass", "details": {}}, "MLDebug163": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug164": {"stat": "pass", "details": {}}, "MLDebug165": {"stat": "pass", "details": {}}, "MLDebug166": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug167": {"stat": "pass", "details": {}}, "MLDebug168": {"stat": "pass", "details": {}}, "MLDebug169": {"stat": "fail", "details": {"test_hash_length_for_key_B": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_hash_length_for_key_B\nAssertionError: 88 != 44\n", "test_hash_length_for_key_C": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_hash_length_for_key_C\nAssertionError: 88 != 44\n", "test_hash_length_for_key_D": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_hash_length_for_key_D\nAssertionError: 88 != 44\n", "test_hash_length_for_key_E": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_hash_length_for_key_E\nAssertionError: 88 != 44\n", "test_hash_value_for_key_B": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_hash_value_for_key_B\nAssertionError: 'Yjk0ZDI3Yjk5MzRkM2UwOGE1MmU1MmQ3ZGE3ZGFiZ[43 chars]OQ==' != 'uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek='\n- Yjk0ZDI3Yjk5MzRkM2UwOGE1MmU1MmQ3ZGE3ZGFiZmFjNDg0ZWZlMzdhNTM4MGVlOTA4OGY3YWNlMmVmY2RlOQ==\n+ uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=\n\n", "test_hash_value_for_key_C": "Traceback (most recent call last):\n  File \"__test__.py\", line 118, in test_hash_value_for_key_C\nAssertionError: 'OTE1MGUwMjcyN2UyOWNhODUyMmMyOWFkNGFhNWE4M[43 chars]Mw==' != 'kVDgJyfinKhSLCmtSqWoNDwhzPkJtA9zxBv0eN9+b8M='\n- OTE1MGUwMjcyN2UyOWNhODUyMmMyOWFkNGFhNWE4MzQzYzIxY2NmOTA5YjQwZjczYzQxYmY0NzhkZjdlNmZjMw==\n+ kVDgJyfinKhSLCmtSqWoNDwhzPkJtA9zxBv0eN9+b8M=\n\n"}}, "MLDebug170": {"stat": "pass", "details": {}}, "MLDebug171": {"stat": "pass", "details": {}}, "MLDebug172": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug173": {"stat": "pass", "details": {}}, "MLDebug174": {"stat": "pass", "details": {}}, "MLDebug175": {"stat": "pass", "details": {}}, "MLDebug176": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug177": {"stat": "pass", "details": {}}, "MLDebug178": {"stat": "pass", "details": {}}, "MLDebug179": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug180": {"stat": "pass", "details": {}}, "MLDebug181": {"stat": "pass", "details": {}}, "MLDebug182": {"stat": "pass", "details": {}}, "MLDebug183": {"stat": "pass", "details": {}}, "MLDebug184": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug185": {"stat": "pass", "details": {}}, "MLDebug186": {"stat": "pass", "details": {}}, "MLDebug187": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 6) (__test__.py, line 6)"}}, "MLDebug188": {"stat": "fail", "details": {"ALL": "invalid decimal literal (__test__.py, line 1)"}}, "MLDebug189": {"stat": "pass", "details": {}}, "MLDebug190": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug191": {"stat": "pass", "details": {}}, "MLDebug192": {"stat": "pass", "details": {}}, "MLDebug193": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug194": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug195": {"stat": "pass", "details": {}}, "MLDebug196": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug197": {"stat": "pass", "details": {}}, "MLDebug198": {"stat": "fail", "details": {"ALL": "invalid decimal literal (__test__.py, line 2)"}}, "MLDebug199": {"stat": "pass", "details": {}}, "MLDebug200": {"stat": "pass", "details": {}}, "MLDebug201": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug202": {"stat": "pass", "details": {}}, "MLDebug203": {"stat": "pass", "details": {}}, "MLDebug204": {"stat": "pass", "details": {}}, "MLDebug205": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug206": {"stat": "pass", "details": {}}, "MLDebug207": {"stat": "pass", "details": {}}, "MLDebug208": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug209": {"stat": "pass", "details": {}}, "MLDebug210": {"stat": "pass", "details": {}}, "MLDebug211": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug212": {"stat": "pass", "details": {}}, "MLDebug213": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 7) (__test__.py, line 7)"}}, "MLDebug214": {"stat": "pass", "details": {}}, "MLDebug215": {"stat": "pass", "details": {}}, "MLDebug216": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 6) (__test__.py, line 6)"}}, "MLDebug217": {"stat": "pass", "details": {}}, "MLDebug218": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug219": {"stat": "pass", "details": {}}, "MLDebug220": {"stat": "pass", "details": {}}, "MLDebug221": {"stat": "pass", "details": {}}, "MLDebug222": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug223": {"stat": "pass", "details": {}}, "MLDebug224": {"stat": "pass", "details": {}}, "MLDebug225": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug226": {"stat": "pass", "details": {}}, "MLDebug227": {"stat": "pass", "details": {}}, "MLDebug228": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug229": {"stat": "pass", "details": {}}, "MLDebug230": {"stat": "pass", "details": {}}, "MLDebug231": {"stat": "pass", "details": {}}, "MLDebug232": {"stat": "pass", "details": {}}, "MLDebug233": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug234": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug235": {"stat": "pass", "details": {}}, "MLDebug236": {"stat": "pass", "details": {}}, "MLDebug237": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug238": {"stat": "pass", "details": {}}, "MLDebug239": {"stat": "pass", "details": {}}, "MLDebug240": {"stat": "pass", "details": {}}, "MLDebug241": {"stat": "pass", "details": {}}, "MLDebug242": {"stat": "pass", "details": {}}, "MLDebug243": {"stat": "fail", "details": {"test_file_existence": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in tearDown\nFileNotFoundError: [Errno 2] No such file or directory: 'task_func_data/Output.txt'\n", "test_data_appending": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in tearDown\nFileNotFoundError: [Errno 2] No such file or directory: 'task_func_data/Output.txt'\n", "test_file_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in tearDown\nFileNotFoundError: [Errno 2] No such file or directory: 'task_func_data/Output.txt'\n", "test_headers_only_once": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in tearDown\nFileNotFoundError: [Errno 2] No such file or directory: 'task_func_data/Output.txt'\n", "test_return_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in tearDown\nFileNotFoundError: [Errno 2] No such file or directory: 'task_func_data/Output.txt'\n"}}, "MLDebug244": {"stat": "pass", "details": {}}, "MLDebug245": {"stat": "pass", "details": {}}, "MLDebug246": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug247": {"stat": "pass", "details": {}}, "MLDebug248": {"stat": "pass", "details": {}}, "MLDebug249": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug250": {"stat": "pass", "details": {}}, "MLDebug251": {"stat": "pass", "details": {}}, "MLDebug252": {"stat": "pass", "details": {}}, "MLDebug253": {"stat": "pass", "details": {}}, "MLDebug254": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug255": {"stat": "pass", "details": {}}, "MLDebug256": {"stat": "pass", "details": {}}, "MLDebug257": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug258": {"stat": "pass", "details": {}}, "MLDebug259": {"stat": "pass", "details": {}}, "MLDebug260": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug261": {"stat": "pass", "details": {}}, "MLDebug262": {"stat": "pass", "details": {}}, "MLDebug263": {"stat": "fail", "details": {"test_empty_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_empty_list\n  File \"__test__.py\", line 10, in task_func\nValueError: max() arg is an empty sequence\n"}}, "MLDebug264": {"stat": "pass", "details": {}}, "MLDebug265": {"stat": "pass", "details": {}}, "MLDebug266": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug267": {"stat": "pass", "details": {}}, "MLDebug268": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug269": {"stat": "pass", "details": {}}, "MLDebug270": {"stat": "fail", "details": {"test_invalid_column": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_invalid_column\n  File \"__test__.py\", line 8, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/categorical.py\", line 1597, in boxplot\n    p = _CategoricalPlotter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/categorical.py\", line 67, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_base.py\", line 634, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_base.py\", line 679, in assign_variables\n    plot_data = PlotData(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_core/data.py\", line 58, in __init__\n    frame, names, ids = self._assign_variables(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_core/data.py\", line 232, in _assign_variables\n    raise ValueError(err)\nValueError: Could not interpret value `closing_price` for `y`. An entry with this name does not appear in `data`.\n"}}, "MLDebug271": {"stat": "pass", "details": {}}, "MLDebug272": {"stat": "pass", "details": {}}, "MLDebug273": {"stat": "pass", "details": {}}, "MLDebug274": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug275": {"stat": "pass", "details": {}}, "MLDebug276": {"stat": "pass", "details": {}}, "MLDebug277": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug278": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug279": {"stat": "pass", "details": {}}, "MLDebug280": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug281": {"stat": "pass", "details": {}}, "MLDebug282": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug283": {"stat": "pass", "details": {}}, "MLDebug284": {"stat": "pass", "details": {}}, "MLDebug285": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug286": {"stat": "pass", "details": {}}, "MLDebug287": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug288": {"stat": "pass", "details": {}}, "MLDebug289": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug290": {"stat": "pass", "details": {}}, "MLDebug291": {"stat": "pass", "details": {}}, "MLDebug292": {"stat": "pass", "details": {}}, "MLDebug293": {"stat": "pass", "details": {}}, "MLDebug294": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug295": {"stat": "pass", "details": {}}, "MLDebug296": {"stat": "pass", "details": {}}, "MLDebug297": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_case_1\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 4924, in apply\n    ).apply()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1427, in apply\n    return self.apply_standard()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1507, in apply_standard\n    mapped = obj._map_values(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/base.py\", line 921, in _map_values\n    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/algorithms.py\", line 1743, in map_array\n    return lib.map_infer(values, mapper, convert=convert)\n  File \"lib.pyx\", line 2972, in pandas._libs.lib.map_infer\n  File \"__test__.py\", line 13, in <lambda>\nKeyError: 'A'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 107, in test_case_2\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 4924, in apply\n    ).apply()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1427, in apply\n    return self.apply_standard()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1507, in apply_standard\n    mapped = obj._map_values(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/base.py\", line 921, in _map_values\n    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/algorithms.py\", line 1743, in map_array\n    return lib.map_infer(values, mapper, convert=convert)\n  File \"lib.pyx\", line 2972, in pandas._libs.lib.map_infer\n  File \"__test__.py\", line 13, in <lambda>\nKeyError: 'G'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 129, in test_case_4\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 4924, in apply\n    ).apply()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1427, in apply\n    return self.apply_standard()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1507, in apply_standard\n    mapped = obj._map_values(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/base.py\", line 921, in _map_values\n    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/algorithms.py\", line 1743, in map_array\n    return lib.map_infer(values, mapper, convert=convert)\n  File \"lib.pyx\", line 2972, in pandas._libs.lib.map_infer\n  File \"__test__.py\", line 13, in <lambda>\nKeyError: 'O'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 140, in test_case_5\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 4924, in apply\n    ).apply()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1427, in apply\n    return self.apply_standard()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1507, in apply_standard\n    mapped = obj._map_values(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/base.py\", line 921, in _map_values\n    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/algorithms.py\", line 1743, in map_array\n    return lib.map_infer(values, mapper, convert=convert)\n  File \"lib.pyx\", line 2972, in pandas._libs.lib.map_infer\n  File \"__test__.py\", line 13, in <lambda>\nKeyError: 'S'\n"}}, "MLDebug298": {"stat": "pass", "details": {}}, "MLDebug299": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug300": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_3\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_case_4\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 113, in test_case_5\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n"}}, "MLDebug301": {"stat": "pass", "details": {}}, "MLDebug302": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug303": {"stat": "pass", "details": {}}, "MLDebug304": {"stat": "pass", "details": {}}, "MLDebug305": {"stat": "pass", "details": {}}, "MLDebug306": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (12, 3)\n[right]: (4, 3)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (5, 3)\n[right]: (3, 3)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (75.0 %)\n[index]: [0, 1, 2, 3]\n[left]:  [1, 3, 4, 5]\n[right]: [1, 1, 1, 1]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (3, 3)\n[right]: (1, 3)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (8, 3)\n[right]: (4, 3)\n"}}, "MLDebug307": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug308": {"stat": "pass", "details": {}}, "MLDebug309": {"stat": "pass", "details": {}}, "MLDebug310": {"stat": "pass", "details": {}}, "MLDebug311": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug312": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug313": {"stat": "pass", "details": {}}, "MLDebug314": {"stat": "pass", "details": {}}, "MLDebug315": {"stat": "pass", "details": {}}, "MLDebug316": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug317": {"stat": "pass", "details": {}}, "MLDebug318": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug319": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 48, in test_case_2\nAssertionError: 5 != 10\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_case_3\nAssertionError: 5 != 100\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 64, in test_case_4\nAssertionError: 5 != 1\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 71, in test_case_5\nAssertionError: 5 != 0\n"}}, "MLDebug320": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_1\nAssertionError: 'Invalid input' != {'feature1': {'mean': 3.0, 'median': 3.0,[321 chars]006}}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_case_2\nAssertionError: 'Invalid input' != {'feature1': {'mean': 1.6, 'median': 1.0,[328 chars]2.0}}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_3\nAssertionError: 'Invalid input' != {'feature1': {'mean': 2.0, 'median': 2.0,[379 chars]666}}\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 124, in test_case_4\nAssertionError: 'Invalid input' != {'feature1': {'mean': 2.0, 'median': 2.0,[385 chars]666}}\n"}}, "MLDebug321": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug322": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 46) (__test__.py, line 46)"}}, "MLDebug323": {"stat": "pass", "details": {}}, "MLDebug324": {"stat": "pass", "details": {}}, "MLDebug325": {"stat": "pass", "details": {}}, "MLDebug326": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug327": {"stat": "pass", "details": {}}, "MLDebug328": {"stat": "pass", "details": {}}, "MLDebug329": {"stat": "pass", "details": {}}, "MLDebug330": {"stat": "pass", "details": {}}, "MLDebug331": {"stat": "pass", "details": {}}, "MLDebug332": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug333": {"stat": "pass", "details": {}}, "MLDebug334": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug335": {"stat": "fail", "details": {"test_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_empty_dataframe\nAssertionError: array([], dtype=float64) != 0\n"}}, "MLDebug336": {"stat": "pass", "details": {}}, "MLDebug337": {"stat": "pass", "details": {}}, "MLDebug338": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug339": {"stat": "pass", "details": {}}, "MLDebug340": {"stat": "pass", "details": {}}, "MLDebug341": {"stat": "pass", "details": {}}, "MLDebug342": {"stat": "pass", "details": {}}, "MLDebug343": {"stat": "pass", "details": {}}, "MLDebug344": {"stat": "pass", "details": {}}, "MLDebug345": {"stat": "pass", "details": {}}, "MLDebug346": {"stat": "pass", "details": {}}, "MLDebug347": {"stat": "pass", "details": {}}, "MLDebug348": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\nAssertionError: {'Beijing': 72816, 'London': 367942, 'New Y[43 chars]7288} != {'New York': 72816, 'London': 367942, 'Beij[43 chars]7288}\n- {'Beijing': 72816,\n?             ^ ^ -\n\n+ {'Beijing': 869251,\n?             ^^^ ^\n\n   'London': 367942,\n-  'New York': 869251,\n?                ----\n\n+  'New York': 72816,\n?              ++ +\n\n-  'Sydney': 323344,\n-  'Tokyo': 267288}\n+  'Sydney': 267288,\n+  'Tokyo': 323344}\n"}}, "MLDebug349": {"stat": "pass", "details": {}}, "MLDebug350": {"stat": "pass", "details": {}}, "MLDebug351": {"stat": "pass", "details": {}}, "MLDebug352": {"stat": "pass", "details": {}}, "MLDebug353": {"stat": "fail", "details": {"test_blur_effectiveness": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_blur_effectiveness\n  File \"__test__.py\", line 18, in task_func\ncv2.error: OpenCV(4.10.0) /io/opencv/modules/highgui/src/window.cpp:1301: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvShowImage'\n\n", "test_different_blur_radius": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_different_blur_radius\n  File \"__test__.py\", line 18, in task_func\ncv2.error: OpenCV(4.10.0) /io/opencv/modules/highgui/src/window.cpp:1301: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvShowImage'\n\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_normal_functionality\n  File \"__test__.py\", line 18, in task_func\ncv2.error: OpenCV(4.10.0) /io/opencv/modules/highgui/src/window.cpp:1301: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvShowImage'\n\n", "test_returned_image_shapes": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_returned_image_shapes\n  File \"__test__.py\", line 18, in task_func\ncv2.error: OpenCV(4.10.0) /io/opencv/modules/highgui/src/window.cpp:1301: error: (-2:Unspecified error) The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Cocoa support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script in function 'cvShowImage'\n\n"}}, "MLDebug354": {"stat": "pass", "details": {}}, "MLDebug355": {"stat": "pass", "details": {}}, "MLDebug356": {"stat": "pass", "details": {}}, "MLDebug357": {"stat": "pass", "details": {}}, "MLDebug358": {"stat": "pass", "details": {}}, "MLDebug359": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 147, in test_case_8\nAssertionError: False is not true\n"}}, "MLDebug360": {"stat": "pass", "details": {}}, "MLDebug361": {"stat": "pass", "details": {}}, "MLDebug362": {"stat": "pass", "details": {}}, "MLDebug363": {"stat": "pass", "details": {}}, "MLDebug364": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 131, in test_case_10\nAssertionError: Lists differ: [0, 1] != [0, 1, 2, 3, 4]\n\nSecond list contains 3 additional elements.\nFirst extra element 2:\n2\n\n- [0, 1]\n+ [0, 1, 2, 3, 4]\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 124, in test_case_9\nAssertionError: Lists differ: ['fea[146 chars]re_11', 'feature_12', 'feature_13', 'feature_14', 'feature_15'] != ['fea[146 chars]re_11']\n\nFirst list contains 4 additional elements.\nFirst extra element 12:\n'feature_12'\n\n  ['feature_0',\n   'feature_1',\n   'feature_2',\n   'feature_3',\n   'feature_4',\n   'feature_5',\n   'feature_6',\n   'feature_7',\n   'feature_8',\n   'feature_9',\n   'feature_10',\n-  'feature_11',\n?              ^\n\n+  'feature_11']\n?              ^\n\n-  'feature_12',\n-  'feature_13',\n-  'feature_14',\n-  'feature_15']\n", "test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (3,16) (12,) (3,16) \n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (4,36) (24,) (4,36) \n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (5,49) (35,) (5,49) \n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/_data.py\", line 1107, in inverse_transform\n    X *= self.scale_\nValueError: operands could not be broadcast together with shapes (6,64) (48,) (6,64) \n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_8\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2241, in allclose\n    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2351, in isclose\n    return within_tol(x, y, atol, rtol)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2332, in within_tol\n    return less_equal(abs(x-y), atol + rtol * abs(y))\nValueError: operands could not be broadcast together with shapes (5,9) (3,15) \n"}}, "MLDebug365": {"stat": "pass", "details": {}}, "MLDebug366": {"stat": "pass", "details": {}}, "MLDebug367": {"stat": "pass", "details": {}}, "MLDebug368": {"stat": "pass", "details": {}}, "MLDebug369": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug370": {"stat": "pass", "details": {}}, "MLDebug371": {"stat": "pass", "details": {}}, "MLDebug372": {"stat": "pass", "details": {}}, "MLDebug373": {"stat": "pass", "details": {}}, "MLDebug374": {"stat": "pass", "details": {}}, "MLDebug375": {"stat": "pass", "details": {}}, "MLDebug376": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_1\nAssertionError: 'id' != 'age'\n- id\n+ age\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_case_4\nAssertionError: Exception not raised\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 105, in test_case_5\nAssertionError: 'id' != 'lifespan'\n- id\n+ lifespan\n\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 143, in test_case_9\nAssertionError: 'id' != 'lifespan'\n- id\n+ lifespan\n\n"}}, "MLDebug377": {"stat": "pass", "details": {}}, "MLDebug378": {"stat": "pass", "details": {}}, "MLDebug379": {"stat": "pass", "details": {}}, "MLDebug380": {"stat": "fail", "details": {"test_http_error_handling_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 9, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nurllib.error.HTTPError: HTTP Error 404: Not Found\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 67, in test_http_error_handling_2\n  File \"__test__.py\", line 22, in task_func\nurllib.error.HTTPError: HTTP Error 404: Not Found\n"}}, "MLDebug381": {"stat": "fail", "details": {"test_csv_file_creation": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_csv_file_creation\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'FILE_PAT' is not defined\n", "test_csv_file_header": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_csv_file_header\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'FILE_PAT' is not defined\n", "test_csv_file_rows": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_csv_file_rows\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'FILE_PAT' is not defined\n", "test_file_path_return": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_file_path_return\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'FILE_PAT' is not defined\n", "test_no_hours_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_no_hours_data\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'FILE_PAT' is not defined\n"}}, "MLDebug382": {"stat": "fail", "details": {"test_dataframe_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 78, in test_dataframe_content\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 898, in assert_called\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called.\n", "test_plot_generation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 96, in test_plot_generation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 898, in assert_called\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called.\n"}}, "MLDebug383": {"stat": "pass", "details": {}}, "MLDebug384": {"stat": "fail", "details": {"test_no_word_column": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_no_word_column\nAssertionError: ValueError not raised\n"}}, "MLDebug385": {"stat": "pass", "details": {}}, "MLDebug386": {"stat": "pass", "details": {}}, "MLDebug387": {"stat": "pass", "details": {}}, "MLDebug388": {"stat": "pass", "details": {}}, "MLDebug389": {"stat": "pass", "details": {}}, "MLDebug390": {"stat": "pass", "details": {}}, "MLDebug391": {"stat": "pass", "details": {}}, "MLDebug392": {"stat": "pass", "details": {}}, "MLDebug393": {"stat": "pass", "details": {}}, "MLDebug394": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug395": {"stat": "pass", "details": {}}, "MLDebug396": {"stat": "pass", "details": {}}, "MLDebug397": {"stat": "pass", "details": {}}, "MLDebug398": {"stat": "pass", "details": {}}, "MLDebug399": {"stat": "pass", "details": {}}, "MLDebug400": {"stat": "pass", "details": {}}, "MLDebug401": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\n  File \"__test__.py\", line 31, in base\nAssertionError: 'a,b,c\\n1,2,3\\n7,8,9\\n4,5,6' != 'a,b,c\\n7,8,9\\n4,5,6\\n1,2,3'\n  a,b,c\n- 1,2,3\n  7,8,9\n- 4,5,6+ 4,5,6\n?      +\n+ 1,2,3\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_2\n  File \"__test__.py\", line 31, in base\nAssertionError: 'a,b,c\\n1,2,3\\n4,5,6' != 'a,b,c\\n4,5,6\\n1,2,3'\n  a,b,c\n- 1,2,3\n- 4,5,6+ 4,5,6\n?      +\n+ 1,2,3\n"}}, "MLDebug402": {"stat": "pass", "details": {}}, "MLDebug403": {"stat": "pass", "details": {}}, "MLDebug404": {"stat": "pass", "details": {}}, "MLDebug405": {"stat": "pass", "details": {}}, "MLDebug406": {"stat": "pass", "details": {}}, "MLDebug407": {"stat": "pass", "details": {}}, "MLDebug408": {"stat": "pass", "details": {}}, "MLDebug409": {"stat": "pass", "details": {}}, "MLDebug410": {"stat": "pass", "details": {}}, "MLDebug411": {"stat": "pass", "details": {}}, "MLDebug412": {"stat": "pass", "details": {}}, "MLDebug413": {"stat": "pass", "details": {}}, "MLDebug414": {"stat": "pass", "details": {}}, "MLDebug415": {"stat": "pass", "details": {}}, "MLDebug416": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 123, in test_case_3\nAssertionError: 0.5542239979087153 != 0.2921456 within 2 places (0.26207839790871534 difference)\n"}}, "MLDebug417": {"stat": "pass", "details": {}}, "MLDebug418": {"stat": "pass", "details": {}}, "MLDebug419": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_1\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'coun' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_2\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'coun' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_3\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'coun' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_case_4\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'coun' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 88, in test_case_5\n  File \"__test__.py\", line 23, in task_func\nNameError: name 'coun' is not defined\n"}}, "MLDebug420": {"stat": "pass", "details": {}}, "MLDebug421": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_2\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_3\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_5\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n"}}, "MLDebug422": {"stat": "pass", "details": {}}, "MLDebug423": {"stat": "pass", "details": {}}, "MLDebug424": {"stat": "pass", "details": {}}, "MLDebug425": {"stat": "pass", "details": {}}, "MLDebug426": {"stat": "pass", "details": {}}, "MLDebug427": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 209, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1067, in assert_series_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Combinations\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Combinations\") values are different (97.28261 %)\n[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]\n[left]:  [(1, 2, 47), (1, 3, 46), (1, 4, 45), (1, 5, 44), (1, 6, 43), (1, 7, 42), (1, 8, 41), (1, 9, 40), (1, 10, 39), (1, 11, 38), (1, 12, 37), (1, 13, 36), (1, 14, 35), (1, 15, 34), (1, 16, 33), (1, 17, 32), (1, 18, 31), (1, 19, 30), (1, 20, 29), (1, 21, 28), (1, 22, 27), (1, 23, 26), (1, 24, 25), (2, 3, 45), (2, 4, 44), (2, 5, 43), (2, 6, 42), (2, 7, 41), (2, 8, 40), (2, 9, 39), (2, 10, 38), (2, 11, 37), (2, 12, 36), (2, 13, 35), (2, 14, 34), (2, 15, 33), (2, 16, 32), (2, 17, 31), (2, 18, 30), (2, 19, 29), (2, 20, 28), (2, 21, 27), (2, 22, 26), (2, 23, 25), (3, 4, 43), (3, 5, 42), (3, 6, 41), (3, 7, 40), (3, 8, 39), (3, 9, 38), (3, 10, 37), (3, 11, 36), (3, 12, 35), (3, 13, 34), (3, 14, 33), (3, 15, 32), (3, 16, 31), (3, 17, 30), (3, 18, 29), (3, 19, 28), (3, 20, 27), (3, 21, 26), (3, 22, 25), (3, 23, 24), (4, 5, 41), (4, 6, 40), (4, 7, 39), (4, 8, 38), (4, 9, 37), (4, 10, 36), (4, 11, 35), (4, 12, 34), (4, 13, 33), (4, 14, 32), (4, 15, 31), (4, 16, 30), (4, 17, 29), (4, 18, 28), (4, 19, 27), (4, 20, 26), (4, 21, 25), (4, 22, 24), (5, 6, 39), (5, 7, 38), (5, 8, 37), (5, 9, 36), (5, 10, 35), (5, 11, 34), (5, 12, 33), (5, 13, 32), (5, 14, 31), (5, 15, 30), (5, 16, 29), (5, 17, 28), (5, 18, 27), (5, 19, 26), (5, 20, 25), (5, 21, 24), (5, 22, 23), (6, 7, 37), ...]\n[right]: [(1, 12, 37), (1, 13, 36), (12, 16, 22), (3, 22, 25), (2, 14, 34), (3, 23, 24), (5, 12, 33), (5, 13, 32), (9, 10, 31), (1, 11, 38), (3, 20, 27), (3, 21, 26), (6, 19, 25), (5, 11, 34), (9, 16, 25), (2, 5, 43), (7, 20, 23), (1, 2, 47), (7, 21, 22), (6, 10, 34), (6, 17, 27), (6, 18, 26), (11, 13, 26), (2, 3, 45), (2, 4, 44), (7, 19, 24), (6, 8, 36), (10, 18, 22), (4, 13, 33), (6, 16, 28), (4, 21, 25), (3, 10, 37), (11, 19, 20), (10, 16, 24), (1, 22, 27), (4, 11, 35), (4, 12, 34), (7, 10, 33), (12, 18, 20), (4, 19, 27), (3, 8, 39), (3, 9, 38), (6, 7, 37), (1, 21, 28), (4, 10, 36), (5, 14, 31), (7, 8, 35), (7, 9, 34), (15, 16, 19), (3, 7, 40), (2, 22, 26), (9, 18, 23), (2, 23, 25), (5, 21, 24), (9, 19, 22), (1, 19, 30), (8, 15, 27), (1, 20, 29), (8, 16, 26), (4, 9, 37), (5, 19, 26), (9, 17, 24), (8, 13, 29), (2, 13, 35), (8, 14, 28), (1, 10, 39), (4, 7, 39), (12, 14, 24), (8, 12, 30), (2, 12, 36), (10, 19, 21), (1, 8, 41), (1, 9, 40), (4, 22, 24), (2, 10, 38), (3, 19, 28), (2, 11, 37), (5, 9, 36), (10, 17, 23), (2, 18, 30), (1, 7, 42), (4, 20, 26), (14, 17, 19), (3, 17, 30), (3, 18, 29), (5, 7, 38), (4, 18, 28), (7, 17, 26), (13, 18, 19), (3, 15, 32), (14, 16, 20), (3, 16, 31), (6, 14, 30), (5, 6, 39), (5, 22, 23), (11, 17, 22), (7, 15, 28), (7, 16, 27), (6, 12, 32), (6, 13, 31), ...]\nAt positional index 0, first diff: (1, 2, 47) != (1, 12, 37)\n"}}, "MLDebug428": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 19)"}}, "MLDebug429": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 25)"}}, "MLDebug430": {"stat": "pass", "details": {}}, "MLDebug431": {"stat": "pass", "details": {}}, "MLDebug432": {"stat": "pass", "details": {}}, "MLDebug433": {"stat": "pass", "details": {}}, "MLDebug434": {"stat": "pass", "details": {}}, "MLDebug435": {"stat": "pass", "details": {}}, "MLDebug436": {"stat": "pass", "details": {}}, "MLDebug437": {"stat": "pass", "details": {}}, "MLDebug438": {"stat": "pass", "details": {}}, "MLDebug439": {"stat": "pass", "details": {}}, "MLDebug440": {"stat": "pass", "details": {}}, "MLDebug441": {"stat": "pass", "details": {}}, "MLDebug442": {"stat": "pass", "details": {}}, "MLDebug443": {"stat": "fail", "details": {"test_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_empty_dataframe\nAssertionError: (None, None) is not None\n", "test_missing_columns": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_missing_columns\nAssertionError: (None, None) is not None\n", "test_no_rows_matching_criteria": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_no_rows_matching_criteria\nAssertionError: (None, None) is not None\n", "test_non_numeric_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_non_numeric_data\nAssertionError: (None, None) is not None\n"}}, "MLDebug444": {"stat": "pass", "details": {}}, "MLDebug445": {"stat": "pass", "details": {}}, "MLDebug446": {"stat": "pass", "details": {}}, "MLDebug447": {"stat": "pass", "details": {}}, "MLDebug448": {"stat": "pass", "details": {}}, "MLDebug449": {"stat": "pass", "details": {}}, "MLDebug450": {"stat": "pass", "details": {}}, "MLDebug451": {"stat": "pass", "details": {}}, "MLDebug452": {"stat": "pass", "details": {}}, "MLDebug453": {"stat": "pass", "details": {}}, "MLDebug454": {"stat": "pass", "details": {}}, "MLDebug455": {"stat": "pass", "details": {}}, "MLDebug456": {"stat": "pass", "details": {}}, "MLDebug457": {"stat": "pass", "details": {}}, "MLDebug458": {"stat": "pass", "details": {}}, "MLDebug459": {"stat": "pass", "details": {}}, "MLDebug460": {"stat": "pass", "details": {}}, "MLDebug461": {"stat": "pass", "details": {}}, "MLDebug462": {"stat": "fail", "details": {"test_non_numeric_data_raises": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_non_numeric_data_raises\nAssertionError: TypeError not raised\n"}}, "MLDebug463": {"stat": "pass", "details": {}}, "MLDebug464": {"stat": "pass", "details": {}}, "MLDebug465": {"stat": "pass", "details": {}}, "MLDebug466": {"stat": "fail", "details": {"test_with_5x1_array": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_with_5x1_array\nAssertionError: Tuples differ: (5, 2) != (5, 1)\n\nFirst differing element 1:\n2\n1\n\n- (5, 2)\n?     ^\n\n+ (5, 1)\n?     ^\n : DataFrame shape should be (5, 1) for a single component.\n"}}, "MLDebug467": {"stat": "pass", "details": {}}, "MLDebug468": {"stat": "pass", "details": {}}, "MLDebug469": {"stat": "pass", "details": {}}, "MLDebug470": {"stat": "pass", "details": {}}, "MLDebug471": {"stat": "pass", "details": {}}, "MLDebug472": {"stat": "pass", "details": {}}, "MLDebug473": {"stat": "pass", "details": {}}, "MLDebug474": {"stat": "pass", "details": {}}, "MLDebug475": {"stat": "pass", "details": {}}, "MLDebug476": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 25)"}}, "MLDebug477": {"stat": "pass", "details": {}}, "MLDebug478": {"stat": "pass", "details": {}}, "MLDebug479": {"stat": "pass", "details": {}}, "MLDebug480": {"stat": "pass", "details": {}}, "MLDebug481": {"stat": "pass", "details": {}}, "MLDebug482": {"stat": "pass", "details": {}}, "MLDebug483": {"stat": "pass", "details": {}}, "MLDebug484": {"stat": "pass", "details": {}}, "MLDebug485": {"stat": "pass", "details": {}}, "MLDebug486": {"stat": "pass", "details": {}}, "MLDebug487": {"stat": "pass", "details": {}}, "MLDebug488": {"stat": "pass", "details": {}}, "MLDebug489": {"stat": "pass", "details": {}}, "MLDebug490": {"stat": "pass", "details": {}}, "MLDebug491": {"stat": "pass", "details": {}}, "MLDebug492": {"stat": "pass", "details": {}}, "MLDebug493": {"stat": "pass", "details": {}}, "MLDebug494": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'top_selling_produc' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'top_selling_produc' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'top_selling_produc' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'top_selling_produc' is not defined\n"}}, "MLDebug495": {"stat": "pass", "details": {}}, "MLDebug496": {"stat": "pass", "details": {}}, "MLDebug497": {"stat": "pass", "details": {}}, "MLDebug498": {"stat": "pass", "details": {}}, "MLDebug499": {"stat": "pass", "details": {}}, "MLDebug500": {"stat": "pass", "details": {}}, "MLDebug501": {"stat": "pass", "details": {}}, "MLDebug502": {"stat": "pass", "details": {}}, "MLDebug503": {"stat": "pass", "details": {}}, "MLDebug504": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_4\nAssertionError: False is not true\n"}}, "MLDebug505": {"stat": "pass", "details": {}}, "MLDebug506": {"stat": "pass", "details": {}}, "MLDebug507": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_3\nAssertionError: 14 != 610 : Unexpected number of lines in the plot\n"}}, "MLDebug508": {"stat": "pass", "details": {}}, "MLDebug509": {"stat": "pass", "details": {}}, "MLDebug510": {"stat": "pass", "details": {}}, "MLDebug511": {"stat": "pass", "details": {}}, "MLDebug512": {"stat": "fail", "details": {"test_data_points_count": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_data_points_count\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_return_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_return_type\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_value_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_value_range\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_value_truncation": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_value_truncation\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n"}}, "MLDebug513": {"stat": "pass", "details": {}}, "MLDebug514": {"stat": "pass", "details": {}}, "MLDebug515": {"stat": "pass", "details": {}}, "MLDebug516": {"stat": "pass", "details": {}}, "MLDebug517": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 21)"}}, "MLDebug518": {"stat": "pass", "details": {}}, "MLDebug519": {"stat": "pass", "details": {}}, "MLDebug520": {"stat": "pass", "details": {}}, "MLDebug521": {"stat": "pass", "details": {}}, "MLDebug522": {"stat": "pass", "details": {}}, "MLDebug523": {"stat": "pass", "details": {}}, "MLDebug524": {"stat": "pass", "details": {}}, "MLDebug525": {"stat": "pass", "details": {}}, "MLDebug526": {"stat": "pass", "details": {}}, "MLDebug527": {"stat": "pass", "details": {}}, "MLDebug528": {"stat": "pass", "details": {}}, "MLDebug529": {"stat": "pass", "details": {}}, "MLDebug530": {"stat": "pass", "details": {}}, "MLDebug531": {"stat": "pass", "details": {}}, "MLDebug532": {"stat": "pass", "details": {}}, "MLDebug533": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_5\nAssertionError: Exception not raised\n"}}, "MLDebug534": {"stat": "pass", "details": {}}, "MLDebug535": {"stat": "pass", "details": {}}, "MLDebug536": {"stat": "fail", "details": {"test_encode_basic_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 15, in test_encode_basic_dataframe\n  File \"__test__.py\", line 5, in task_func\nAttributeError: 'dict' object has no attribute 'to_csv'\n", "test_encode_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_encode_empty_dataframe\n  File \"__test__.py\", line 5, in task_func\nAttributeError: 'dict' object has no attribute 'to_csv'\n", "test_encode_with_different_columns": "Traceback (most recent call last):\n  File \"__test__.py\", line 20, in test_encode_with_different_columns\n  File \"__test__.py\", line 5, in task_func\nAttributeError: 'dict' object has no attribute 'to_csv'\n", "test_encode_with_specific_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_encode_with_specific_values\n  File \"__test__.py\", line 5, in task_func\nAttributeError: 'dict' object has no attribute 'to_csv'\n", "test_encode_with_string_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_encode_with_string_values\n  File \"__test__.py\", line 5, in task_func\nAttributeError: 'dict' object has no attribute 'to_csv'\n"}}, "MLDebug537": {"stat": "pass", "details": {}}, "MLDebug538": {"stat": "pass", "details": {}}, "MLDebug539": {"stat": "pass", "details": {}}, "MLDebug540": {"stat": "pass", "details": {}}, "MLDebug541": {"stat": "pass", "details": {}}, "MLDebug542": {"stat": "pass", "details": {}}, "MLDebug543": {"stat": "pass", "details": {}}, "MLDebug544": {"stat": "pass", "details": {}}, "MLDebug545": {"stat": "pass", "details": {}}, "MLDebug546": {"stat": "pass", "details": {}}, "MLDebug547": {"stat": "pass", "details": {}}, "MLDebug548": {"stat": "pass", "details": {}}, "MLDebug549": {"stat": "fail", "details": {"test_string_with_special_characters": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_string_with_special_characters\nAssertionError: Lists differ: ['special', 'chars'] != ['special', 'chars', '']\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n''\n\n- ['special', 'chars']\n+ ['special', 'chars', '']\n?                    ++++\n\n", "test_string_with_whitespaces": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_string_with_whitespaces\nAssertionError: Lists differ: ['extra', 'whitespaces'] != ['', 'extra', 'whitespaces', '']\n\nFirst differing element 0:\n'extra'\n''\n\nSecond list contains 2 additional elements.\nFirst extra element 2:\n'whitespaces'\n\n- ['extra', 'whitespaces']\n+ ['', 'extra', 'whitespaces', '']\n?  ++++                      ++++\n\n"}}, "MLDebug550": {"stat": "pass", "details": {}}, "MLDebug551": {"stat": "pass", "details": {}}, "MLDebug552": {"stat": "pass", "details": {}}, "MLDebug553": {"stat": "pass", "details": {}}, "MLDebug554": {"stat": "pass", "details": {}}, "MLDebug555": {"stat": "pass", "details": {}}, "MLDebug556": {"stat": "pass", "details": {}}, "MLDebug557": {"stat": "pass", "details": {}}, "MLDebug558": {"stat": "pass", "details": {}}, "MLDebug559": {"stat": "pass", "details": {}}, "MLDebug560": {"stat": "pass", "details": {}}, "MLDebug561": {"stat": "pass", "details": {}}, "MLDebug562": {"stat": "pass", "details": {}}, "MLDebug563": {"stat": "fail", "details": {"test_millisecond_difference": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_millisecond_difference\nAssertionError: Lists differ: [0.5, 0.5] != [0, 0]\n\nFirst differing element 0:\n0.5\n0\n\n- [0.5, 0.5]\n?   --   --\n\n+ [0, 0]\n"}}, "MLDebug564": {"stat": "pass", "details": {}}, "MLDebug565": {"stat": "pass", "details": {}}, "MLDebug566": {"stat": "pass", "details": {}}, "MLDebug567": {"stat": "pass", "details": {}}, "MLDebug568": {"stat": "fail", "details": {"test_data_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_data_range\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/tools/datetimes.py\", line 1099, in to_datetime\n    result = convert_listlike(argc, format)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/tools/datetimes.py\", line 435, in _convert_listlike_datetimes\n    result, tz_parsed = objects_to_datetime64(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arrays/datetimes.py\", line 2398, in objects_to_datetime64\n    result, tz_parsed = tslib.array_to_datetime(\n  File \"tslib.pyx\", line 414, in pandas._libs.tslib.array_to_datetime\n  File \"tslib.pyx\", line 596, in pandas._libs.tslib.array_to_datetime\n  File \"tslib.pyx\", line 588, in pandas._libs.tslib.array_to_datetime\nTypeError: <class 'pandas._libs.tslibs.period.Period'> is not convertible to datetime, at position 0\n"}}, "MLDebug569": {"stat": "fail", "details": {"test_data_points_length": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 62, in test_data_points_length\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_data_points_range": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_data_points_range\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_title_format": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 38, in test_title_format\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_xlabel_format": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 46, in test_xlabel_format\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_ylabel_format": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 54, in test_ylabel_format\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug570": {"stat": "fail", "details": {"test_valid_xml": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 54, in test_valid_xml\n  File \"__test__.py\", line 16, in task_func\n  File \"src/lxml/etree.pyx\", line 3306, in lxml.etree.fromstring\n  File \"src/lxml/parser.pxi\", line 1994, in lxml.etree._parseMemoryDocument\nValueError: can only parse strings\n"}}, "MLDebug571": {"stat": "pass", "details": {}}, "MLDebug572": {"stat": "fail", "details": {"test_download_invald_zip_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_download_invald_zip_file\nAssertionError: 'Error: The URL does not point to a ZIP file.' != 'Error: The downloaded file is not a valid ZIP file.'\n- Error: The URL does not point to a ZIP file.\n+ Error: The downloaded file is not a valid ZIP file.\n\n"}}, "MLDebug573": {"stat": "fail", "details": {"test_network_error": "Traceback (most recent call last):\n  File \"__test__.py\", line 9, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nrequests.exceptions.ConnectionError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 86, in test_network_error\n  File \"__test__.py\", line 14, in task_func\nrequests.exceptions.HTTPError\n"}}, "MLDebug574": {"stat": "fail", "details": {"test_empty_xml": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_empty_xml\n  File \"__test__.py\", line 45, in check_csv_content\nAssertionError: Lists differ: [['root', '']] != [['element', 'data']]\n\nFirst differing element 0:\n['root', '']\n['element', 'data']\n\n- [['root', '']]\n+ [['element', 'data']]\n", "test_large_xml": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_large_xml\n  File \"__test__.py\", line 45, in check_csv_content\nAssertionError: Lists differ: [['root', ''], ['element', '0'], ['element',[1855 chars]99']] != [['element', 'data'], ['element', '0'], ['el[1862 chars]99']]\n\nFirst differing element 0:\n['root', '']\n['element', 'data']\n\nDiff is 2231 characters long. Set self.maxDiff to None to see it.\n", "test_nested_xml": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_nested_xml\n  File \"__test__.py\", line 45, in check_csv_content\nAssertionError: Lists differ: [['root', ''], ['parent', ''], ['child', 'data']] != [['element', 'data'], ['parent', ''], ['child', 'data']]\n\nFirst differing element 0:\n['root', '']\n['element', 'data']\n\n- [['root', ''], ['parent', ''], ['child', 'data']]\n?    ^^^\n\n+ [['element', 'data'], ['parent', ''], ['child', 'data']]\n?    ^^^^^^     ++++\n\n", "test_simple_xml": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_simple_xml\n  File \"__test__.py\", line 45, in check_csv_content\nAssertionError: Lists differ: [['root', ''], ['element', 'data']] != [['element', 'data'], ['element', 'data']]\n\nFirst differing element 0:\n['root', '']\n['element', 'data']\n\n- [['root', ''], ['element', 'data']]\n+ [['element', 'data'], ['element', 'data']]\n", "test_xml_with_attributes": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_xml_with_attributes\n  File \"__test__.py\", line 45, in check_csv_content\nAssertionError: Lists differ: [['root', ''], ['element', 'data']] != [['element', 'data'], ['element', 'data']]\n\nFirst differing element 0:\n['root', '']\n['element', 'data']\n\n- [['root', ''], ['element', 'data']]\n+ [['element', 'data'], ['element', 'data']]\n"}}, "MLDebug575": {"stat": "fail", "details": {"test_invalid_url": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_invalid_url\n  File \"__test__.py\", line 23, in task_func\nTypeError: a bytes-like object is required, not 'MagicMock'\n", "test_non_200_http_response": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_non_200_http_response\n  File \"__test__.py\", line 23, in task_func\nTypeError: a bytes-like object is required, not 'MagicMock'\n", "test_successful_download_and_extraction": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_successful_download_and_extraction\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/api.py\", line 73, in get\n    return request(\"get\", url, params=params, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/sessions.py\", line 589, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/sessions.py\", line 703, in send\n    r = adapter.send(request, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/adapters.py\", line 667, in send\n    resp = conn.urlopen(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 789, in urlopen\n    response = self._make_request(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 466, in _make_request\n    self._validate_conn(conn)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 1095, in _validate_conn\n    conn.connect()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connection.py\", line 693, in connect\n    self.sock = sock = self._new_conn()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connection.py\", line 199, in _new_conn\n    sock = connection.create_connection(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/util/connection.py\", line 73, in create_connection\n    sock.connect(sa)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 86, in signal_handler\n    raise TimeoutException(\"Timed out!\")\ncheck_utils.TimeoutException: Timed out!\n"}}, "MLDebug576": {"stat": "fail", "details": {"test_local_file_url": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 93, in test_local_file_url\nAssertionError: 0 != 1\n", "test_valid_webpage_url": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 82, in test_valid_webpage_url\nAssertionError: 0 != 1\n"}}, "MLDebug577": {"stat": "pass", "details": {}}, "MLDebug578": {"stat": "pass", "details": {}}, "MLDebug579": {"stat": "fail", "details": {"ALL": "No module named 'pytesseract'"}}, "MLDebug580": {"stat": "fail", "details": {"ALL": "No module named 'chardet'"}}, "MLDebug581": {"stat": "fail", "details": {"test_high_correlation": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_high_correlation\nAssertionError: Tuples differ: ('A', 'B') != ('A', 'A')\n\nFirst differing element 1:\n'B'\n'A'\n\n- ('A', 'B')\n?        ^\n\n+ ('A', 'A')\n?        ^\n\n", "test_negative_correlation": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_negative_correlation\nAssertionError: Tuples differ: ('A', 'C') != ('A', 'A')\n\nFirst differing element 1:\n'C'\n'A'\n\n- ('A', 'C')\n?        ^\n\n+ ('A', 'A')\n?        ^\n\n"}}, "MLDebug582": {"stat": "fail", "details": {"test_number_of_bins": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_number_of_bins\nAssertionError: False is not true\n"}}, "MLDebug583": {"stat": "pass", "details": {}}, "MLDebug584": {"stat": "pass", "details": {}}, "MLDebug585": {"stat": "pass", "details": {}}, "MLDebug586": {"stat": "pass", "details": {}}, "MLDebug587": {"stat": "pass", "details": {}}, "MLDebug588": {"stat": "fail", "details": {"test_smtp_server_connection_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 109, in test_smtp_server_connection_error\nAssertionError: SMTPConnectError not raised\n", "test_successful_email_dispatch": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 147, in test_successful_email_dispatch\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 920, in assert_called_with\n    raise AssertionError(error_message)\nAssertionError: expected call not found.\nExpected: SMTP('smtp.gmail.com', 587)\nActual: not called.\n", "test_successful_email_send": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 68, in test_successful_email_send\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 920, in assert_called_with\n    raise AssertionError(error_message)\nAssertionError: expected call not found.\nExpected: SMTP('smtp.gmail.com', 587)\nActual: not called.\n"}}, "MLDebug589": {"stat": "pass", "details": {}}, "MLDebug590": {"stat": "pass", "details": {}}, "MLDebug591": {"stat": "pass", "details": {}}, "MLDebug592": {"stat": "pass", "details": {}}, "MLDebug593": {"stat": "pass", "details": {}}, "MLDebug594": {"stat": "pass", "details": {}}, "MLDebug595": {"stat": "pass", "details": {}}, "MLDebug596": {"stat": "pass", "details": {}}, "MLDebug597": {"stat": "fail", "details": {"test_empty_lists": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_empty_lists\n  File \"__test__.py\", line 17, in task_func\nZeroDivisionError: integer division or modulo by zero\n"}}, "MLDebug598": {"stat": "fail", "details": {"test_valid_pairs": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_valid_pairs\nAssertionError: 'a:1' not found in ['_nolegend_', '_nolegend_', '_nolegend_', '_nolegend_', '_nolegend_'] : Expected pair a:1 not found in plotted pairs.\n"}}, "MLDebug599": {"stat": "fail", "details": {"test_default_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_default_input\nAssertionError: Tuples differ: (0, 0) != (10, 7)\n\nFirst differing element 0:\n0\n10\n\n- (0, 0)\n?     ^\n\n+ (10, 7)\n?  +   ^\n : The shape of the DataFrame with default inputs is not as expected.\n"}}, "MLDebug600": {"stat": "fail", "details": {"test_max_pairs": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_max_pairs\nAssertionError: 10 != 100\n", "test_pair_count": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_pair_count\nAssertionError: 1 != 7\n", "test_valid_pairs": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_valid_pairs\nValueError: not enough values to unpack (expected 2, got 1)\n"}}, "MLDebug601": {"stat": "fail", "details": {"test_pair_existence": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_pair_existence\nAssertionError: Items in the first set but not the second:\n'Earth:Iron'\n'Venus:Carbon'\n'Saturn:Carbon'\n'Uranus:Helium'\n'Venus:Iron'\n'Earth:Carbon'\n'Venus:Silicon'\n'Mercury:Helium'\n'Jupiter:Nickel'\n'Mercury:Magnesium'\n'Venus:Nitrogen'\n'Venus:Hydrogen'\n'Saturn:Oxygen'\n'Jupiter:Oxygen'\n'Jupiter:Nitrogen'\n'Neptune:Oxygen'\n'Earth:Hydrogen'\n'Mars:Oxygen'\n'Uranus:Nitrogen'\n'Jupiter:Magnesium'\n'Uranus:Carbon'\n'Neptune:Magnesium'\n'Earth:Silicon'\n'Venus:Nickel'\n'Mercury:Oxygen'\n'Uranus:Oxygen'\n", "test_uniqueness": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_uniqueness\nAssertionError: 72 != 51\n"}}, "MLDebug602": {"stat": "fail", "details": {"test_plot_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_plot_labels\n  File \"__test__.py\", line 42, in task_func\nNameError: name 'a' is not defined\n", "test_return_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_return_types\n  File \"__test__.py\", line 42, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug603": {"stat": "pass", "details": {}}, "MLDebug604": {"stat": "pass", "details": {}}, "MLDebug605": {"stat": "pass", "details": {}}, "MLDebug606": {"stat": "pass", "details": {}}, "MLDebug607": {"stat": "fail", "details": {"test_api_rate_limit_exceeded": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_api_rate_limit_exceeded\nAssertionError: Exception not raised\n"}}, "MLDebug608": {"stat": "pass", "details": {}}, "MLDebug609": {"stat": "pass", "details": {}}, "MLDebug610": {"stat": "fail", "details": {"test_color_cycle": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_color_cycle\nAssertionError: Lists differ: ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'b'] != [(0.0, 0.0, 1.0, 1), (0.0, 0.5, 0.0, 1), ([119 chars], 1)]\n\nFirst differing element 0:\n'b'\n(0.0, 0.0, 1.0, 1)\n\n- ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'b']\n+ [(0.0, 0.0, 1.0, 1),\n+  (0.0, 0.5, 0.0, 1),\n+  (1.0, 0.0, 0.0, 1),\n+  (0.0, 0.75, 0.75, 1),\n+  (0.75, 0.0, 0.75, 1),\n+  (0.75, 0.75, 0.0, 1),\n+  (0.0, 0.0, 0.0, 1),\n+  (0.0, 0.0, 1.0, 1)] : The colors of the plotted lines should follow the specified cycle.\n", "test_y_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_y_values\nAssertionError: False is not true : The y-values should be shuffled numbers from the range [1, len(list)].\n"}}, "MLDebug611": {"stat": "fail", "details": {"test_ist_to_utc": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_ist_to_utc\nAssertionError: '04/01/09 00:00:00.000000' != '01/04/09 00:00:00.000000'\n- 04/01/09 00:00:00.000000\n?     ---\n+ 01/04/09 00:00:00.000000\n? +++\n\n", "test_utc_to_ist": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_utc_to_ist\nAssertionError: '04/01/09 05:30:00.000000' != '01/04/09 05:30:00.000000'\n- 04/01/09 05:30:00.000000\n?     ---\n+ 01/04/09 05:30:00.000000\n? +++\n\n"}}, "MLDebug612": {"stat": "pass", "details": {}}, "MLDebug613": {"stat": "pass", "details": {}}, "MLDebug614": {"stat": "fail", "details": {"test_all_zero_prices": "Traceback (most recent call last):\n  File \"__test__.py\", line 105, in test_all_zero_prices\n  File \"__test__.py\", line 8, in task_func\nAttributeError: 'list' object has no attribute 'str'\n", "test_basic_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_basic_functionality\n  File \"__test__.py\", line 8, in task_func\nAttributeError: 'list' object has no attribute 'str'\n", "test_large_sample_size": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_large_sample_size\n  File \"__test__.py\", line 8, in task_func\nAttributeError: 'list' object has no attribute 'str'\n", "test_non_uniform_distribution": "Traceback (most recent call last):\n  File \"__test__.py\", line 121, in test_non_uniform_distribution\n  File \"__test__.py\", line 8, in task_func\nAttributeError: 'list' object has no attribute 'str'\n"}}, "MLDebug615": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug616": {"stat": "pass", "details": {}}, "MLDebug617": {"stat": "fail", "details": {"test_empty_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_empty_input\n  File \"__test__.py\", line 16, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_stats_py.py\", line 4816, in pearsonr\n    raise ValueError('`x` and `y` must have length at least 2.')\nValueError: `x` and `y` must have length at least 2.\n"}}, "MLDebug618": {"stat": "pass", "details": {}}, "MLDebug619": {"stat": "fail", "details": {"test_empty_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 69, in test_empty_file\nAssertionError: Empty DataFrame\nColumns: [Column1, Column2, F-value, P-value]\nIndex: [] is not None\n", "test_single_column": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 80, in test_single_column\nAssertionError: Empty DataFrame\nColumns: [Column1, Column2, F-value, P-value]\nIndex: [] is not None\n", "test_with_special_characters": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 115, in test_with_special_characters\nAssertionError: Empty DataFrame\nColumns: [Column1, Column2, F-value, P-value]\nIndex: [] is not None\n", "test_multiple_columns": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'ANOVA Results'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 91, in test_multiple_columns\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'ANOVA Results'\n", "test_numerical_and_non_numerical_columns": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 100, in test_numerical_and_non_numerical_columns\n  File \"__test__.py\", line 41, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/feature_selection/_univariate_selection.py\", line 93, in f_oneway\n    args = [as_float_array(a) for a in args]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/feature_selection/_univariate_selection.py\", line 93, in <listcomp>\n    args = [as_float_array(a) for a in args]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 268, in as_float_array\n    return check_array(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/utils/validation.py\", line 1087, in check_array\n    raise ValueError(\nValueError: Found array with 0 sample(s) (shape=(0,)) while a minimum of 1 is required.\n"}}, "MLDebug620": {"stat": "fail", "details": {"test_custom_items_and_locations": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_custom_items_and_locations\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 1030, in __call__\n    return plot_backend.plot(data, kind=kind, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/__init__.py\", line 71, in plot\n    plot_obj.generate()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 499, in generate\n    self._compute_plot_data()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 698, in _compute_plot_data\n    raise TypeError(\"no numeric data to plot\")\nTypeError: no numeric data to plot\n", "test_plot_title_and_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_plot_title_and_labels\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 1030, in __call__\n    return plot_backend.plot(data, kind=kind, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/__init__.py\", line 71, in plot\n    plot_obj.generate()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 499, in generate\n    self._compute_plot_data()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 698, in _compute_plot_data\n    raise TypeError(\"no numeric data to plot\")\nTypeError: no numeric data to plot\n", "test_return_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_return_type\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 1030, in __call__\n    return plot_backend.plot(data, kind=kind, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/__init__.py\", line 71, in plot\n    plot_obj.generate()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 499, in generate\n    self._compute_plot_data()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 698, in _compute_plot_data\n    raise TypeError(\"no numeric data to plot\")\nTypeError: no numeric data to plot\n", "test_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_value\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 1030, in __call__\n    return plot_backend.plot(data, kind=kind, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/__init__.py\", line 71, in plot\n    plot_obj.generate()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 499, in generate\n    self._compute_plot_data()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/core.py\", line 698, in _compute_plot_data\n    raise TypeError(\"no numeric data to plot\")\nTypeError: no numeric data to plot\n"}}, "MLDebug621": {"stat": "fail", "details": {"test_invalid_json_structure": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_invalid_json_structure\nAssertionError: SyntaxError not raised\n"}}, "MLDebug622": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_case_2\nAssertionError: <class 'dict'> != []\n", "test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 91, in test_case_1\nTypeError: argument of type 'type' is not iterable\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/ast.py\", line 64, in literal_eval\n    node_or_string = parse(node_or_string.lstrip(\" \\t\"), mode='eval')\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/ast.py\", line 50, in parse\n    return compile(source, filename, mode, flags,\n  File \"<unknown>\", line 1\n    {'key1': 'value1'}{'key2': 'value2'}\n                      ^\nSyntaxError: invalid syntax\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 110, in test_case_5\n  File \"__test__.py\", line 29, in task_func\nValueError: Invalid dictionary representation in file testdir_task_func/multi_line_directory/1.txt\n"}}, "MLDebug623": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug624": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug625": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug626": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: Lists differ: [('python', 2), ('is', 1)] != [('Python', 2), ('is', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('is', 1)]\n?    ^\n\n+ [('Python', 2), ('is', 1)]\n?    ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\nAssertionError: Lists differ: [('python', 2), ('visit', 1)] != [('Python', 2), ('Visit', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('visit', 1)]\n?    ^              ^\n\n+ [('Python', 2), ('Visit', 1)]\n?    ^              ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_3\nAssertionError: Lists differ: [('python', 2), ('visit', 1)] != [('Python', 2), ('Visit', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('visit', 1)]\n?    ^              ^\n\n+ [('Python', 2), ('Visit', 1)]\n?    ^              ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_5\nAssertionError: Lists differ: [('hello', 1), ('world', 1)] != [('Hello', 1), ('world', 1)]\n\nFirst differing element 0:\n('hello', 1)\n('Hello', 1)\n\n- [('hello', 1), ('world', 1)]\n?    ^\n\n+ [('Hello', 1), ('world', 1)]\n?    ^\n\n"}}, "MLDebug627": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_3\nAssertionError: Lists differ: [('is[47 chars] 1), ('with', 1), ('its', 2), ('of', 1), ('to', 1), ('for', 1)] != [('is[47 chars] 1), ('with', 1), ('its', 1), ('of', 1), ('to', 1), ('for', 1)]\n\nFirst differing element 6:\n('its', 2)\n('its', 1)\n\n  [('is', 1),\n   ('an', 1),\n   ('and', 4),\n   ('by', 1),\n   ('in', 1),\n   ('with', 1),\n-  ('its', 2),\n?          ^\n\n+  ('its', 1),\n?          ^\n\n   ('of', 1),\n   ('to', 1),\n   ('for', 1)]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_5\nAssertionError: Lists differ: [('i', 1)] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n('i', 1)\n\n- [('i', 1)]\n+ []\n"}}, "MLDebug628": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\n  File \"__test__.py\", line 17, in task_func\nNameError: name 'np' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\n  File \"__test__.py\", line 17, in task_func\nNameError: name 'np' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_3\n  File \"__test__.py\", line 17, in task_func\nNameError: name 'np' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_4\n  File \"__test__.py\", line 17, in task_func\nNameError: name 'np' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_5\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line 2091, in fit_transform\n    X = super().fit_transform(raw_documents)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/base.py\", line 1473, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line 1372, in fit_transform\n    vocabulary, X = self._count_vocab(raw_documents, self.fixed_vocabulary_)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/feature_extraction/text.py\", line 1278, in _count_vocab\n    raise ValueError(\nValueError: empty vocabulary; perhaps the documents only contain stop words\n"}}, "MLDebug629": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 53, in test_case_1\n  File \"__test__.py\", line 7, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_case_3\n  File \"__test__.py\", line 7, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_5\n  File \"__test__.py\", line 15, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/threading.py\", line 1100, in join\n    self._wait_for_tstate_lock(timeout=max(timeout, 0))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/threading.py\", line 1116, in _wait_for_tstate_lock\n    if lock.acquire(block, timeout):\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 86, in signal_handler\n    raise TimeoutException(\"Timed out!\")\ncheck_utils.TimeoutException: Timed out!\n"}}, "MLDebug630": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 55, in test_case_1\nAssertionError: False is not true\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_case_4\nAssertionError: False is not true\n"}}, "MLDebug631": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 13, in test_case_1\nAssertionError: {} != {0: 2}\n- {}\n+ {0: 2}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in test_case_2\nAssertionError: {} != {2: 2}\n- {}\n+ {2: 2}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_case_3\nAssertionError: {} != {5: 1}\n- {}\n+ {5: 1}\n"}}, "MLDebug632": {"stat": "fail", "details": {"test_return_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_return_value\nAssertionError: Lists differ: [28.0[333 chars]7.0, -9.0, -5.0, 31.0, -7.0, 18.0, 7.0, 15.0, [1744 chars]18.0] != [28.0[333 chars]7.0, 0.0, 0.0, 0.0, -9.0, -5.0, 31.0, -7.0, 18[1779 chars]18.0]\n\nFirst differing element 59:\n-9.0\n0.0\n\nSecond list contains 7 additional elements.\nFirst extra element 365:\n6.0\n\nDiff is 3284 characters long. Set self.maxDiff to None to see it. : DataFrame contents should match the expected output\n"}}, "MLDebug633": {"stat": "pass", "details": {}}, "MLDebug634": {"stat": "pass", "details": {}}, "MLDebug635": {"stat": "pass", "details": {}}, "MLDebug636": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_1\nAssertionError: {'EMP$$002': 3, 'EMP$$001': 4, 'EMP$$003': 1} != {'EMP$$001': 5, 'EMP$$002': 3, 'EMP$$003': 1}\n- {'EMP$$001': 4, 'EMP$$002': 3, 'EMP$$003': 1}\n?              ^\n\n+ {'EMP$$001': 5, 'EMP$$002': 3, 'EMP$$003': 1}\n?              ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_2\nAssertionError: {'EMP$$005': 1, 'EMP$$004': 1, 'EMP$$006': 1} != {'EMP$$004': 2, 'EMP$$005': 1, 'EMP$$006': 1}\n- {'EMP$$004': 1, 'EMP$$005': 1, 'EMP$$006': 1}\n?              ^\n\n+ {'EMP$$004': 2, 'EMP$$005': 1, 'EMP$$006': 1}\n?              ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_3\nAssertionError: {} != {'error': 'The file /path/to/non_existent_file.csv was not found.'}\n- {}\n+ {'error': 'The file /path/to/non_existent_file.csv was not found.'}\n"}}, "MLDebug637": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_4\nAssertionError: 'EMP$$X' not found in {'EMP$$Y': [8155, 8445, 5331, 7121, 9188, 8980, 8317, 7484, 8904, 7933]}\n"}}, "MLDebug638": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_3\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/statistics.py\", line 328, in mean\n    raise StatisticsError('mean requires at least one data point')\nstatistics.StatisticsError: mean requires at least one data point\n"}}, "MLDebug639": {"stat": "pass", "details": {}}, "MLDebug640": {"stat": "fail", "details": {"test_api_failure_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 128, in test_api_failure_handling\nAssertionError: Exception not raised\n", "test_repeated_urls": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 125, in test_repeated_urls\nAssertionError: 2 != 1\n"}}, "MLDebug641": {"stat": "fail", "details": {"test_api_failure_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 133, in test_api_failure_handling\nAssertionError: Exception not raised\n", "test_repeated_urls": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 130, in test_repeated_urls\nAssertionError: 2 != 1\n"}}, "MLDebug642": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\nAssertionError: {'www.google.com,': '192.0.2.1', 'www.python.org': '192.0.2.2'} != {'www.google.com': '192.0.2.1', 'www.python.org': '192.0.2.2'}\n- {'www.google.com,': '192.0.2.1', 'www.python.org': '192.0.2.2'}\n?                 -\n\n+ {'www.google.com': '192.0.2.1', 'www.python.org': '192.0.2.2'}\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_5\nAssertionError: {'www.google.com,': '192.0.2.1'} != {'www.google.com': '192.0.2.1'}\n- {'www.google.com,': '192.0.2.1'}\n?                 -\n\n+ {'www.google.com': '192.0.2.1'}\n"}}, "MLDebug643": {"stat": "fail", "details": {"test_basic_https_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_basic_https_functionality\nAssertionError: {'www.google.com,': '2023-06-15 12:00:00', 'www.python.or[21 chars]:00'} != {'www.google.com': '2023-06-15 12:00:00', 'www.python.org[20 chars]:00'}\n- {'www.google.com,': '2023-06-15 12:00:00',\n?                 -\n\n+ {'www.google.com': '2023-06-15 12:00:00',\n   'www.python.org': '2023-06-15 12:00:00'}\n", "test_urls_with_ports_and_queries": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_urls_with_ports_and_queries\nAssertionError: {'www.example.com': '2023-06-15 12:00:00', 'api.example.or[21 chars]:00'} != {'www.example.com:8080': '2023-06-15 12:00:00', 'api.examp[26 chars]:00'}\n  {'api.example.org': '2023-06-15 12:00:00',\n-  'www.example.com': '2023-06-15 12:00:00'}\n+  'www.example.com:8080': '2023-06-15 12:00:00'}\n?                  +++++\n\n"}}, "MLDebug644": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 32) (__test__.py, line 32)"}}, "MLDebug645": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 57, in test_case_3\nAssertionError: AttributeError not raised\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 62, in test_case_4\nAssertionError: AttributeError not raised\n", "test_case_6": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 77, in test_case_6\nAssertionError: {'error': 'API request failed with status code 400'} != {'error': 'Bad Request'}\n- {'error': 'API request failed with status code 400'}\n+ {'error': 'Bad Request'}\n", "test_case_7": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 82, in test_case_7\nAssertionError: ConnectionError not raised\n"}}, "MLDebug646": {"stat": "pass", "details": {}}, "MLDebug647": {"stat": "pass", "details": {}}, "MLDebug648": {"stat": "pass", "details": {}}, "MLDebug649": {"stat": "fail", "details": {"test_deterministic_output_with_fixed_salt": "Traceback (most recent call last):\n  File \"__test__.py\", line 94, in test_deterministic_output_with_fixed_salt\nAssertionError: 'e3JdmElmE9laUspigYBJ/bvtbZKFky8edK5c0LrKiF0=' != 'aO4uv7LG2VDNU60XGvUJnTfoq/ocFHQgvHq/KBUmAus='\n- e3JdmElmE9laUspigYBJ/bvtbZKFky8edK5c0LrKiF0=\n+ aO4uv7LG2VDNU60XGvUJnTfoq/ocFHQgvHq/KBUmAus=\n\n", "test_empty_password": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_empty_password\nAssertionError: 'd8IOOSky8JX26aoePtSfqL7SSeCXekpJvtyvbLm2voU=' != '9AqqcQhEF+LTOE5dH8MeWZ/LoxNo0FV22w+vylb4Sto='\n- d8IOOSky8JX26aoePtSfqL7SSeCXekpJvtyvbLm2voU=\n+ 9AqqcQhEF+LTOE5dH8MeWZ/LoxNo0FV22w+vylb4Sto=\n\n", "test_long_password": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_long_password\nAssertionError: 'szrRQKggv4t+q24JQL8C8kpxY6z+aCtT2dsXn9tSosE=' != 'CG9Xg2uIVzk0jAF184OE0DnGljdWasmECP5nSD29Op4='\n- szrRQKggv4t+q24JQL8C8kpxY6z+aCtT2dsXn9tSosE=\n+ CG9Xg2uIVzk0jAF184OE0DnGljdWasmECP5nSD29Op4=\n\n", "test_special_characters_in_password": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_special_characters_in_password\nAssertionError: '0FdaM+yvfMZtheu5kAgTxkYQhUBB60Nr6CioUWh8Kg8=' != 'tvohx6XTROez0q3g4CfgFoTFSdKzY8cIyVrnCc1XcHw='\n- 0FdaM+yvfMZtheu5kAgTxkYQhUBB60Nr6CioUWh8Kg8=\n+ tvohx6XTROez0q3g4CfgFoTFSdKzY8cIyVrnCc1XcHw=\n\n", "test_invalid_inputs": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_invalid_inputs\n  File \"__test__.py\", line 10, in task_func\nAttributeError: 'NoneType' object has no attribute 'encode'\n"}}, "MLDebug650": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 35, in test_case_1\n  File \"__test__.py\", line 13, in task_func\nTypeError: 'Mock' object is not iterable\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 41, in test_case_2\n  File \"__test__.py\", line 13, in task_func\nTypeError: 'Mock' object is not iterable\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 47, in test_case_3\n  File \"__test__.py\", line 13, in task_func\nTypeError: 'Mock' object is not iterable\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 53, in test_case_4\n  File \"__test__.py\", line 13, in task_func\nTypeError: 'Mock' object is not iterable\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 59, in test_case_5\n  File \"__test__.py\", line 13, in task_func\nTypeError: 'Mock' object is not iterable\n"}}, "MLDebug651": {"stat": "fail", "details": {"test_key_error_raise": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_key_error_raise\n  File \"__test__.py\", line 6, in task_func\nTypeError: The value of the 'array' key in my_dict is not a numpy array\n"}}, "MLDebug652": {"stat": "fail", "details": {"test_custom_values_successful_script": "Traceback (most recent call last):\n  File \"__test__.py\", line 19, in task_func\nRuntimeError: Script execution failed with exit status: 127\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 73, in test_custom_values_successful_script\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: Script execution failed with exit status: 127\n", "test_default_values_successful_script": "Traceback (most recent call last):\n  File \"__test__.py\", line 19, in task_func\nRuntimeError: Script execution failed with exit status: 127\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 51, in test_default_values_successful_script\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: Script execution failed with exit status: 127\n", "test_log_data_format": "Traceback (most recent call last):\n  File \"__test__.py\", line 19, in task_func\nRuntimeError: Script execution failed with exit status: 127\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 82, in test_log_data_format\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: Script execution failed with exit status: 127\n", "test_non_zero_exit_status": "Traceback (most recent call last):\n  File \"__test__.py\", line 19, in task_func\nRuntimeError: Script execution failed with exit status: 127\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_non_zero_exit_status\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: Script execution failed with exit status: 127\n"}}, "MLDebug653": {"stat": "pass", "details": {}}, "MLDebug654": {"stat": "fail", "details": {"test_output_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_output_types\nAssertionError: Lists differ: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0[453 chars] 0.0] != [2.0, 2.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0[53 chars] 2.0]\n\nFirst differing element 0:\n0.0\n2.0\n\nFirst list contains 80 additional elements.\nFirst extra element 20:\n0.0\n\nDiff is 928 characters long. Set self.maxDiff to None to see it. : DataFrame contents should match the expected output\n", "test_plot_title": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_plot_title\nAssertionError: '' != 'Histogram of Random Numbers'\n+ Histogram of Random Numbers\n"}}, "MLDebug655": {"stat": "fail", "details": {"test_default_animals": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_default_animals\nAssertionError: Lists differ: ['Lion,42.0,30.5,33.250563904992646', 'Elephant,44.4,41.5,[128 chars]134'] != ['Lion,42.0,30.5,95,33.250563904992646', 'Elephant,44.4,41[143 chars]134']\n\nFirst differing element 0:\n'Lion,42.0,30.5,33.250563904992646'\n'Lion,42.0,30.5,95,33.250563904992646'\n\n- ['Lion,42.0,30.5,33.250563904992646',\n+ ['Lion,42.0,30.5,95,33.250563904992646',\n?                +++\n\n-  'Elephant,44.4,41.5,34.1970758983864',\n+  'Elephant,44.4,41.5,12,34.1970758983864',\n?                      +++\n\n-  'Tiger,61.1,71.0,28.76264939118092',\n+  'Tiger,61.1,71.0,30,28.76264939118092',\n?                 +++\n\n-  'Giraffe,51.8,54.5,29.208902752414375',\n+  'Giraffe,51.8,54.5,54,29.208902752414375',\n?                    +++\n\n-  'Panda,35.8,32.0,24.595934623429134']\n+  'Panda,35.8,32.0,44,24.595934623429134']\n?                  +++\n : DataFrame contents should match the expected output\n", "test_statistics_columns": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_statistics_columns\nAssertionError: Lists differ: ['Animal', 'Mean', 'Median', 'Standard Deviation'] != ['Animal', 'Mean', 'Median', 'Mode', 'Standard Deviation']\n\nFirst differing element 3:\n'Standard Deviation'\n'Mode'\n\nSecond list contains 1 additional elements.\nFirst extra element 4:\n'Standard Deviation'\n\n- ['Animal', 'Mean', 'Median', 'Standard Deviation']\n+ ['Animal', 'Mean', 'Median', 'Mode', 'Standard Deviation']\n?                              ++++++++\n\n", "test_positive_counts": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Mode'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 54, in test_positive_counts\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Mode'\n"}}, "MLDebug656": {"stat": "fail", "details": {"test_plot_shown": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 98, in test_plot_shown\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 908, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called once. Called 0 times.\n", "test_walk_length": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_walk_length\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 908, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'plot' to have been called once. Called 0 times.\n", "test_starting_point": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 76, in test_starting_point\nTypeError: cannot unpack non-iterable NoneType object\n", "test_step_direction": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_step_direction\nTypeError: cannot unpack non-iterable NoneType object\n"}}, "MLDebug657": {"stat": "fail", "details": {"test_invalid_url": "Traceback (most recent call last):\n  File \"__test__.py\", line 7, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nrequests.exceptions.ConnectionError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 66, in test_invalid_url\n  File \"__test__.py\", line 10, in task_func\nrequests.exceptions.ConnectionError: Failed to connect to the URL\n"}}, "MLDebug658": {"stat": "pass", "details": {}}, "MLDebug659": {"stat": "fail", "details": {"test_various_hex_formats": "Traceback (most recent call last):\n  File \"__test__.py\", line 9, in task_func\nValueError: non-hexadecimal number found in fromhex() arg at position 0\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 39, in test_various_hex_formats\n  File \"__test__.py\", line 11, in task_func\nbinascii.Error: Non-hexadecimal digit found\n"}}, "MLDebug660": {"stat": "fail", "details": {"test_various_hex_formats": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_various_hex_formats\n  File \"__test__.py\", line 9, in task_func\nValueError: non-hexadecimal number found in fromhex() arg at position 0\n"}}, "MLDebug661": {"stat": "fail", "details": {"test_alternative_format": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_alternative_format\nAssertionError: 256 != 3\n", "test_empty_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_empty_string\nAssertionError: False is not true\n", "test_valid_hex_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_valid_hex_string\nAssertionError: 256 != 3\n"}}, "MLDebug662": {"stat": "pass", "details": {}}, "MLDebug663": {"stat": "pass", "details": {}}, "MLDebug664": {"stat": "fail", "details": {"test_solution_accuracy": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_solution_accuracy\nAssertionError: -10.0 != 2 within 7 places (12.0 difference)\n", "test_solution_plot": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_solution_plot\nAssertionError: False is not true\n"}}, "MLDebug665": {"stat": "pass", "details": {}}, "MLDebug666": {"stat": "fail", "details": {"test_failed_ping": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_failed_ping\nAssertionError: False is not true : All IPs should have False status for a failed ping.\n", "test_ip_range_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 83, in test_ip_range_handling\nAssertionError: 0 != 4 : Expected to attempt pinging 4 IPs.\n", "test_successful_ping": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_successful_ping\nAssertionError: False is not true : All IPs should have True status for a successful ping.\n"}}, "MLDebug667": {"stat": "fail", "details": {"test_open_port": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 46, in test_open_port\nAssertionError: False is not true : At least one port should be open for the test range.\n"}}, "MLDebug668": {"stat": "fail", "details": {"test_command_failure_with_specific_exit_code": "Traceback (most recent call last):\n  File \"__test__.py\", line 97, in test_command_failure_with_specific_exit_code\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_empty_csv_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_empty_csv_file\n  File \"__test__.py\", line 26, in task_func\nUnboundLocalError: local variable 'output_file' referenced before assignment\n", "test_invalid_command": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_invalid_command\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_mixed_commands": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_mixed_commands\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_successful_command_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_successful_command_execution\nTypeError: object of type '_io.TextIOWrapper' has no len()\n"}}, "MLDebug669": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_4\nAssertionError: KeyError not raised\n"}}, "MLDebug670": {"stat": "fail", "details": {"test_deterministic_grades": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_deterministic_grades\nAssertionError: Lists differ: [51, 74, 1, 32, 41, 61, 20, 8] != [49, 97, 53, 5, 33, 65, 62, 51]\n\nFirst differing element 0:\n51\n49\n\n- [51, 74, 1, 32, 41, 61, 20, 8]\n+ [49, 97, 53, 5, 33, 65, 62, 51] : The first row grades should be deterministic and match the expected pattern\n"}}, "MLDebug671": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\nAssertionError: 'Row Averages vs Row Indices' != ''\n- Row Averages vs Row Indices\n+ \n\n"}}, "MLDebug672": {"stat": "fail", "details": {"test_correlation_calculation": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_correlation_calculation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\n(shapes (9, 9), (64,) mismatch)\n x: MaskedArray([[ 1., inf, inf, inf, -1.,  1., -1., inf,  1.],\n             [inf, inf, inf, inf, inf, inf, inf, inf, inf],\n             [inf, inf, inf, inf, inf, inf, inf, inf, inf],...\n y: array([ 1., nan, nan, nan, -1.,  1., -1., nan, nan, nan, nan, nan, nan,\n       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n       nan, nan, nan, nan, nan, nan, -1., nan, nan, nan,  1., -1.,  1.,...\n"}}, "MLDebug673": {"stat": "pass", "details": {}}, "MLDebug674": {"stat": "pass", "details": {}}, "MLDebug675": {"stat": "pass", "details": {}}, "MLDebug676": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_case_1\nAssertionError: 5 != 25\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_2\nAssertionError: 3 != 9\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_3\nAssertionError: 10 != 100\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_5\nAssertionError: 2 != 4\n"}}, "MLDebug677": {"stat": "fail", "details": {"test_process_found_restarts_process": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 44, in test_process_found_restarts_process\nAssertionError: 'Process not found. Starting notepad.' != 'Process found. Restarting notepad.'\n- Process not found. Starting notepad.\n?         ----       ^\n+ Process found. Restarting notepad.\n?                ^^^\n\n", "test_process_not_found_starts_process": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 35, in test_process_not_found_starts_process\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: Popen('random_non_existent_process')\nActual: Popen(['random_non_existent_process'])\n", "test_process_terminates_and_restarts_multiple_instances": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 58, in test_process_terminates_and_restarts_multiple_instances\nAssertionError: 'Process not found. Starting multi_instance.' != 'Process found. Restarting multi_instance.'\n- Process not found. Starting multi_instance.\n?         ----       ^\n+ Process found. Restarting multi_instance.\n?                ^^^\n\n"}}, "MLDebug678": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\n  File \"__test__.py\", line 31, in task_func\nNameError: name 'd' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\n  File \"__test__.py\", line 31, in task_func\nNameError: name 'd' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_3\n  File \"__test__.py\", line 31, in task_func\nNameError: name 'd' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_4\n  File \"__test__.py\", line 31, in task_func\nNameError: name 'd' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_5\n  File \"__test__.py\", line 31, in task_func\nNameError: name 'd' is not defined\n"}}, "MLDebug679": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 18, in test_case_1\nAssertionError: Lists differ: ['USA', 'China', 'UK'] != ['USA', 'UK', 'China']\n\nFirst differing element 1:\n'China'\n'UK'\n\n- ['USA', 'China', 'UK']\n+ ['USA', 'UK', 'China']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_3\nAssertionError: Lists differ: ['Japan', 'China', 'Australia', 'UK', 'USA'] != ['USA', 'UK', 'China', 'Japan', 'Australia']\n\nFirst differing element 0:\n'Japan'\n'USA'\n\n- ['Japan', 'China', 'Australia', 'UK', 'USA']\n+ ['USA', 'UK', 'China', 'Japan', 'Australia']\n"}}, "MLDebug680": {"stat": "pass", "details": {}}, "MLDebug681": {"stat": "pass", "details": {}}, "MLDebug682": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug683": {"stat": "pass", "details": {}}, "MLDebug684": {"stat": "pass", "details": {}}, "MLDebug685": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug686": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_3\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_4\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 92, in test_case_5\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n"}}, "MLDebug687": {"stat": "fail", "details": {"ALL": "No module named 'geopy'"}}, "MLDebug688": {"stat": "fail", "details": {"ALL": "No module named 'geopandas'"}}, "MLDebug689": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 40, in test_case_1\nAssertionError: Lists differ: ['names', 'John', 'Doe', 'Alice'] != ['John', 'Doe', 'Alice']\n\nFirst differing element 0:\n'names'\n'John'\n\nFirst list contains 1 additional elements.\nFirst extra element 3:\n'Alice'\n\n- ['names', 'John', 'Doe', 'Alice']\n?  ---------\n\n+ ['John', 'Doe', 'Alice']\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_case_2\nAssertionError: Lists differ: ['names', 'Bob', 'Adam', 'Eve'] != ['Bob', 'Eve']\n\nFirst differing element 0:\n'names'\n'Bob'\n\nFirst list contains 2 additional elements.\nFirst extra element 2:\n'Adam'\n\n- ['names', 'Bob', 'Adam', 'Eve']\n+ ['Bob', 'Eve']\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_case_5\nAssertionError: Lists differ: ['names', 'Billy'] != ['Billy']\n\nFirst differing element 0:\n'names'\n'Billy'\n\nFirst list contains 1 additional elements.\nFirst extra element 1:\n'Billy'\n\n- ['names', 'Billy']\n+ ['Billy']\n"}}, "MLDebug690": {"stat": "pass", "details": {}}, "MLDebug691": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 72, in test_case_1\n  File \"__test__.py\", line 41, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 526, in read_sql_query\n    return pandas_sql.read_query(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2738, in read_query\n    cursor = self.execute(sql, params)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2672, in execute\n    cur = self.con.cursor()\nsqlite3.ProgrammingError: Cannot operate on a closed database.\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 86, in test_case_2\n  File \"__test__.py\", line 41, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 526, in read_sql_query\n    return pandas_sql.read_query(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2738, in read_query\n    cursor = self.execute(sql, params)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2672, in execute\n    cur = self.con.cursor()\nsqlite3.ProgrammingError: Cannot operate on a closed database.\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 94, in test_case_3\n  File \"__test__.py\", line 41, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 526, in read_sql_query\n    return pandas_sql.read_query(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2738, in read_query\n    cursor = self.execute(sql, params)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2672, in execute\n    cur = self.con.cursor()\nsqlite3.ProgrammingError: Cannot operate on a closed database.\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 105, in test_case_5\n  File \"__test__.py\", line 41, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 526, in read_sql_query\n    return pandas_sql.read_query(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2738, in read_query\n    cursor = self.execute(sql, params)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/sql.py\", line 2672, in execute\n    cur = self.con.cursor()\nsqlite3.ProgrammingError: Cannot operate on a closed database.\n"}}, "MLDebug692": {"stat": "fail", "details": {"test_large_number_of_customers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 58, in test_large_number_of_customers\nAssertionError: {'Dog': 0, 'Cat': 1, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 1000, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 1, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                    ^\n\n+ {'Bird': 0, 'Cat': 0, 'Dog': 1000, 'Fish': 0, 'Hamster': 0}\n?                    ^         +++\n\n", "test_no_customer": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 93, in test_no_customer\nAssertionError: {'Dog': 0, 'Cat': 1, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 1, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                    ^\n\n+ {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                    ^\n\n", "test_random_animal_selection": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 67, in test_random_animal_selection\nAssertionError: {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 1} != {'Dog': 1, 'Cat': 1, 'Bird': 1, 'Fish': 1, 'Hamster': 1}\n- {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 1}\n?          ^         ^         ^          ^\n\n+ {'Bird': 1, 'Cat': 1, 'Dog': 1, 'Fish': 1, 'Hamster': 1}\n?          ^         ^         ^          ^\n\n", "test_sales_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_sales_content\nAssertionError: {'Dog': 0, 'Cat': 0, 'Bird': 1, 'Fish': 0, 'Hamster': 0} != {'Dog': 1, 'Cat': 1, 'Bird': 1, 'Fish': 1, 'Hamster': 1}\n- {'Bird': 1, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                    ^         ^          ^             ^\n\n+ {'Bird': 1, 'Cat': 1, 'Dog': 1, 'Fish': 1, 'Hamster': 1}\n?                    ^         ^          ^             ^\n\n", "test_typical_case": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 41, in test_typical_case\nAssertionError: {'Dog': 1, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 100, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 0, 'Dog': 1, 'Fish': 0, 'Hamster': 0}\n+ {'Bird': 0, 'Cat': 0, 'Dog': 100, 'Fish': 0, 'Hamster': 0}\n?                               ++\n\n", "test_zero_customers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 49, in test_zero_customers\nAssertionError: {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 1} != {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 1}\n?                                                       ^\n\n+ {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                                                       ^\n\n"}}, "MLDebug693": {"stat": "fail", "details": {"test_f225": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 50, in test_f225\nAssertionError: 'Mugsy Dog Smith' != ['Josie Smith', 'Mugsy Dog Smith']\n", "test_f225_subject": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 64, in test_f225_subject\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: sendmail('your.email@gmail.com', 'names@gmail.com', 'Subject: Extracted Names\\n\\nJosie Smith\\nMugsy Dog Smith')\nActual: sendmail('your.email@gmail.com', 'names@gmail.com', 'Subject: Extracted Names\\n\\n\\nJosie Smith\\nMugsy Dog Smith')\n", "test_login": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 114, in test_login\n  File \"__test__.py\", line 34, in task_func\nUnboundLocalError: local variable 'name' referenced before assignment\n", "test_no_names": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 78, in test_no_names\n  File \"__test__.py\", line 34, in task_func\nUnboundLocalError: local variable 'name' referenced before assignment\n", "test_recepient": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 96, in test_recepient\n  File \"__test__.py\", line 34, in task_func\nUnboundLocalError: local variable 'name' referenced before assignment\n"}}, "MLDebug694": {"stat": "pass", "details": {}}, "MLDebug695": {"stat": "pass", "details": {}}, "MLDebug696": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 47)"}}, "MLDebug697": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_1\nAssertionError: False is not true\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 115, in test_case_2\nAssertionError: False is not true\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 126, in test_case_3\nAssertionError: False is not true\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 137, in test_case_4\nAssertionError: False is not true\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 148, in test_case_5\nAssertionError: False is not true\n"}}, "MLDebug698": {"stat": "fail", "details": {"test_count_greater_than_or_equal_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_count_greater_than_or_equal_value\nAssertionError: 3 != 2\n"}}, "MLDebug699": {"stat": "pass", "details": {}}, "MLDebug700": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_1\nAssertionError: {'https://www.example.com': 1} != {}\n- {'https://www.example.com': 1}\n+ {}\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_5\nAssertionError: {'example.com': 1, 'www.johnblog.com': 1} != {'www.johnblog.com': 1}\n- {'example.com': 1, 'www.johnblog.com': 1}\n+ {'www.johnblog.com': 1}\n"}}, "MLDebug701": {"stat": "pass", "details": {}}, "MLDebug702": {"stat": "pass", "details": {}}, "MLDebug703": {"stat": "pass", "details": {}}, "MLDebug704": {"stat": "pass", "details": {}}, "MLDebug705": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_1\nAssertionError: 3 != 4\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_2\nAssertionError: 0.6 != 2\n"}}, "MLDebug706": {"stat": "pass", "details": {}}, "MLDebug707": {"stat": "fail", "details": {"test_plot_attributes": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 128, in test_plot_attributes\n  File \"__test__.py\", line 40, in task_func\nException: Invalid data format\n", "test_valid_request": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 75, in test_valid_request\n  File \"__test__.py\", line 40, in task_func\nException: Invalid data format\n", "test_valid_request_with_no_params": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 117, in test_valid_request_with_no_params\n  File \"__test__.py\", line 40, in task_func\nException: Invalid data format\n"}}, "MLDebug708": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 109, in test_case_1\nAssertionError: 'ground' != 'success'\n- ground\n+ success\n\n"}}, "MLDebug709": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\nAssertionError: Tuples differ: (81, 60, 30, 187, 148, 148) != (81, 60, 30, 10712, 8460, 8460)\n\nFirst differing element 3:\n187\n10712\n\n- (81, 60, 30, 187, 148, 148)\n+ (81, 60, 30, 10712, 8460, 8460)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_2\nAssertionError: Tuples differ: (180, 180, 0, 428, 383, 383) != (180, 180, 0, 24508, 21932, 21932)\n\nFirst differing element 3:\n428\n24508\n\n- (180, 180, 0, 428, 383, 383)\n+ (180, 180, 0, 24508, 21932, 21932)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_3\nAssertionError: Tuples differ: (30, 30, 10, 58, 43, 43) != (30, 30, 10, 3296, 2437, 2437)\n\nFirst differing element 3:\n58\n3296\n\n- (30, 30, 10, 58, 43, 43)\n?              ^^\n\n+ (30, 30, 10, 3296, 2437, 2437)\n?              ^^^^  +  +  +  +\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_4\nAssertionError: Tuples differ: (82.5, 82.5, 15, 198, 110) != (82.5, 82.5, 15, 11366, 6311)\n\nFirst differing element 3:\n198\n11366\n\n- (82.5, 82.5, 15, 198, 110)\n+ (82.5, 82.5, 15, 11366, 6311)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_5\nAssertionError: Tuples differ: (32.5, 32.5, 5, 82, 42, 60) != (32.5, 32.5, 5, 4718, 2431, 6641)\n\nFirst differing element 3:\n82\n4718\n\n- (32.5, 32.5, 5, 82, 42, 60)\n+ (32.5, 32.5, 5, 4718, 2431, 6641)\n"}}, "MLDebug710": {"stat": "pass", "details": {}}, "MLDebug711": {"stat": "pass", "details": {}}, "MLDebug712": {"stat": "pass", "details": {}}, "MLDebug713": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_3\nAssertionError: 14 != 610 : Unexpected number of lines in the plot\n"}}, "MLDebug714": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\nAssertionError: '' != 'x'\n+ x\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_4\nAssertionError: 112 != 210\n"}}, "MLDebug715": {"stat": "fail", "details": {"ALL": "No module named 'soundfile'"}}, "MLDebug716": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_2\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_3\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_4\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_5\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug717": {"stat": "fail", "details": {"test_case_regular": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_regular\nAssertionError: {'Total Sales': 1800, 'Most Popular Category': 'Beauty'} != {'Total Sales': 1800, 'Most Popular Category': 'Electronics'}\n- {'Most Popular Category': 'Beauty', 'Total Sales': 1800}\n?                            ^ ^^ ^\n\n+ {'Most Popular Category': 'Electronics', 'Total Sales': 1800}\n?                            ^^ ^ ^^^^^^\n\n", "test_case_with_duplicates": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_with_duplicates\nAssertionError: {'Total Sales': 1200, 'Most Popular Category': 'Beauty'} != {'Total Sales': 1200, 'Most Popular Category': 'Electronics'}\n- {'Most Popular Category': 'Beauty', 'Total Sales': 1200}\n?                            ^ ^^ ^\n\n+ {'Most Popular Category': 'Electronics', 'Total Sales': 1200}\n?                            ^^ ^ ^^^^^^\n\n"}}, "MLDebug718": {"stat": "pass", "details": {}}, "MLDebug719": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug720": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\nAssertionError: '' is not true : Histogram with PDF\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\nAssertionError: '' is not true : Histogram with PDF\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_3\nAssertionError: '' is not true : Histogram with PDF\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_4\nAssertionError: '' is not true : Histogram with PDF\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_5\nAssertionError: '' is not true : Histogram with PDF\n"}}, "MLDebug721": {"stat": "pass", "details": {}}, "MLDebug722": {"stat": "fail", "details": {"test_custom_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_custom_range\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_default_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in test_default_parameters\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_large_dataset": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_large_dataset\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_single_value_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_single_value_range\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_small_dataset": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_small_dataset\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n"}}, "MLDebug723": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_2\nAssertionError: 50 != 10\n"}}, "MLDebug724": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_case_2\nAssertionError: 4 != 2\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_4\nAssertionError: 6 != 2\n"}}, "MLDebug725": {"stat": "pass", "details": {}}, "MLDebug726": {"stat": "pass", "details": {}}, "MLDebug727": {"stat": "pass", "details": {}}, "MLDebug728": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 20, in test_case_1\nAssertionError: 2.0 != '2.0'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_case_2\nAssertionError: 0.0 != '0.0'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_3\nAssertionError: 0.01 != '0.01'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_4\nAssertionError: 1000.0 != '1000.0'\n"}}, "MLDebug729": {"stat": "fail", "details": {"test_rlabel_position": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_rlabel_position\nAssertionError: -22.5 != 45 : Rlabel position should be 45 for index 1\n", "test_sine_function": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_sine_function\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1504, in assert_allclose\n    assert_array_compare(compare, actual, desired, err_msg=str(err_msg),\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nNot equal to tolerance rtol=1e-07, atol=1e-05\n\n(shapes (400,), (1000,) mismatch)\n x: array([ 0.000000e+00,  1.574668e-02,  3.148946e-02,  4.722442e-02,\n        6.294768e-02,  7.865533e-02,  9.434347e-02,  1.100082e-01,\n        1.256457e-01,  1.412520e-01,  1.568233e-01,  1.723557e-01,...\n y: array([ 0.000000e+00,  6.289433e-03,  1.257862e-02,  1.886730e-02,\n        2.515525e-02,  3.144219e-02,  3.772789e-02,  4.401210e-02,\n        5.029457e-02,  5.657505e-02,  6.285329e-02,  6.912904e-02,...\n"}}, "MLDebug730": {"stat": "fail", "details": {"test_zero_turns": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_zero_turns\n  File \"__test__.py\", line 10, in task_func\nZeroDivisionError: division by zero\n"}}, "MLDebug731": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\nAssertionError: 22.5 != 1.0 : Radial label position should be set to 1\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\nAssertionError: 22.5 != 10.0 : Radial label position should be set to 10\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\nAssertionError: 22.5 != 5.0 : Radial label position should be set to 5\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_4\n  File \"__test__.py\", line 10, in task_func\nValueError: num_points must be greater than zero.\n"}}, "MLDebug732": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\nAssertionError: 92.4 != 0.05 within 1 places (92.35000000000001 difference)\n"}}, "MLDebug733": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: 'Frequency (Hz)' != 'Frequency [Hz]'\n- Frequency (Hz)\n?           ^  ^\n+ Frequency [Hz]\n?           ^  ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_2\nAssertionError: 'Frequency (Hz)' != 'Frequency [Hz]'\n- Frequency (Hz)\n?           ^  ^\n+ Frequency [Hz]\n?           ^  ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_3\nAssertionError: 'Frequency (Hz)' != 'Frequency [Hz]'\n- Frequency (Hz)\n?           ^  ^\n+ Frequency [Hz]\n?           ^  ^\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_4\nAssertionError: 'Frequency (Hz)' != 'Frequency [Hz]'\n- Frequency (Hz)\n?           ^  ^\n+ Frequency [Hz]\n?           ^  ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 99, in test_case_5\nAssertionError: 'Frequency (Hz)' != 'Frequency [Hz]'\n- Frequency (Hz)\n?           ^  ^\n+ Frequency [Hz]\n?           ^  ^\n\n"}}, "MLDebug734": {"stat": "pass", "details": {}}, "MLDebug735": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n"}}, "MLDebug736": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: '8d1578e1643b59534f0122a4b798aab069981f7ff9c40e15f52ec5fb03b99f5e' != '8691a011016e0fba3c2b0b8a26e4c9c722975f1defe42f580ab55a9c97dfccf8'\n- 8d1578e1643b59534f0122a4b798aab069981f7ff9c40e15f52ec5fb03b99f5e\n+ 8691a011016e0fba3c2b0b8a26e4c9c722975f1defe42f580ab55a9c97dfccf8\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\nAssertionError: '038f24a1bb0798ac2c2423167514543a81c1faeebd7c5c3efd3bc841db42c8c2' != '99a44a377de81b704fcc13054924e260927064689112828e9385597a93d65f76'\n- 038f24a1bb0798ac2c2423167514543a81c1faeebd7c5c3efd3bc841db42c8c2\n+ 99a44a377de81b704fcc13054924e260927064689112828e9385597a93d65f76\n\n"}}, "MLDebug737": {"stat": "fail", "details": {"test_class_properties": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_class_properties\n  File \"__test__.py\", line 58, in task_func\nNameError: name 'JsonRequestHandle' is not defined\n", "test_invalid_content_type": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 69, in test_invalid_content_type\n  File \"__test__.py\", line 58, in task_func\nNameError: name 'JsonRequestHandle' is not defined\n", "test_invalid_json": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 101, in test_invalid_json\n  File \"__test__.py\", line 58, in task_func\nNameError: name 'JsonRequestHandle' is not defined\n", "test_missing_data_key": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 112, in test_missing_data_key\n  File \"__test__.py\", line 58, in task_func\nNameError: name 'JsonRequestHandle' is not defined\n", "test_valid_json_data": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 84, in test_valid_json_data\n  File \"__test__.py\", line 58, in task_func\nNameError: name 'JsonRequestHandle' is not defined\n"}}, "MLDebug738": {"stat": "fail", "details": {"test_email_sending_exception": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 124, in test_email_sending_exception\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n", "test_empty_json_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 110, in test_empty_json_data\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n", "test_invalid_content_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_invalid_content_type\n  File \"__test__.py\", line 14, in do_POST\nValueError: I/O operation on closed file.\n", "test_invalid_json_format": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 104, in test_invalid_json_format\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n", "test_missing_key_in_json_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 88, in test_missing_key_in_json_data\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n", "test_valid_json_request": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 95, in test_valid_json_request\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n"}}, "MLDebug739": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in test_case_1\n  File \"__test__.py\", line 15, in task_func\n  File \"__test__.py\", line 15, in <genexpr>\nAttributeError: 'Float' object has no attribute 'real'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\n  File \"__test__.py\", line 15, in task_func\n  File \"__test__.py\", line 15, in <genexpr>\nAttributeError: 'Float' object has no attribute 'real'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_3\n  File \"__test__.py\", line 15, in task_func\n  File \"__test__.py\", line 15, in <genexpr>\nAttributeError: 'Float' object has no attribute 'real'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_4\n  File \"__test__.py\", line 15, in task_func\n  File \"__test__.py\", line 15, in <genexpr>\nAttributeError: 'Float' object has no attribute 'real'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_5\n  File \"__test__.py\", line 15, in task_func\n  File \"__test__.py\", line 15, in <genexpr>\nAttributeError: 'Add' object has no attribute 'real'\n"}}, "MLDebug740": {"stat": "pass", "details": {}}, "MLDebug741": {"stat": "pass", "details": {}}, "MLDebug742": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug743": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug744": {"stat": "fail", "details": {"test_output_is_string_and_valid_base64": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_output_is_string_and_valid_base64\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xf0 in position 6: ordinal not in range(128)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 27, in test_output_is_string_and_valid_base64\nAssertionError: Decoding base64 failed with error: 'ascii' codec can't decode byte 0xf0 in position 6: ordinal not in range(128)\n", "test_varied_data_sets": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_varied_data_sets\nUnicodeDecodeError: 'ascii' codec can't decode byte 0x86 in position 0: ordinal not in range(128)\n", "test_with_mocked_scaler": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_with_mocked_scaler\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xf0 in position 38: ordinal not in range(128)\n"}}, "MLDebug745": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug746": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\nAssertionError: False is not true : The plot should have data.\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_2\nAssertionError: False is not true : The plot should have data.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_3\nAssertionError: False is not true : The plot should have data.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_4\nAssertionError: False is not true : The plot should have data.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_5\nAssertionError: False is not true : The plot should have data.\n"}}, "MLDebug747": {"stat": "pass", "details": {}}, "MLDebug748": {"stat": "pass", "details": {}}, "MLDebug749": {"stat": "pass", "details": {}}, "MLDebug750": {"stat": "fail", "details": {"test_normal_case": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_normal_case\nAssertionError: Tuples differ: (2, 3) != (2, 4)\n\nFirst differing element 1:\n3\n4\n\n- (2, 3)\n?     ^\n\n+ (2, 4)\n?     ^\n\n", "test_varying_length_lists": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_varying_length_lists\nAssertionError: Tuples differ: (2, 3) != (2, 4)\n\nFirst differing element 1:\n3\n4\n\n- (2, 3)\n?     ^\n\n+ (2, 4)\n?     ^\n\n"}}, "MLDebug751": {"stat": "pass", "details": {}}, "MLDebug752": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug753": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\nAssertionError: 0.9999998829719352 != 0.95949 within 5 places (0.04050988297193525 difference)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\nAssertionError: 0.020350004393186072 != 0.415415 within 5 places (0.3950649956068139 difference)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_3\nAssertionError: 0.9999998829719352 != 0.959492 within 5 places (0.040507882971935194 difference)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_4\nAssertionError: 0.17282824677908626 != 0.65486 within 5 places (0.48203175322091374 difference)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_5\nAssertionError: 0.9204417181859899 != 0.841253 within 5 places (0.07918871818598983 difference)\n"}}, "MLDebug754": {"stat": "pass", "details": {}}, "MLDebug755": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_1\nAssertionError: False is not true\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\nAssertionError: False is not true\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_3\nAssertionError: False is not true\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_4\nAssertionError: False is not true\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_5\nAssertionError: False is not true\n"}}, "MLDebug756": {"stat": "pass", "details": {}}, "MLDebug757": {"stat": "fail", "details": {"test_empty_directory": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 51, in test_empty_directory\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/empty/directory does not exist.\n", "test_logging": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_logging\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/directory does not exist.\n", "test_remove_jquery_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 43, in test_remove_jquery_files\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/directory does not exist.\n", "test_remove_jquery_files_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 77, in test_remove_jquery_files_error\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/directory does not exist.\n", "test_remove_jquery_files_not_js": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_remove_jquery_files_not_js\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/directory does not exist.\n", "test_remove_jquery_files_subdirectory": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_remove_jquery_files_subdirectory\n  File \"__test__.py\", line 12, in task_func\nFileNotFoundError: The directory /fake/directory does not exist.\n"}}, "MLDebug758": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\nAssertionError: 10 != 5\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_3\nAssertionError: 5 != 4\n"}}, "MLDebug759": {"stat": "pass", "details": {}}, "MLDebug760": {"stat": "pass", "details": {}}, "MLDebug761": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug762": {"stat": "pass", "details": {}}, "MLDebug763": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug764": {"stat": "fail", "details": {"ALL": "No module named 'sendgrid'"}}, "MLDebug765": {"stat": "pass", "details": {}}, "MLDebug766": {"stat": "pass", "details": {}}, "MLDebug767": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug768": {"stat": "fail", "details": {"test_non_zero_exit_code": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_non_zero_exit_code\nAssertionError: None != 1\n", "test_random_file_selection": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_random_file_selection\nAssertionError: False is not true : Expected call with valid_dir/script1.bat not found\n", "test_valid_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_valid_input\nAssertionError: None != 0\n"}}, "MLDebug769": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_1\nAssertionError: False is not true\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 106, in test_case_5\nAssertionError: 1.7888543819998313 != 2.04 within 2 places (0.25114561800016877 difference)\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Mr. X'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 85, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 1121, in __getitem__\n    return self._get_value(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 1237, in _get_value\n    loc = self.index.get_loc(label)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Mr. X'\n"}}, "MLDebug770": {"stat": "fail", "details": {"test_backup_of_large_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_backup_of_large_file\nAssertionError: -1 != 0\n", "test_successful_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_successful_execution\nAssertionError: -1 != 0\n"}}, "MLDebug771": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\nKeyError: 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_5\nKeyError: 0\n"}}, "MLDebug772": {"stat": "fail", "details": {"test_multiple_processes_with_different_exit_codes": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 62, in test_multiple_processes_with_different_exit_codes\nAssertionError: Lists differ: [<MagicMock name='Popen().wait()' id='1407[121 chars]76'>] != [0, 1, None]\n\nFirst differing element 0:\n<MagicMock name='Popen().wait()' id='140701157583376'>\n0\n\n+ [0, 1, None]\n- [<MagicMock name='Popen().wait()' id='140701157583376'>,\n-  <MagicMock name='Popen().wait()' id='140701157583376'>,\n-  <MagicMock name='Popen().wait()' id='140701157583376'>]\n", "test_process_still_running": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_process_still_running\nAssertionError: Lists differ: [<MagicMock name='Popen().wait()' id='140701155919568'>] != [None]\n\nFirst differing element 0:\n<MagicMock name='Popen().wait()' id='140701155919568'>\nNone\n\n- [<MagicMock name='Popen().wait()' id='140701155919568'>]\n+ [None]\n", "test_valid_directory_and_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 49, in test_valid_directory_and_files\nAssertionError: Lists differ: [<MagicMock name='Popen().wait()' id='1407[65 chars]00'>] != [0, 0]\n\nFirst differing element 0:\n<MagicMock name='Popen().wait()' id='140701156024400'>\n0\n\n+ [0, 0]\n- [<MagicMock name='Popen().wait()' id='140701156024400'>,\n-  <MagicMock name='Popen().wait()' id='140701156024400'>]\n", "test_valid_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 41, in test_valid_files\nAssertionError: Lists differ: [<MagicMock name='Popen().wait()' id='1407[65 chars]32'>] != [0, 0]\n\nFirst differing element 0:\n<MagicMock name='Popen().wait()' id='140701156113232'>\n0\n\n+ [0, 0]\n- [<MagicMock name='Popen().wait()' id='140701156113232'>,\n-  <MagicMock name='Popen().wait()' id='140701156113232'>]\n"}}, "MLDebug773": {"stat": "pass", "details": {}}, "MLDebug774": {"stat": "pass", "details": {}}, "MLDebug775": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_1\nAssertionError: {'a': 4, 'b': 2, 'abc': 2, ' (': 4, ') ': 4, ')': 4[24 chars]': 1} != {'a': 4, ' ': 3, 'b': 2, ' (': 4, 'abc': 2, ') ': 3[32 chars]': 1}\n- {' (': 4, ')': 4, ') ': 4, 'a': 4, 'abc': 2, 'b': 2, 'c': 1, 'def': 1, 'ghi': 1}\n+ {' ': 3,\n+  ' (': 4,\n+  ')': 1,\n+  ') ': 3,\n+  'a': 4,\n+  'abc': 2,\n+  'b': 2,\n+  'c': 1,\n+  'def': 1,\n+  'ghi': 1} : Expected {'a': 4, ' ': 3, 'b': 2, ' (': 4, 'abc': 2, ') ': 3, 'def': 1, 'ghi': 1, 'c': 1, ')': 1} but got {'a': 4, 'b': 2, 'abc': 2, ' (': 4, ') ': 4, ')': 4, 'def': 1, 'ghi': 1, 'c': 1}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_2\nAssertionError: {'x': 2, 'y': 2, 'xyz': 2, ' (': 4, ') ': 4, ')': 4[24 chars]': 1} != {'x': 2, ' ': 2, 'y': 2, ' (': 3, 'xyz': 2, ') ': 2[42 chars]': 1}\n- {' (': 4, ')': 4, ') ': 4, 'rst': 1, 'uvw': 1, 'x': 2, 'xyz': 2, 'y': 2, 'z': 1}\n+ {' ': 2,\n+  ' (': 3,\n+  ')': 1,\n+  ') ': 2,\n+  ') (': 1,\n+  'rst': 1,\n+  'uvw': 1,\n+  'x': 2,\n+  'xyz': 2,\n+  'y': 2,\n+  'z': 1} : Expected {'x': 2, ' ': 2, 'y': 2, ' (': 3, 'xyz': 2, ') ': 2, 'uvw': 1, 'z': 1, 'rst': 1, ') (': 1, ')': 1} but got {'x': 2, 'y': 2, 'xyz': 2, ' (': 4, ') ': 4, ')': 4, 'uvw': 1, 'z': 1, 'rst': 1}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_3\nAssertionError: {'1': 1, '2': 2, '345': 1, ' (': 4, ') ': 4, ')': 4[42 chars]': 1} != {'1': 1, ' ': 2, '2': 2, ' (': 3, '345': 1, ') (': [60 chars]': 1}\n- {' (': 4,\n?    -   ^\n\n+ {' ': 2,\n?       ^\n\n+  ' (': 3,\n-  ')': 4,\n?       ^\n\n+  ')': 1,\n?       ^\n\n-  ') ': 4,\n?        ^\n\n+  ') ': 2,\n?        ^\n\n+  ') (': 1,\n   '1': 1,\n   '2': 2,\n   '234': 1,\n   '3': 1,\n   '345': 1,\n   '4': 1,\n   '678': 1,\n   '901': 1} : Expected {'1': 1, ' ': 2, '2': 2, ' (': 3, '345': 1, ') (': 1, '678': 1, ') ': 2, '3': 1, '901': 1, '4': 1, '234': 1, ')': 1} but got {'1': 1, '2': 2, '345': 1, ' (': 4, ') ': 4, ')': 4, '678': 1, '3': 1, '901': 1, '4': 1, '234': 1}\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_4\nAssertionError: {'@': 2, '#': 1, '$%^': 1, ' (': 3, ') ': 3,[44 chars]': 1} != {'@ # ($%^) & * (*)_+ @ (#&)': 1}\n+ {'@ # ($%^) & * (*)_+ @ (#&)': 1}\n- {' (': 3,\n-  '#': 1,\n-  '#&': 1,\n-  '$%^': 1,\n-  '&': 1,\n-  ')': 3,\n-  ') ': 3,\n-  '*': 2,\n-  '+': 1,\n-  '@': 2,\n-  '_': 1} : Expected {'@ # ($%^) & * (*)_+ @ (#&)': 1} but got {'@': 2, '#': 1, '$%^': 1, ' (': 3, ') ': 3, ')': 3, '&': 1, '*': 2, '_': 1, '+': 1, '#&': 1}\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_case_5\nAssertionError: {'apple': 1, 'banana': 1, 'cherry': 1, ' (': 4, ') ': 4[72 chars]': 1} != {'apple': 1, ' ': 1, 'banana': 1, ' (': 4, 'cherry': 1,[80 chars]': 1}\n+ {' ': 1,\n- {' (': 4,\n? ^\n\n+  ' (': 4,\n? ^\n\n-  ')': 4,\n?       ^\n\n+  ')': 1,\n?       ^\n\n-  ') ': 4,\n?        ^\n\n+  ') ': 3,\n?        ^\n\n   'apple': 1,\n   'banana': 1,\n   'cherry': 1,\n   'date': 1,\n   'fig': 1,\n   'grape': 1,\n   'kiwi': 1,\n   'lemon': 1,\n   'mango': 1} : Expected {'apple': 1, ' ': 1, 'banana': 1, ' (': 4, 'cherry': 1, ') ': 3, 'date': 1, 'fig': 1, 'grape': 1, 'kiwi': 1, 'lemon': 1, 'mango': 1, ')': 1} but got {'apple': 1, 'banana': 1, 'cherry': 1, ' (': 4, ') ': 4, ')': 4, 'date': 1, 'fig': 1, 'grape': 1, 'kiwi': 1, 'lemon': 1, 'mango': 1}\n"}}, "MLDebug776": {"stat": "pass", "details": {}}, "MLDebug777": {"stat": "pass", "details": {}}, "MLDebug778": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug779": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_1\nAssertionError: Element counts were not equal:\nFirst has 0, Second has 1:  'sample1.txt'\nFirst has 0, Second has 1:  'sample2.md'\nFirst has 0, Second has 1:  'sample3.csv'\nFirst has 0, Second has 1:  'sample5.md'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_2\nAssertionError: Element counts were not equal:\nFirst has 0, Second has 1:  'sample3.csv'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_3\nAssertionError: Element counts were not equal:\nFirst has 0, Second has 1:  'sample4.txt'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_4\nAssertionError: Element counts were not equal:\nFirst has 0, Second has 1:  'sample2.md'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_5\nAssertionError: Element counts were not equal:\nFirst has 0, Second has 1:  'sample5.md'\n"}}, "MLDebug780": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug781": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_2\n  File \"__test__.py\", line 25, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7001, in hist\n    m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/histograms.py\", line 780, in histogram\n    bin_edges, uniform_bins = _get_bin_edges(a, bins, range, weights)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/histograms.py\", line 424, in _get_bin_edges\n    raise ValueError('`bins` must be positive, when an integer')\nValueError: `bins` must be positive, when an integer\n"}}, "MLDebug782": {"stat": "pass", "details": {}}, "MLDebug783": {"stat": "fail", "details": {"ALL": "No module named 'wordcloud'"}}, "MLDebug784": {"stat": "fail", "details": {"test_categorical_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_categorical_data\nAssertionError: False is not true\n"}}, "MLDebug785": {"stat": "pass", "details": {}}, "MLDebug786": {"stat": "pass", "details": {}}, "MLDebug787": {"stat": "pass", "details": {}}, "MLDebug788": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_2\n  File \"__test__.py\", line 21, in task_func\nsubprocess.CalledProcessError: Command '['/home/jyhuang/anaconda3/envs/MedicalGPT/bin/python', '/tmp/tmpnlq1mtw_/test/script2.py']' returned non-zero exit status 1.\n"}}, "MLDebug789": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\nAssertionError: 0 != 2\n", "test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nTypeError: 'Axes' object is not subscriptable\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nTypeError: 'Axes' object is not subscriptable\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_4\nAttributeError: 'Axes' object has no attribute 'isin'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nTypeError: 'Axes' object is not subscriptable\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_7\n  File \"__test__.py\", line 16, in task_func\nTypeError: 'Axes' object is not subscriptable\n"}}, "MLDebug790": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_case_2\nAssertionError: 'Source or destination folder does not exist' != \"Source folder '/non/existent/path' does not exist.\"\n- Source or destination folder does not exist\n+ Source folder '/non/existent/path' does not exist.\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_case_3\nAssertionError: 'Source or destination folder does not exist' != \"Destination folder '/non/existent/path' does not exist.\"\n- Source or destination folder does not exist\n+ Destination folder '/non/existent/path' does not exist.\n\n"}}, "MLDebug791": {"stat": "fail", "details": {"test_phase_calculation": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_phase_calculation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 797, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\nMismatched elements: 1 / 2 (50%)\nMax absolute difference: 3.14159265\nMax relative difference: inf\n x: array([0.      , 3.141593])\n y: array([0., 0.])\n"}}, "MLDebug792": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_case_6\nAssertionError: ValueError not raised\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 223, in __init__\n    self.set_bandwidth(bw_method=bw_method)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 571, in set_bandwidth\n    self._compute_covariance()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 583, in _compute_covariance\n    self._data_cho_cov = linalg.cholesky(self._data_covariance,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 90, in cholesky\n    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 38, in _cholesky\n    raise LinAlgError(\"%d-th leading minor of the array is not positive \"\nnumpy.linalg.LinAlgError: 1-th leading minor of the array is not positive definite\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 232, in __init__\n    raise linalg.LinAlgError(msg) from e\nnumpy.linalg.LinAlgError: The data appears to lie in a lower-dimensional subspace of the space in which it is expressed. This has resulted in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Consider performing principle component analysis / dimensionality reduction and using `gaussian_kde` with the transformed data.\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 223, in __init__\n    self.set_bandwidth(bw_method=bw_method)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 571, in set_bandwidth\n    self._compute_covariance()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 583, in _compute_covariance\n    self._data_cho_cov = linalg.cholesky(self._data_covariance,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 90, in cholesky\n    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 38, in _cholesky\n    raise LinAlgError(\"%d-th leading minor of the array is not positive \"\nnumpy.linalg.LinAlgError: 1-th leading minor of the array is not positive definite\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_3\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 232, in __init__\n    raise linalg.LinAlgError(msg) from e\nnumpy.linalg.LinAlgError: The data appears to lie in a lower-dimensional subspace of the space in which it is expressed. This has resulted in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Consider performing principle component analysis / dimensionality reduction and using `gaussian_kde` with the transformed data.\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 223, in __init__\n    self.set_bandwidth(bw_method=bw_method)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 571, in set_bandwidth\n    self._compute_covariance()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 583, in _compute_covariance\n    self._data_cho_cov = linalg.cholesky(self._data_covariance,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 90, in cholesky\n    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py\", line 38, in _cholesky\n    raise LinAlgError(\"%d-th leading minor of the array is not positive \"\nnumpy.linalg.LinAlgError: 1-th leading minor of the array is not positive definite\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_4\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/stats/_kde.py\", line 232, in __init__\n    raise linalg.LinAlgError(msg) from e\nnumpy.linalg.LinAlgError: The data appears to lie in a lower-dimensional subspace of the space in which it is expressed. This has resulted in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Consider performing principle component analysis / dimensionality reduction and using `gaussian_kde` with the transformed data.\n"}}, "MLDebug793": {"stat": "fail", "details": {"test_bar_chart_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_correct_mean_and_std_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_invalid_sheet_name": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_non_existent_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n"}}, "MLDebug794": {"stat": "timeout", "details": {}}, "MLDebug795": {"stat": "pass", "details": {}}, "MLDebug796": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_3\nAssertionError: FileNotFoundError not raised\n"}}, "MLDebug797": {"stat": "pass", "details": {}}, "MLDebug798": {"stat": "pass", "details": {}}, "MLDebug799": {"stat": "pass", "details": {}}, "MLDebug800": {"stat": "fail", "details": {"ALL": "No module named 'docx'"}}, "MLDebug801": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_1\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'fitted_value' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_2\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'fitted_value' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_5\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'fitted_value' is not defined\n"}}, "MLDebug802": {"stat": "fail", "details": {"ALL": "No module named 'openpyxl'"}}, "MLDebug803": {"stat": "pass", "details": {}}, "MLDebug804": {"stat": "fail", "details": {"ALL": "No module named 'texttable'"}}, "MLDebug805": {"stat": "pass", "details": {}}, "MLDebug806": {"stat": "fail", "details": {"ALL": "No module named 'textblob'"}}, "MLDebug807": {"stat": "pass", "details": {}}, "MLDebug808": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_5\nAssertionError: Counter({123: 1, None: 1, 'Apple': 1}) != {'Apple': 1}\n"}}, "MLDebug809": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_case_1\nAssertionError: 100 != 1\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_2\nAssertionError: 0.1 != 10\n"}}, "MLDebug810": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_2\nAssertionError: 'City Population' != 'City Populations'\n- City Population\n+ City Populations\n?                +\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\nAssertionError: {'City2': 985773, 'City1': 305712} != {'City1': -1, 'City2': -1}\n- {'City1': 305712, 'City2': 985773}\n?           ^^^^ -           ^^^^^^\n\n+ {'City1': -1, 'City2': -1}\n?           ^            ^^\n\n"}}, "MLDebug811": {"stat": "fail", "details": {"test_missing_column": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_missing_column\nAssertionError: {2: 2, 1: 2} != {'USA': 4, 'Canada': 2}\n- {1: 2, 2: 2}\n+ {'Canada': 2, 'USA': 4}\n", "test_read_csv_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 26, in test_read_csv_files\nAssertionError: {2: 1, 1: 1} != {'USA': 2, 'Canada': 1}\n- {1: 1, 2: 1}\n+ {'Canada': 1, 'USA': 2}\n"}}, "MLDebug812": {"stat": "pass", "details": {}}, "MLDebug813": {"stat": "fail", "details": {"ALL": "No module named 'natsort'"}}, "MLDebug814": {"stat": "pass", "details": {}}, "MLDebug815": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\nAssertionError: False is not true\n"}}, "MLDebug816": {"stat": "fail", "details": {"test_nested_directories": "Traceback (most recent call last):\n  File \"__test__.py\", line 91, in test_nested_directories\nAssertionError: '/tmp/tmp6q0bip5d/test/nested/nested_file_with_target.json' unexpectedly found in ['/tmp/tmp6q0bip5d/test/file_with_target_2.json', '/tmp/tmp6q0bip5d/test/file_with_target_1.json', '/tmp/tmp6q0bip5d/test/nested/nested_file_with_target.json'] : The file in the nested directory containing the target string was found.\n", "test_with_target_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_with_target_string\nAssertionError: True is not false : Not all expected files with target string were found.\n"}}, "MLDebug817": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug818": {"stat": "pass", "details": {}}, "MLDebug819": {"stat": "fail", "details": {"test_empty_excel_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_file_with_different_data_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_invalid_column_name": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_non_existent_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n"}}, "MLDebug820": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_1\nAssertionError: {'a': 1, 'b': 3} != {'a': {'0': 1, '1': 2}, 'b': {'0': 3, '1': 4}}\n- {'a': 1, 'b': 3}\n+ {'a': {'0': 1, '1': 2}, 'b': {'0': 3, '1': 4}}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_2\nAssertionError: {'name': 'Alice', 'country': 'USA'} != {'name': {'0': 'Alice', '1': 'Bob'}, 'country': {'0': 'USA', '1': 'Canada'}}\n- {'country': 'USA', 'name': 'Alice'}\n+ {'country': {'0': 'USA', '1': 'Canada'}, 'name': {'0': 'Alice', '1': 'Bob'}}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_3\nAssertionError: {'age': 25, 'height': 170} != {'age': {'0': 25, '1': 30}, 'height': {'0': 170, '1': 175}}\n- {'age': 25, 'height': 170}\n+ {'age': {'0': 25, '1': 30}, 'height': {'0': 170, '1': 175}}\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_4\nAssertionError: {'id': 1, 'is_student': True, 'grades': 'A'} != {'id': {'0': 1, '1': 2}, 'is_student': {'0': Tru[42 chars]'B'}}\n- {'grades': 'A', 'id': 1, 'is_student': True}\n+ {'grades': {'0': 'A', '1': 'B'},\n+  'id': {'0': 1, '1': 2},\n+  'is_student': {'0': True, '1': False}}\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_case_5\n  File \"__test__.py\", line 8, in task_func\nIndexError: list index out of range\n"}}, "MLDebug821": {"stat": "fail", "details": {"ALL": "No module named 'flask_mail'"}}, "MLDebug822": {"stat": "pass", "details": {}}, "MLDebug823": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_1\n  File \"__test__.py\", line 40, in _assert_heatmap_matches_corr\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\n\n(shapes (2, 2), (4,) mismatch)\n x: array([[1., 1.],\n       [1., 1.]])\n y: array([1., 1., 1., 1.])\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_2\n  File \"__test__.py\", line 40, in _assert_heatmap_matches_corr\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\n\n(shapes (2, 2), (4,) mismatch)\n x: array([[1., 1.],\n       [1., 1.]])\n y: array([1., 1., 1., 1.])\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_case_3\n  File \"__test__.py\", line 40, in _assert_heatmap_matches_corr\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\n\n(shapes (2, 2), (4,) mismatch)\n x: array([[1., 1.],\n       [1., 1.]])\n y: array([1., 1., 1., 1.])\n"}}, "MLDebug824": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug825": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug826": {"stat": "pass", "details": {}}, "MLDebug827": {"stat": "pass", "details": {}}, "MLDebug828": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 18)"}}, "MLDebug829": {"stat": "fail", "details": {"test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_normal_functionality\nAssertionError: False is not true : The arrays should be equal\n"}}, "MLDebug830": {"stat": "fail", "details": {"test_histogram_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_histogram_labels\nAssertionError: 'Pixel Intensity' != 'Bins'\n- Pixel Intensity\n+ Bins\n\n", "test_histogram_output_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_histogram_output_type\nIndexError: list index out of range\n"}}, "MLDebug831": {"stat": "fail", "details": {"ALL": "'{' was never closed (__test__.py, line 34)"}}, "MLDebug832": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 119, in test_case_6\nAssertionError: 4 != 3\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 145, in test_case_8\nAssertionError: False is not true\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 129, in test_case_7\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/axisgrid.py\", line 2119, in pairplot\n    grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/axisgrid.py\", line 1272, in __init__\n    raise ValueError(\"No variables found for grid columns.\")\nValueError: No variables found for grid columns.\n"}}, "MLDebug833": {"stat": "pass", "details": {}}, "MLDebug834": {"stat": "pass", "details": {}}, "MLDebug835": {"stat": "pass", "details": {}}, "MLDebug836": {"stat": "pass", "details": {}}, "MLDebug837": {"stat": "pass", "details": {}}, "MLDebug838": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_1\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 446, in heatmap\n    plotter = _HeatMapper(data, vmin, vmax, cmap, center, robust, annot, fmt,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 110, in __init__\n    data = pd.DataFrame(plot_data)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 827, in __init__\n    mgr = ndarray_to_mgr(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 314, in ndarray_to_mgr\n    values = _ensure_2d(values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 592, in _ensure_2d\n    raise ValueError(f\"Must pass 2-d input. shape={values.shape}\")\nValueError: Must pass 2-d input. shape=(2, 3, 3)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 446, in heatmap\n    plotter = _HeatMapper(data, vmin, vmax, cmap, center, robust, annot, fmt,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 110, in __init__\n    data = pd.DataFrame(plot_data)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 827, in __init__\n    mgr = ndarray_to_mgr(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 314, in ndarray_to_mgr\n    values = _ensure_2d(values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 592, in _ensure_2d\n    raise ValueError(f\"Must pass 2-d input. shape={values.shape}\")\nValueError: Must pass 2-d input. shape=(2, 3, 3)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_3\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 446, in heatmap\n    plotter = _HeatMapper(data, vmin, vmax, cmap, center, robust, annot, fmt,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 110, in __init__\n    data = pd.DataFrame(plot_data)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 827, in __init__\n    mgr = ndarray_to_mgr(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 314, in ndarray_to_mgr\n    values = _ensure_2d(values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 592, in _ensure_2d\n    raise ValueError(f\"Must pass 2-d input. shape={values.shape}\")\nValueError: Must pass 2-d input. shape=(2, 3, 3)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_4\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 446, in heatmap\n    plotter = _HeatMapper(data, vmin, vmax, cmap, center, robust, annot, fmt,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/matrix.py\", line 110, in __init__\n    data = pd.DataFrame(plot_data)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 827, in __init__\n    mgr = ndarray_to_mgr(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 314, in ndarray_to_mgr\n    values = _ensure_2d(values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 592, in _ensure_2d\n    raise ValueError(f\"Must pass 2-d input. shape={values.shape}\")\nValueError: Must pass 2-d input. shape=(2, 3, 3)\n"}}, "MLDebug839": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (3,3) and (4,12) not aligned: 3 (dim 1) != 4 (dim 0)\n", "test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 128, in test_case_10\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (2,3) and (5,15) not aligned: 3 (dim 1) != 5 (dim 0)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (4,4) and (6,24) not aligned: 4 (dim 1) != 6 (dim 0)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_4\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (5,5) and (7,35) not aligned: 5 (dim 1) != 7 (dim 0)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_5\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (6,6) and (8,48) not aligned: 6 (dim 1) != 8 (dim 0)\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 102, in test_case_8\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (5,5) and (3,15) not aligned: 5 (dim 1) != 3 (dim 0)\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_9\n  File \"__test__.py\", line 12, in task_func\nValueError: shapes (3,3) and (4,12) not aligned: 3 (dim 1) != 4 (dim 0)\n"}}, "MLDebug840": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_2\n  File \"__test__.py\", line 35, in check_result_correctness\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2241, in allclose\n    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2351, in isclose\n    return within_tol(x, y, atol, rtol)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/numeric.py\", line 2332, in within_tol\n    return less_equal(abs(x-y), atol + rtol * abs(y))\nValueError: operands could not be broadcast together with shapes (9,3) (3,3) \n"}}, "MLDebug841": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_4\n  File \"__test__.py\", line 17, in task_func\nValueError: Matrix P columns (4) must match first dimension of tensor T (5)\n"}}, "MLDebug842": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 26)"}}, "MLDebug843": {"stat": "pass", "details": {}}, "MLDebug844": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_1\nAssertionError: 3.81706126209291e-27 != 10721.231367867587\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_2\nAssertionError: 5.484478776129858e-26 != 75731.28563191713\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_5\nAssertionError: 1.1384378963948544e-25 != 0.010142327812255192 within 4 places (0.010142327812255192 difference)\n"}}, "MLDebug845": {"stat": "pass", "details": {}}, "MLDebug846": {"stat": "pass", "details": {}}, "MLDebug847": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_case_10\nAssertionError: 11 != 9\n", "test_case_12": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_12\nAssertionError: ValueError not raised\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_3\nAssertionError: 9 != 11\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_4\nAssertionError: 9 != 11\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_5\nAssertionError: 9 != 11\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_7\nAssertionError: 9 != 11\n", "test_case_11": "Traceback (most recent call last):\n  File \"__test__.py\", line 94, in test_case_11\n  File \"__test__.py\", line 11, in task_func\nTypeError: All elements in the nested list should be integers.\n"}}, "MLDebug848": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (1, 3)\n[right]: (3, 3)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (1, 0)\n[right]: (0, 0)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (1, 4)\n[right]: (3, 4)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (1, 2)\n[right]: (3, 2)\n"}}, "MLDebug849": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_1\nTypeError: object of type 'Axes' has no len()\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_2\nTypeError: object of type 'Axes' has no len()\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_3\nTypeError: object of type 'Axes' has no len()\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_4\nTypeError: object of type 'Axes' has no len()\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 93, in test_case_5\nTypeError: object of type 'Axes' has no len()\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_6\nTypeError: object of type 'Axes' has no len()\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 115, in test_case_7\nTypeError: object of type 'Axes' has no len()\n"}}, "MLDebug850": {"stat": "pass", "details": {}}, "MLDebug851": {"stat": "pass", "details": {}}, "MLDebug852": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_3\nAssertionError: Exception not raised\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 326, in assert_index_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nDataFrame.index values are different (83.33333 %)\n[left]:  Index(['A', 'C', 'G', 'B', 'D', 'F'], dtype='object', name='Grade')\n[right]: Index(['A', 'B', 'C', 'D', 'F', 'G'], dtype='object', name='Grade')\nAt positional index 1, first diff: C != B\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_7\n  File \"__test__.py\", line 33, in _test_helper\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Count\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Count\") values are different (40.0 %)\n[index]: [A, B, C, D, F]\n[left]:  [1, 1, 1, 0, 0]\n[right]: [0, 1, 0, 0, 0]\n"}}, "MLDebug853": {"stat": "pass", "details": {}}, "MLDebug854": {"stat": "fail", "details": {"test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_7\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 326, in assert_index_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nDataFrame.index values are different (100.0 %)\n[left]:  Index(['!kiwi', 'kiwi', 'kiwi!'], dtype='object')\n[right]: Index(['kiwi!', '!kiwi', 'kiwi'], dtype='object')\nAt positional index 0, first diff: !kiwi != kiwi!\n"}}, "MLDebug855": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\nTypeError: 'NoneType' object is not iterable\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\nTypeError: 'NoneType' object is not iterable\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_5\nTypeError: 'NoneType' object is not iterable\n"}}, "MLDebug856": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\n  File \"__test__.py\", line 9, in task_func\nValueError: Both n_walks and n_steps must be greater than 0.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_3\n  File \"__test__.py\", line 9, in task_func\nValueError: Both n_walks and n_steps must be greater than 0.\n"}}, "MLDebug857": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 111, in test_case_10\nAssertionError: Exception not raised\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 107, in test_case_9\nAssertionError: Exception not raised\n"}}, "MLDebug858": {"stat": "fail", "details": {"test_custom_country_codes": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_custom_country_codes\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n", "test_histogram_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_histogram_values\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n", "test_valid_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_valid_data\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug859": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 122, in test_case_5\nAssertionError: TypeError not raised\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 128, in test_case_6\n  File \"__test__.py\", line 14, in task_func\nTypeError\n"}}, "MLDebug860": {"stat": "pass", "details": {}}, "MLDebug861": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_6\n  File \"__test__.py\", line 92, in _test_dataframe\nAssertionError: False is not true\n"}}, "MLDebug862": {"stat": "fail", "details": {"test_case_11": "Traceback (most recent call last):\n  File \"__test__.py\", line 116, in test_case_11\nAssertionError: False is not true : All items in the modified string should have leading and trailing whitespaces removed\n"}}, "MLDebug863": {"stat": "pass", "details": {}}, "MLDebug864": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_case_8\nAssertionError: TypeError not raised\n"}}, "MLDebug865": {"stat": "pass", "details": {}}, "MLDebug866": {"stat": "pass", "details": {}}, "MLDebug867": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_1\n  File \"__test__.py\", line 50, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_2\n  File \"__test__.py\", line 50, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_3\n  File \"__test__.py\", line 50, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_4\n  File \"__test__.py\", line 50, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_5\n  File \"__test__.py\", line 50, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug868": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 113, in test_case_8\nAssertionError: False is not true\n"}}, "MLDebug869": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_3\nAssertionError: ValueError not raised\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_5\nAssertionError: 101 != 100\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_4\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 5389, in __getitem__\n    return getitem(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arrays/datetimelike.py\", line 381, in __getitem__\n    result = cast(\"Union[Self, DTScalarOrNaT]\", super().__getitem__(key))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arrays/_mixins.py\", line 284, in __getitem__\n    result = self._ndarray[key]\nIndexError: index 0 is out of bounds for axis 0 with size 0\n"}}, "MLDebug870": {"stat": "pass", "details": {}}, "MLDebug871": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\n  File \"__test__.py\", line 70, in assert_function_output\n  File \"__test__.py\", line 21, in task_func\nNameError: name 'np' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\n  File \"__test__.py\", line 70, in assert_function_output\n  File \"__test__.py\", line 21, in task_func\nNameError: name 'np' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_4\n  File \"__test__.py\", line 70, in assert_function_output\n  File \"__test__.py\", line 21, in task_func\nNameError: name 'np' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_5\n  File \"__test__.py\", line 70, in assert_function_output\n  File \"__test__.py\", line 21, in task_func\nNameError: name 'np' is not defined\n"}}, "MLDebug872": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_1\n  File \"__test__.py\", line 57, in _check_sales_data\nAssertionError: 1493 != 1492\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_2\nAssertionError: ValueError not raised\n"}}, "MLDebug873": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_2\nAssertionError: Timestamp('2025-01-29 07:52:24.430000') != datetime.datetime(2025, 1, 29, 7, 52, 24, 430664)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_3\nAssertionError: Timestamp('2025-01-02 07:52:24.431000') != datetime.datetime(2025, 1, 2, 7, 52, 24, 431348)\n"}}, "MLDebug874": {"stat": "pass", "details": {}}, "MLDebug875": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug876": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\n  File \"__test__.py\", line 38, in _test_report\n  File \"__test__.py\", line 32, in _test_report_data\nAssertionError: False is not true\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_4\nAssertionError: ValueError not raised\n"}}, "MLDebug877": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_1\n  File \"__test__.py\", line 105, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_2\n  File \"__test__.py\", line 105, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_3\n  File \"__test__.py\", line 105, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_4\n  File \"__test__.py\", line 105, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_5\n  File \"__test__.py\", line 105, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_case_6\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of DataFrame.iloc[:, 1] (column name=\"Datetime\") are different\n\nAttribute \"dtype\" are different\n[left]:  object\n[right]: datetime64[ns]\n"}}, "MLDebug878": {"stat": "fail", "details": {"ALL": "No module named 'xlwt'"}}, "MLDebug879": {"stat": "fail", "details": {"ALL": "No module named 'xlwt'"}}, "MLDebug880": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_1\n  File \"__test__.py\", line 52, in _check_df\nAssertionError: 8 != 7\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_2\n  File \"__test__.py\", line 52, in _check_df\nAssertionError: 11 != 10\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_3\nAssertionError: 2 != 1\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1059, in assert_series_equal\n    assert_extension_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 794, in assert_extension_array_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Date\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Date\") values are different (100.0 %)\n[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]\n[left]:  [1737532348335180000, 1737532348335180000, 1737532348335180000, 1737532348335180000, 1737532348335180000, 1737618748335180000, 1737618748335180000, 1737618748335180000, 1737618748335180000, 1737618748335180000, 1737705148335180000, 1737705148335180000, 1737705148335180000, 1737705148335180000, 1737705148335180000, 1737791548335180000, 1737791548335180000, 1737791548335180000, 1737791548335180000, 1737791548335180000, 1737877948335180000, 1737877948335180000, 1737877948335180000, 1737877948335180000, 1737877948335180000, 1737964348335180000, 1737964348335180000, 1737964348335180000, 1737964348335180000, 1737964348335180000, 1738050748335180000, 1738050748335180000, 1738050748335180000, 1738050748335180000, 1738050748335180000, 1738137148335180000, 1738137148335180000, 1738137148335180000, 1738137148335180000, 1738137148335180000, 1738223548335180000, 1738223548335180000, 1738223548335180000, 1738223548335180000, 1738223548335180000, 1738309948335180000, 1738309948335180000, 1738309948335180000, 1738309948335180000, 1738309948335180000, 1738396348335180000, 1738396348335180000, 1738396348335180000, 1738396348335180000, 1738396348335180000]\n[right]: [1737532348376985000, 1737532348376985000, 1737532348376985000, 1737532348376985000, 1737532348376985000, 1737618748376985000, 1737618748376985000, 1737618748376985000, 1737618748376985000, 1737618748376985000, 1737705148376985000, 1737705148376985000, 1737705148376985000, 1737705148376985000, 1737705148376985000, 1737791548376985000, 1737791548376985000, 1737791548376985000, 1737791548376985000, 1737791548376985000, 1737877948376985000, 1737877948376985000, 1737877948376985000, 1737877948376985000, 1737877948376985000, 1737964348376985000, 1737964348376985000, 1737964348376985000, 1737964348376985000, 1737964348376985000, 1738050748376985000, 1738050748376985000, 1738050748376985000, 1738050748376985000, 1738050748376985000, 1738137148376985000, 1738137148376985000, 1738137148376985000, 1738137148376985000, 1738137148376985000, 1738223548376985000, 1738223548376985000, 1738223548376985000, 1738223548376985000, 1738223548376985000, 1738309948376985000, 1738309948376985000, 1738309948376985000, 1738309948376985000, 1738309948376985000, 1738396348376985000, 1738396348376985000, 1738396348376985000, 1738396348376985000, 1738396348376985000]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_case_5\nAssertionError: ValueError not raised\n"}}, "MLDebug881": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_4\nAssertionError: ValueError not raised\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_case_5\nAssertionError: ValueError not raised\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_case_6\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 326, in assert_index_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nDataFrame.index values are different (100.0 %)\n[left]:  DatetimeIndex(['2025-01-26 07:52:29.003012', '2025-01-27 07:52:29.003012',\n               '2025-01-28 07:52:29.003012', '2025-01-29 07:52:29.003012',\n               '2025-01-30 07:52:29.003012', '2025-01-31 07:52:29.003012',\n               '2025-02-01 07:52:29.003012'],\n              dtype='datetime64[ns]', freq='D')\n[right]: DatetimeIndex(['2025-01-26 07:52:29.003229', '2025-01-27 07:52:29.003229',\n               '2025-01-28 07:52:29.003229', '2025-01-29 07:52:29.003229',\n               '2025-01-30 07:52:29.003229', '2025-01-31 07:52:29.003229',\n               '2025-02-01 07:52:29.003229'],\n              dtype='datetime64[ns]', freq='D')\nAt positional index 0, first diff: 2025-01-26T07:52:29.003012000 != 2025-01-26T07:52:29.003229000\n"}}, "MLDebug882": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 105, in test_case_5\nAssertionError: None is not an instance of <class 'matplotlib.container.BarContainer'>\n"}}, "MLDebug883": {"stat": "fail", "details": {"test_case_12": "Traceback (most recent call last):\n  File \"__test__.py\", line 125, in test_case_12\nAssertionError: ValueError not raised\n", "test_case_14": "Traceback (most recent call last):\n  File \"__test__.py\", line 135, in test_case_14\nAssertionError: ValueError not raised\n"}}, "MLDebug884": {"stat": "fail", "details": {"test_difference_report": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_difference_report\nAssertionError: Lists differ: ['1, ,name,age', '2,-,Alice,30', '3,+,Alic[15 chars],25'] != [\"1, ,('name', 'age')\", \"2,-,('Alice', '30[43 chars]5')\"]\n\nFirst differing element 0:\n'1, ,name,age'\n\"1, ,('name', 'age')\"\n\n- ['1, ,name,age', '2,-,Alice,30', '3,+,Alice,31', '3, ,Bob,25']\n+ [\"1, ,('name', 'age')\",\n+  \"2,-,('Alice', '30')\",\n+  \"3,+,('Alice', '31')\",\n+  \"4, ,('Bob', '25')\"]\n"}}, "MLDebug885": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_1\nAssertionError: Lists differ: [] != [0, 0]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n0\n\n- []\n+ [0, 0]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_2\nAssertionError: 1 != 0\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_3\nAssertionError: 0 != 5\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_4\nValueError: max() arg is an empty sequence\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_case_5\nValueError: max() arg is an empty sequence\n"}}, "MLDebug886": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 99, in test_case_4\nAssertionError: Exception not raised\n"}}, "MLDebug887": {"stat": "pass", "details": {}}, "MLDebug888": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_5\n  File \"__test__.py\", line 8, in task_func\nTypeError: Input data should be a list of dictionaries.\n"}}, "MLDebug889": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_1\nAssertionError: 5.75 != 9.25\n", "test_case_12": "Traceback (most recent call last):\n  File \"__test__.py\", line 151, in test_case_12\nAssertionError: 5.0 != 10\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_3\nAssertionError: 10.0 != 15\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_6\nAssertionError: 5.0 != 10\n"}}, "MLDebug890": {"stat": "pass", "details": {}}, "MLDebug891": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 34)"}}, "MLDebug892": {"stat": "pass", "details": {}}, "MLDebug893": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_3\nAssertionError: Lists differ: ['a'] != ['a', 'b']\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n'b'\n\n- ['a']\n+ ['a', 'b']\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_5\nAssertionError: Lists differ: ['a', 'c'] != ['a', 'b', 'c']\n\nFirst differing element 1:\n'c'\n'b'\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n'c'\n\n- ['a', 'c']\n+ ['a', 'b', 'c']\n?       +++++\n\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 120, in test_case_8\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4214, in _get_value\n    series = self._get_item_cache(col)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4638, in _get_item_cache\n    loc = self.columns.get_loc(item)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'mean'\n"}}, "MLDebug894": {"stat": "pass", "details": {}}, "MLDebug895": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_2\nAssertionError: 'Duplicate Rows' != 'Duplicate Entries'\n- Duplicate Rows\n+ Duplicate Entries\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_case_3\nAssertionError: <Axes: > is not None\n"}}, "MLDebug896": {"stat": "pass", "details": {}}, "MLDebug897": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 21)"}}, "MLDebug898": {"stat": "pass", "details": {}}, "MLDebug899": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_1\nAssertionError: Counter({(2, 1): 3, (1, 1): 1, (3, 3): 1, (4, 3): 1}) != Counter({(2, 1): 3})\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_2\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1, (5, 5): 1, (6, 6): 1}) != Counter()\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_4\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (40, 40[27 chars]: 1}) != Counter()\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_5\nAssertionError: Counter({(5, 5): 4, (1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1}) != Counter({(5, 5): 4})\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_6\nAssertionError: Counter({(3, 3): 3, (1, 1): 1, (2, 2): 1, (4, 4): 1, (5, 5): 1, (6, 6): 1}) != Counter({(3, 3): 3})\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_7\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (10, 10[66 chars]: 1}) != Counter()\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_3\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/base.py\", line 1473, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 1473, in fit\n    self._check_params_vs_input(X)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 1414, in _check_params_vs_input\n    super()._check_params_vs_input(X, default_n_init=10)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 878, in _check_params_vs_input\n    raise ValueError(\nValueError: n_samples=1 should be >= n_clusters=3.\n"}}, "MLDebug900": {"stat": "pass", "details": {}}, "MLDebug901": {"stat": "fail", "details": {"test_base_conversion_and_hashing": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_base_conversion_and_hashing\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'sal' is not defined\n", "test_different_salts_different_hashes": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_different_salts_different_hashes\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'sal' is not defined\n"}}, "MLDebug902": {"stat": "fail", "details": {"ALL": "No module named 'cryptography'"}}, "MLDebug903": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_10\nAssertionError: Exception not raised\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 97, in test_case_9\n  File \"__test__.py\", line 12, in task_func\nValueError: Number of entries must be an integer\n"}}, "MLDebug904": {"stat": "pass", "details": {}}, "MLDebug905": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_case_1\n  File \"__test__.py\", line 82, in _check_plot\nAssertionError: 'Age' != 'age'\n- Age\n? ^\n+ age\n? ^\n : The x-axis label should be 'age'.\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_case_2\n  File \"__test__.py\", line 82, in _check_plot\nAssertionError: 'Age' != 'age'\n- Age\n? ^\n+ age\n? ^\n : The x-axis label should be 'age'.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 93, in test_case_3\n  File \"__test__.py\", line 82, in _check_plot\nAssertionError: 'Age' != 'age'\n- Age\n? ^\n+ age\n? ^\n : The x-axis label should be 'age'.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_case_4\n  File \"__test__.py\", line 82, in _check_plot\nAssertionError: 'Age' != 'age'\n- Age\n? ^\n+ age\n? ^\n : The x-axis label should be 'age'.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 99, in test_case_5\n  File \"__test__.py\", line 82, in _check_plot\nAssertionError: 'Age' != 'age'\n- Age\n? ^\n+ age\n? ^\n : The x-axis label should be 'age'.\n"}}, "MLDebug906": {"stat": "pass", "details": {}}, "MLDebug907": {"stat": "pass", "details": {}}, "MLDebug908": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 88, in test_case_6\nAssertionError: ValueError not raised\n"}}, "MLDebug909": {"stat": "fail", "details": {"test_module_path_in_sys_path": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_module_path_in_sys_path\nAssertionError: False is not true\n", "test_no_duplicates_in_sys_path": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_no_duplicates_in_sys_path\nAssertionError: 0 != 1\n"}}, "MLDebug910": {"stat": "pass", "details": {}}, "MLDebug911": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 936, in assert_series_equal\n    raise_assert_detail(obj, \"Series length are different\", msg1, msg2)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nSeries length are different\n[left]:  3, Index(['Sentence 1', 'Sentence 2', 'Sentence 3'], dtype='object')\n[right]: 1, Index(['Sentence 1'], dtype='object')\n"}}, "MLDebug912": {"stat": "fail", "details": {"test_duplicate_items_across_sublists": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_duplicate_items_across_sublists\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  [None]\n[right]: ['MenuItem']\n", "test_empty_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_empty_list\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  [None]\n[right]: ['MenuItem']\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_normal_functionality\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  [None]\n[right]: ['MenuItem']\n", "test_single_level_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_single_level_list\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  [None]\n[right]: ['MenuItem']\n", "test_uniform_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_uniform_list\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  [None]\n[right]: ['MenuItem']\n"}}, "MLDebug913": {"stat": "pass", "details": {}}, "MLDebug914": {"stat": "pass", "details": {}}, "MLDebug915": {"stat": "pass", "details": {}}, "MLDebug916": {"stat": "pass", "details": {}}, "MLDebug917": {"stat": "pass", "details": {}}, "MLDebug918": {"stat": "pass", "details": {}}, "MLDebug919": {"stat": "pass", "details": {}}, "MLDebug920": {"stat": "pass", "details": {}}, "MLDebug921": {"stat": "pass", "details": {}}, "MLDebug922": {"stat": "fail", "details": {"test_dll_name_returned": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 59, in test_dll_name_returned\nAssertionError: 'tmp134asr_1.dll' != 'test.dll'\n- tmp134asr_1.dll\n+ test.dll\n\n", "test_md5_hash_printed": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_md5_hash_printed\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1000, in assert_any_call\n    raise AssertionError(\nAssertionError: print('MD5 Hash: 9315983fcdb4cccb287bccdbdd4e8a45') call not found\n", "test_sha256_hash_printed": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_sha256_hash_printed\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1000, in assert_any_call\n    raise AssertionError(\nAssertionError: print('SHA256 Hash: d7a8fb48d28d1d73a0346bbf4041df98c2501d4ae4889b934faa63f7af67e9b1') call not found\n"}}, "MLDebug923": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\nAssertionError: Lists differ: [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0] != [1, 2, 3, 4, 5]\n\nFirst differing element 0:\n0.0\n1\n\nFirst list contains 2 additional elements.\nFirst extra element 5:\n5.0\n\n- [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n+ [1, 2, 3, 4, 5]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\nAssertionError: Lists differ: [4.4, 4.6000000000000005, 4.800000000000001, 5.0, 5.2, 5.4, 5.6000000000000005] != [5]\n\nFirst differing element 0:\n4.4\n5\n\nFirst list contains 6 additional elements.\nFirst extra element 1:\n4.6000000000000005\n\n- [4.4, 4.6000000000000005, 4.800000000000001, 5.0, 5.2, 5.4, 5.6000000000000005]\n+ [5]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_3\nAssertionError: Lists differ: [6.4, 6.6000000000000005, 6.800000000000001, 7.0, 7.2, 7.4, 7.6000000000000005] != [7]\n\nFirst differing element 0:\n6.4\n7\n\nFirst list contains 6 additional elements.\nFirst extra element 1:\n6.6000000000000005\n\n- [6.4, 6.6000000000000005, 6.800000000000001, 7.0, 7.2, 7.4, 7.6000000000000005]\n+ [7]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_4\nAssertionError: Lists differ: [0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0] != [1, 2, 4, 8, 10]\n\nFirst differing element 0:\n0.0\n1\n\nFirst list contains 2 additional elements.\nFirst extra element 5:\n10.0\n\n- [0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0]\n+ [1, 2, 4, 8, 10]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_5\nAssertionError: Lists differ: [-20.0, 0.0, 20.0, 40.0, 60.0, 80.0, 100.0, 120.0, 140.0, 160.0] != [1, 50, 100, 150]\n\nFirst differing element 0:\n-20.0\n1\n\nFirst list contains 6 additional elements.\nFirst extra element 4:\n60.0\n\n- [-20.0, 0.0, 20.0, 40.0, 60.0, 80.0, 100.0, 120.0, 140.0, 160.0]\n+ [1, 50, 100, 150]\n"}}, "MLDebug924": {"stat": "fail", "details": {"test_plot_called": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_plot_called\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 908, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called once. Called 0 times.\n", "test_function_with_defaults": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_function_with_defaults\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4221, in _get_value\n    row = self.index.get_loc(index)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'func_with_defaults'\n", "test_multiple_functions": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_multiple_functions\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4221, in _get_value\n    row = self.index.get_loc(index)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'f'\n", "test_no_arguments_function": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_no_arguments_function\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4221, in _get_value\n    row = self.index.get_loc(index)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'no_arg_func'\n", "test_single_function": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_single_function\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1183, in __getitem__\n    return self.obj._get_value(*key, takeable=self._takeable)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4221, in _get_value\n    row = self.index.get_loc(index)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/range.py\", line 417, in get_loc\n    raise KeyError(key)\nKeyError: 'sample_function'\n"}}, "MLDebug925": {"stat": "pass", "details": {}}, "MLDebug926": {"stat": "fail", "details": {"test_function_annotations": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_function_annotations\nAssertionError: {'return': 'None', 'x': \"<class 'int'>\", 'y': \"<class 'str'>\"} != {'x': 'int', 'y': 'str', 'return': 'None'}\n- {'return': 'None', 'x': \"<class 'int'>\", 'y': \"<class 'str'>\"}\n?                        --------      --      --------      --\n\n+ {'return': 'None', 'x': 'int', 'y': 'str'}\n", "test_function_with_no_defaults": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_function_with_no_defaults\nAssertionError: {} is not None\n"}}, "MLDebug927": {"stat": "pass", "details": {}}, "MLDebug928": {"stat": "fail", "details": {"test_statistics_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_statistics_values\nAssertionError: 0.01933205582232549 != 0.4903 within 3 places (0.4709679441776745 difference)\n"}}, "MLDebug929": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\nAssertionError: 3 != 2\n"}}, "MLDebug930": {"stat": "fail", "details": {"test_single_element_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_single_element_list\nAssertionError: Tuples differ: (1, 1) != (5, 1)\n\nFirst differing element 0:\n1\n5\n\n- (1, 1)\n?  ^\n\n+ (5, 1)\n?  ^\n\n", "test_varying_data_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_varying_data_types\nAssertionError: Tuples differ: (1, 5) != (5, 5)\n\nFirst differing element 0:\n1\n5\n\n- (1, 5)\n?  ^\n\n+ (5, 5)\n?  ^\n\n", "test_with_predefined_elements": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_with_predefined_elements\nAssertionError: Tuples differ: (1, 10) != (5, 10)\n\nFirst differing element 0:\n1\n5\n\n- (1, 10)\n?  ^\n\n+ (5, 10)\n?  ^\n\n", "test_shuffle_and_roll_operation": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_shuffle_and_roll_operation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/common.py\", line 76, in new_method\n    return method(self, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arraylike.py\", line 44, in __ne__\n    return self._cmp_method(other, operator.ne)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 7897, in _cmp_method\n    self, other = self._align_for_op(other, axis, flex=False, level=None)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 8196, in _align_for_op\n    raise ValueError(\nValueError: Can only compare identically-labeled (both index and columns) DataFrame objects\n"}}, "MLDebug931": {"stat": "pass", "details": {}}, "MLDebug932": {"stat": "fail", "details": {"test_normalized_text": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_normalized_text\n  File \"__test__.py\", line 49, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 2801, in tight_layout\n    gcf().tight_layout(pad=pad, h_pad=h_pad, w_pad=w_pad, rect=rect)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/figure.py\", line 3545, in tight_layout\n    engine.execute(self)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/layout_engine.py\", line 183, in execute\n    kwargs = get_tight_layout_figure(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 266, in get_tight_layout_figure\n    kwargs = _auto_adjust_subplotpars(fig, renderer,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 82, in _auto_adjust_subplotpars\n    bb += [martist._get_tightbbox_for_layout_only(ax, renderer)]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_api/deprecation.py\", line 457, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_base.py\", line 4476, in get_tightbbox\n    ba = martist._get_tightbbox_for_layout_only(axis, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1372, in get_tightbbox\n    self._update_label_position(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2413, in _update_label_position\n    bboxes, bboxes2 = self._get_tick_boxes_siblings(renderer=renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2206, in _get_tick_boxes_siblings\n    tlb, tlb2 = axis._get_ticklabel_bboxes(ticks_to_draw, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in _get_ticklabel_bboxes\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in <listcomp>\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 959, in get_window_extent\n    bbox, info, descent = self._get_layout(self._renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 373, in _get_layout\n    _, lp_h, lp_d = _get_text_metrics_with_cache(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 69, in _get_text_metrics_with_cache\n    return _get_text_metrics_with_cache_impl(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 77, in _get_text_metrics_with_cache_impl\n    return renderer_ref().get_text_width_height_descent(text, fontprop, ismath)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 219, in get_text_width_height_descent\n    font = self._prepare_font(prop)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 253, in _prepare_font\n    font = get_font(_fontManager._find_fonts_by_props(font_prop))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1560, in get_font\n    return _get_font(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1502, in _get_font\n    return ft2font.FT2Font(\nRuntimeError: In FT2Font: Can not load face (invalid stream operation; error code 0x55)\n", "test_plot_output": "Traceback (most recent call last):\n  File \"__test__.py\", line 88, in test_plot_output\n  File \"__test__.py\", line 49, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 2801, in tight_layout\n    gcf().tight_layout(pad=pad, h_pad=h_pad, w_pad=w_pad, rect=rect)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/figure.py\", line 3545, in tight_layout\n    engine.execute(self)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/layout_engine.py\", line 183, in execute\n    kwargs = get_tight_layout_figure(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 266, in get_tight_layout_figure\n    kwargs = _auto_adjust_subplotpars(fig, renderer,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 82, in _auto_adjust_subplotpars\n    bb += [martist._get_tightbbox_for_layout_only(ax, renderer)]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_api/deprecation.py\", line 457, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_base.py\", line 4476, in get_tightbbox\n    ba = martist._get_tightbbox_for_layout_only(axis, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1372, in get_tightbbox\n    self._update_label_position(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2413, in _update_label_position\n    bboxes, bboxes2 = self._get_tick_boxes_siblings(renderer=renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2206, in _get_tick_boxes_siblings\n    tlb, tlb2 = axis._get_ticklabel_bboxes(ticks_to_draw, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in _get_ticklabel_bboxes\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in <listcomp>\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 959, in get_window_extent\n    bbox, info, descent = self._get_layout(self._renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 373, in _get_layout\n    _, lp_h, lp_d = _get_text_metrics_with_cache(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 69, in _get_text_metrics_with_cache\n    return _get_text_metrics_with_cache_impl(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 77, in _get_text_metrics_with_cache_impl\n    return renderer_ref().get_text_width_height_descent(text, fontprop, ismath)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 219, in get_text_width_height_descent\n    font = self._prepare_font(prop)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 253, in _prepare_font\n    font = get_font(_fontManager._find_fonts_by_props(font_prop))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1560, in get_font\n    return _get_font(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1502, in _get_font\n    return ft2font.FT2Font(\nRuntimeError: In FT2Font: Can not load face (invalid stream operation; error code 0x55)\n", "test_valid_csv_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_valid_csv_file\n  File \"__test__.py\", line 49, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 2801, in tight_layout\n    gcf().tight_layout(pad=pad, h_pad=h_pad, w_pad=w_pad, rect=rect)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/figure.py\", line 3545, in tight_layout\n    engine.execute(self)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/layout_engine.py\", line 183, in execute\n    kwargs = get_tight_layout_figure(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 266, in get_tight_layout_figure\n    kwargs = _auto_adjust_subplotpars(fig, renderer,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_tight_layout.py\", line 82, in _auto_adjust_subplotpars\n    bb += [martist._get_tightbbox_for_layout_only(ax, renderer)]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/_api/deprecation.py\", line 457, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_base.py\", line 4476, in get_tightbbox\n    ba = martist._get_tightbbox_for_layout_only(axis, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1410, in _get_tightbbox_for_layout_only\n    return obj.get_tightbbox(*args, **{**kwargs, \"for_layout_only\": True})\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1372, in get_tightbbox\n    self._update_label_position(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2413, in _update_label_position\n    bboxes, bboxes2 = self._get_tick_boxes_siblings(renderer=renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2206, in _get_tick_boxes_siblings\n    tlb, tlb2 = axis._get_ticklabel_bboxes(ticks_to_draw, renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in _get_ticklabel_bboxes\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 1351, in <listcomp>\n    return ([tick.label1.get_window_extent(renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 959, in get_window_extent\n    bbox, info, descent = self._get_layout(self._renderer)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 373, in _get_layout\n    _, lp_h, lp_d = _get_text_metrics_with_cache(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 69, in _get_text_metrics_with_cache\n    return _get_text_metrics_with_cache_impl(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/text.py\", line 77, in _get_text_metrics_with_cache_impl\n    return renderer_ref().get_text_width_height_descent(text, fontprop, ismath)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 219, in get_text_width_height_descent\n    font = self._prepare_font(prop)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py\", line 253, in _prepare_font\n    font = get_font(_fontManager._find_fonts_by_props(font_prop))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1560, in get_font\n    return _get_font(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/font_manager.py\", line 1502, in _get_font\n    return ft2font.FT2Font(\nRuntimeError: In FT2Font: Can not load face (invalid stream operation; error code 0x55)\n"}}, "MLDebug933": {"stat": "pass", "details": {}}, "MLDebug934": {"stat": "fail", "details": {"ALL": "No module named 'Crypto'"}}, "MLDebug935": {"stat": "fail", "details": {"test_hashing_of_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_hashing_of_content\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_http_error_handling_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 72, in test_http_error_handling_2\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nurllib.error.HTTPError: HTTP Error 404: Not Found\n", "test_return_type": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 42, in test_return_type\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_valid_signature": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 49, in test_valid_signature\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_verification_error_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 79, in test_verification_error_handling\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n"}}, "MLDebug936": {"stat": "fail", "details": {"ALL": "No module named 'cryptography'"}}, "MLDebug937": {"stat": "fail", "details": {"ALL": "No module named 'wikipedia'"}}, "MLDebug938": {"stat": "fail", "details": {"ALL": "No module named 'pyquery'"}}, "MLDebug939": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Normal'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_1\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0    Normal\nName: Category, dtype: object\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Hot'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0        Hot\n1        Hot\n2        Hot\n3       Cold\n4       Cold\n5        Hot\n6       Cold\n7       Cold\n8     Normal\n9        Hot\n10    Normal\n11       Hot\n12    Normal\n13       Hot\n14    Normal\n15      Cold\n16    Normal\n17    Normal\n18    Normal\n19      Cold\n20       Hot\n21    Normal\n22    Normal\n23       Hot\nName: Category, dtype: object\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Normal'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0      Normal\n1        Cold\n2      Normal\n3         Hot\n4         Hot\n        ...  \n115    Normal\n116      Cold\n117    Normal\n118       Hot\n119    Normal\nName: Category, Length: 120, dtype: object\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Normal'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_4\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0     Normal\n1       Cold\n2        Hot\n3       Cold\n4        Hot\n5       Cold\n6     Normal\n7       Cold\n8        Hot\n9     Normal\n10    Normal\n11      Cold\n12      Cold\n13      Cold\n14    Normal\n15       Hot\n16      Cold\n17      Cold\n18      Cold\n19       Hot\n20      Cold\n21       Hot\n22       Hot\n23       Hot\nName: Category, dtype: object\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Hot'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_5\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0        Hot\n1       Cold\n2       Cold\n3     Normal\n4        Hot\n5     Normal\n6     Normal\n7        Hot\n8        Hot\n9     Normal\n10      Cold\n11    Normal\n12       Hot\n13      Cold\n14    Normal\n15       Hot\n16       Hot\n17      Cold\n18      Cold\n19      Cold\n20    Normal\n21      Cold\n22       Hot\n23    Normal\nName: Category, dtype: object\n"}}, "MLDebug940": {"stat": "fail", "details": {"test_csv_file_rows": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_csv_file_rows\nAssertionError: 86401 != 25\n"}}, "MLDebug941": {"stat": "fail", "details": {"test_task_func_runs_without_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 102, in test_task_func_runs_without_error\nAssertionError: False is not true : task_func should run without errors for given input\n", "test_dataframe_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 71, in test_dataframe_content\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n", "test_directory_creation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_directory_creation\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n", "test_empty_dataframe_on_zero_hours": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 79, in test_empty_dataframe_on_zero_hours\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n", "test_plot_generation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 92, in test_plot_generation\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug942": {"stat": "fail", "details": {"test_backup_file_creation": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_backup_file_creation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: copy('./output/weather_data.csv', './output/backup/')\nActual: copy('./output/weather_data.csv', './output/backup')\n", "test_task_func_copies_to_backup_directory": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 76, in test_task_func_copies_to_backup_directory\nAssertionError: 'output/backup' != 'output'\n- output/backup\n+ output\n : The backup directory path does not match the expected directory path.\n"}}, "MLDebug943": {"stat": "pass", "details": {}}, "MLDebug944": {"stat": "pass", "details": {}}, "MLDebug945": {"stat": "fail", "details": {"test_case_insensitivity": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_insensitivity\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n", "test_filter_letter_a": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_filter_letter_a\n  File \"__test__.py\", line 27, in <genexpr>\nAttributeError: 'int' object has no attribute 'startswith'\n"}}, "MLDebug946": {"stat": "fail", "details": {"test_nonexistent_letter": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 61, in test_nonexistent_letter\nAssertionError: <Axes: > is not None : Expected None when no words start with the specified letter.\n"}}, "MLDebug947": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 46, in test_case_2\nAssertionError: None != '/mock_dir/access.log.1'\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 55, in test_case_3\nAssertionError: None != '/mock_dir/access.log.123'\n"}}, "MLDebug948": {"stat": "pass", "details": {}}, "MLDebug949": {"stat": "fail", "details": {"test_no_word_column": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_no_word_column\nAssertionError: ValueError not raised\n"}}, "MLDebug950": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\nAssertionError: Tuples differ: (11, 1) != (10, 10)\n\nFirst differing element 0:\n11\n10\n\n- (11, 1)\n+ (10, 10) : Matrix shape should be 10x10\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_2\nAssertionError: False is not true : All elements should be lowercase letters\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_3\nAssertionError: False is not true : All elements should be alphabetic\n"}}, "MLDebug951": {"stat": "fail", "details": {"test_compilation_failure": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 46, in test_compilation_failure\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 62, in _run_patch\n    return original_run(*args, **kwargs)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 176, in safe_subprocess_run\n    return original_subprocess_run(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['g++', 'example.cpp', '-o', 'output']' returned non-zero exit status 1.\n", "test_compiler_not_found": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 52, in test_compiler_not_found\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 62, in _run_patch\n    return original_run(*args, **kwargs)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 176, in safe_subprocess_run\n    return original_subprocess_run(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['g++', 'example.cpp', '-o', 'output']' returned non-zero exit status 1.\n", "test_empty_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_empty_file\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 62, in _run_patch\n    return original_run(*args, **kwargs)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 176, in safe_subprocess_run\n    return original_subprocess_run(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['g++', './empty_file.cpp', '-o', 'output']' returned non-zero exit status 1.\n", "test_logging_output": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 61, in test_logging_output\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 62, in _run_patch\n    return original_run(*args, **kwargs)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 176, in safe_subprocess_run\n    return original_subprocess_run(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['g++', 'example.cpp', '-o', 'output']' returned non-zero exit status 1.\n", "test_successful_compilation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 42, in test_successful_compilation\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 62, in _run_patch\n    return original_run(*args, **kwargs)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 176, in safe_subprocess_run\n    return original_subprocess_run(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 526, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['g++', 'example.cpp', '-o', 'output']' returned non-zero exit status 1.\n"}}, "MLDebug952": {"stat": "pass", "details": {}}, "MLDebug953": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_1\nAssertionError: 3 != 2\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_5\nAssertionError: 4 != 2\n"}}, "MLDebug954": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'plt' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'plt' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_3\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'plt' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_4\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'plt' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_5\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'plt' is not defined\n"}}, "MLDebug955": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_2\nAssertionError: 1 != 0\n"}}, "MLDebug956": {"stat": "fail", "details": {"test_more_plots_than_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_more_plots_than_data\nAssertionError: False is not true\n"}}, "MLDebug957": {"stat": "pass", "details": {}}, "MLDebug958": {"stat": "fail", "details": {"test_data_integrity": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_data_integrity\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (3, 3)\n[right]: (5, 3)\n", "test_empty_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_empty_input\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (0, 3)\n[right]: (5, 3)\n", "test_invalid_keys": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_invalid_keys\nAssertionError: True is not false\n"}}, "MLDebug959": {"stat": "fail", "details": {"test_goals_and_penalties_within_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_goals_and_penalties_within_range\nValueError: invalid literal for int() with base 10: ''\n", "test_mixed_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_mixed_values\nValueError: invalid literal for int() with base 10: ''\n", "test_negative_input_handling": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_negative_input_handling\nValueError: invalid literal for int() with base 10: ''\n", "test_zero_goals_and_penalties": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_zero_goals_and_penalties\nValueError: invalid literal for int() with base 10: ''\n"}}, "MLDebug960": {"stat": "pass", "details": {}}, "MLDebug961": {"stat": "pass", "details": {}}, "MLDebug962": {"stat": "pass", "details": {}}, "MLDebug963": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 908, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called once. Called 0 times.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 908, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called once. Called 0 times.\n"}}, "MLDebug964": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_1\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'd' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'd' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_3\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'd' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_4\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'd' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_5\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'd' is not defined\n"}}, "MLDebug965": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_1\nAssertionError: False is not true\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 25, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4108, in __getitem__\n    indexer = self.columns._get_indexer_strict(key, \"columns\")[1]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 6200, in _get_indexer_strict\n    self._raise_if_missing(keyarr, indexer, axis_name)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 6249, in _raise_if_missing\n    raise KeyError(f\"None of [{key}] are in the [{axis_name}]\")\nKeyError: \"None of [Index(['Product', 'Month 1', 'Month 2', 'Month 3', 'Month 4', 'Month 5',\\n       'Month 6', 'Month 7', 'Month 8', 'Month 9', 'Month 10', 'Month 11',\\n       'Month 12', 'Average Sales'],\\n      dtype='object')] are in the [columns]\"\n"}}, "MLDebug966": {"stat": "pass", "details": {}}, "MLDebug967": {"stat": "pass", "details": {}}, "MLDebug968": {"stat": "pass", "details": {}}, "MLDebug969": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug970": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"__test__.py\", line 11, in task_func\nValueError: Number of rows must be positive\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_2\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_3\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_4\n  File \"__test__.py\", line 11, in task_func\nValueError: Number of rows must be positive\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_5\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug971": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\nAssertionError: Tuples differ: (10, 3) != (10, 5)\n\nFirst differing element 1:\n3\n5\n\n- (10, 3)\n?      ^\n\n+ (10, 5)\n?      ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_2\nAssertionError: Tuples differ: (50, 3) != (50, 5)\n\nFirst differing element 1:\n3\n5\n\n- (50, 3)\n?      ^\n\n+ (50, 5)\n?      ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_3\nAssertionError: Tuples differ: (100, 3) != (100, 5)\n\nFirst differing element 1:\n3\n5\n\n- (100, 3)\n?       ^\n\n+ (100, 5)\n?       ^\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_4\nAssertionError: Tuples differ: (1, 3) != (1, 5)\n\nFirst differing element 1:\n3\n5\n\n- (1, 3)\n?     ^\n\n+ (1, 5)\n?     ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_case_5\nAssertionError: Tuples differ: (5, 3) != (5, 5)\n\nFirst differing element 1:\n3\n5\n\n- (5, 3)\n?     ^\n\n+ (5, 5)\n?     ^\n\n"}}, "MLDebug972": {"stat": "pass", "details": {}}, "MLDebug973": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (12, 3)\n[right]: (2, 2)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (5, 3)\n[right]: (1, 3)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (4, 3)\n[right]: (2, 2)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (3, 3)\n[right]: (1, 1)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 119, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (8, 3)\n[right]: (2, 2)\n"}}, "MLDebug974": {"stat": "pass", "details": {}}, "MLDebug975": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_5\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb6 in position 0: invalid start byte\n"}}, "MLDebug976": {"stat": "pass", "details": {}}, "MLDebug977": {"stat": "pass", "details": {}}, "MLDebug978": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_1\nAssertionError: -97358026 not greater than 0\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\nAssertionError: -97340026 not greater than 0\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_4\nAssertionError: 863999 not less than 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_5\nAssertionError: -97377826 not greater than 0\n"}}, "MLDebug979": {"stat": "pass", "details": {}}, "MLDebug980": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of Series are different\n\nAttribute \"dtype\" are different\n[left]:  float64\n[right]: int64\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of Series are different\n\nAttribute \"dtype\" are different\n[left]:  float64\n[right]: int64\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of Series are different\n\nAttribute \"dtype\" are different\n[left]:  float64\n[right]: int64\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of Series are different\n\nAttribute \"dtype\" are different\n[left]:  float64\n[right]: int64\n"}}, "MLDebug981": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (12, 3)\n[right]: (4, 3)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (5, 3)\n[right]: (3, 3)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (75.0 %)\n[index]: [0, 1, 2, 3]\n[left]:  [1, 3, 4, 5]\n[right]: [1, 1, 1, 1]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (3, 3)\n[right]: (1, 3)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (8, 3)\n[right]: (4, 3)\n"}}, "MLDebug982": {"stat": "pass", "details": {}}, "MLDebug983": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_5\nAssertionError: 0 != 1\n"}}, "MLDebug984": {"stat": "fail", "details": {"test_multiple_matches": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_multiple_matches\nAssertionError: ('N/A', 'N/A', 'N/A', 'N/A') == ('N/A', 'N/A', 'N/A', 'N/A') : Should not return 'N/A' for all stats if multiple targets found.\n", "test_single_match": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_single_match\nAssertionError: 'N/A' == 'N/A' : Mean should not be 'N/A' for a single match.\n"}}, "MLDebug985": {"stat": "pass", "details": {}}, "MLDebug986": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug987": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug988": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (100.0 %)\n[index]: [0, 1, 2, 3]\n[left]:  [1.3333333333333333, 3.0, 2.0, 3.0]\n[right]: [2, 1, 3, 1]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (100.0 %)\n[index]: [0, 1]\n[left]:  [2.0, 3.0]\n[right]: [3, 1]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (100.0 %)\n[index]: [0, 1]\n[left]:  [4.0, 8.0]\n[right]: [3, 1]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (75.0 %)\n[index]: [0, 1, 2, 3]\n[left]:  [2.5, 4.0, 0.0, 1.0]\n[right]: [2, 2, 1, 1]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 102, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 2] (column name=\"col3\") are different\n\nDataFrame.iloc[:, 2] (column name=\"col3\") values are different (100.0 %)\n[index]: [0, 1, 2, 3]\n[left]:  [0.5, 0.5, 0.5, 0.5]\n[right]: [2, 2, 2, 2]\n"}}, "MLDebug989": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_1\nAssertionError: Tuples differ: (3, 3) != (3, 6)\n\nFirst differing element 1:\n3\n6\n\n- (3, 3)\n?     ^\n\n+ (3, 6)\n?     ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_2\nAssertionError: Tuples differ: (2, 2) != (2, 4)\n\nFirst differing element 1:\n2\n4\n\n- (2, 2)\n?     ^\n\n+ (2, 4)\n?     ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\nAssertionError: Tuples differ: (1, 1) != (1, 2)\n\nFirst differing element 1:\n1\n2\n\n- (1, 1)\n?     ^\n\n+ (1, 2)\n?     ^\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_4\nAssertionError: Tuples differ: (3, 3) != (3, 6)\n\nFirst differing element 1:\n3\n6\n\n- (3, 3)\n?     ^\n\n+ (3, 6)\n?     ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_5\nAssertionError: Tuples differ: (2, 2) != (2, 4)\n\nFirst differing element 1:\n2\n4\n\n- (2, 2)\n?     ^\n\n+ (2, 4)\n?     ^\n\n"}}, "MLDebug990": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_1\n  File \"__test__.py\", line 25, in task_func\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 20 but corresponding boolean dimension is 5\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_2\n  File \"__test__.py\", line 25, in task_func\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 9 but corresponding boolean dimension is 3\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_3\n  File \"__test__.py\", line 25, in task_func\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 6 but corresponding boolean dimension is 3\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_4\n  File \"__test__.py\", line 25, in task_func\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 30 but corresponding boolean dimension is 3\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_5\n  File \"__test__.py\", line 25, in task_func\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 30 but corresponding boolean dimension is 3\n"}}, "MLDebug991": {"stat": "fail", "details": {"test_plot_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_plot_labels\nAssertionError: Lists differ: ['Test 1', 'Fit', 'Test 2', 'Fit', 'Test 3', 'Fit'] != ['Test 1', 'Test 2', 'Test 3']\n\nFirst differing element 1:\n'Fit'\n'Test 2'\n\nFirst list contains 3 additional elements.\nFirst extra element 3:\n'Fit'\n\n- ['Test 1', 'Fit', 'Test 2', 'Fit', 'Test 3', 'Fit']\n+ ['Test 1', 'Test 2', 'Test 3'] : Legend labels do not match input labels.\n"}}, "MLDebug992": {"stat": "pass", "details": {}}, "MLDebug993": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_2\nAssertionError: Lists differ: ['a'] != ['b', 'c']\n\nFirst differing element 0:\n'a'\n'b'\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n'c'\n\n- ['a']\n+ ['b', 'c']\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_4\nAssertionError: Lists differ: ['b'] != ['a', 'e']\n\nFirst differing element 0:\n'b'\n'a'\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n'e'\n\n- ['b']\n+ ['a', 'e']\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_5\nAssertionError: Lists differ: ['d'] != ['a', 'b', 'c']\n\nFirst differing element 0:\n'd'\n'a'\n\nSecond list contains 2 additional elements.\nFirst extra element 1:\n'b'\n\n- ['d']\n+ ['a', 'b', 'c']\n"}}, "MLDebug994": {"stat": "pass", "details": {}}, "MLDebug995": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_5\n  File \"__test__.py\", line 38, in base\n  File \"__test__.py\", line 10, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1026, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 620, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1620, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1898, in _make_engine\n    return mapping[engine](f, **self.options)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 93, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"parsers.pyx\", line 581, in pandas._libs.parsers.TextReader.__cinit__\npandas.errors.EmptyDataError: No columns to parse from file\n"}}, "MLDebug996": {"stat": "pass", "details": {}}, "MLDebug997": {"stat": "pass", "details": {}}, "MLDebug998": {"stat": "pass", "details": {}}, "MLDebug999": {"stat": "pass", "details": {}}, "MLDebug1000": {"stat": "pass", "details": {}}, "MLDebug1001": {"stat": "pass", "details": {}}, "MLDebug1002": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_case_1\nTypeError: object of type 'numpy.float64' has no len()\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_2\nTypeError: object of type 'numpy.float64' has no len()\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_3\nTypeError: object of type 'numpy.float64' has no len()\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_4\nTypeError: object of type 'numpy.float64' has no len()\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_5\nTypeError: object of type 'numpy.float64' has no len()\n"}}, "MLDebug1003": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 18, in test_case_1\nAssertionError: 1 != 0\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_3\nAssertionError: 1 != 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_5\nAssertionError: 1 != 0\n"}}, "MLDebug1004": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_4\nAssertionError: ValueError not raised\n"}}, "MLDebug1005": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 119, in test_case_1\nAssertionError: Lists differ: ['first@example.com', 'second@example.com', 'third@example.com'] != ['0', '1', '2']\n\nFirst differing element 0:\n'first@example.com'\n'0'\n\n- ['first@example.com', 'second@example.com', 'third@example.com']\n+ ['0', '1', '2']\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 130, in test_case_2\nAssertionError: Lists differ: ['fourth@example.com', 'fifth@example.com',[39 chars]com'] != ['0', '1', '2', '3']\n\nFirst differing element 0:\n'fourth@example.com'\n'0'\n\n+ ['0', '1', '2', '3']\n- ['fourth@example.com',\n-  'fifth@example.com',\n-  'sixth@example.com',\n-  'seventh@example.com']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 141, in test_case_3\nAssertionError: Lists differ: ['eight@example.com', 'ninth@example.com'] != ['0', '1']\n\nFirst differing element 0:\n'eight@example.com'\n'0'\n\n- ['eight@example.com', 'ninth@example.com']\n+ ['0', '1']\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 152, in test_case_4\nAssertionError: Lists differ: ['tenth@example.com'] != ['0']\n\nFirst differing element 0:\n'tenth@example.com'\n'0'\n\n- ['tenth@example.com']\n+ ['0']\n"}}, "MLDebug1006": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\nAssertionError: Lists differ: [] != [['a', 'b', 'c'], ['1', '2', '3']]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n['a', 'b', 'c']\n\n- []\n+ [['a', 'b', 'c'], ['1', '2', '3']]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_2\nAssertionError: Lists differ: [] != [['z', 'y', 'x'], ['1', '2', '3']]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n['z', 'y', 'x']\n\n- []\n+ [['z', 'y', 'x'], ['1', '2', '3']]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_3\nAssertionError: Lists differ: [] != [['xxx'], ['99']]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n['xxx']\n\n- []\n+ [['xxx'], ['99']]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_4\nAssertionError: Lists differ: [] != [['yyy'], ['99']]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n['yyy']\n\n- []\n+ [['yyy'], ['99']]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_case_5\nAssertionError: Lists differ: [] != [['zzz'], ['99']]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n['zzz']\n\n- []\n+ [['zzz'], ['99']]\n"}}, "MLDebug1007": {"stat": "fail", "details": {"test_multiple_keywords": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_multiple_keywords\nAssertionError: False is not true\n", "test_single_keyword": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_single_keyword\nAssertionError: False is not true\n", "test_empty_keywords": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_empty_keywords\n  File \"__test__.py\", line 17, in task_func\nUnboundLocalError: local variable 'formatted_line' referenced before assignment\n"}}, "MLDebug1008": {"stat": "pass", "details": {}}, "MLDebug1009": {"stat": "pass", "details": {}}, "MLDebug1010": {"stat": "fail", "details": {"test_multiple_paths": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_multiple_paths\nAssertionError: '/path/to/test/directory1' not found in ['/home/jyhuang/code/MLDebug/eval', '/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python310.zip', '/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10', '/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/lib-dynload', '/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages', '/path/to/test/directory', '/path/to/whatever', '/path/to/whatever', '/path/to/whatever', \"['/path/to/test/directory1', '/path/to/test/directory2']\"]\n"}}, "MLDebug1011": {"stat": "fail", "details": {"ALL": "No module named 'pyfakefs'"}}, "MLDebug1012": {"stat": "fail", "details": {"test_data_appending": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_data_appending\nAssertionError: 11 != 12\n", "test_file_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_file_content\nAssertionError: False is not true\n"}}, "MLDebug1013": {"stat": "fail", "details": {"test_correct_scraping": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 47, in test_correct_scraping\n  File \"__test__.py\", line 15, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n", "test_empty_table": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_empty_table\n  File \"__test__.py\", line 15, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n", "test_overwrite_existing_csv": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_overwrite_existing_csv\n  File \"__test__.py\", line 15, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n"}}, "MLDebug1014": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1015": {"stat": "pass", "details": {}}, "MLDebug1016": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 44, in test_case_1\nAssertionError: Lists differ: [] != [{'Name': 'Alice', 'Age': '30'}, {'Name': 'Bob', 'Age': '25'}]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n{'Name': 'Alice', 'Age': '30'}\n\n- []\n+ [{'Age': '30', 'Name': 'Alice'}, {'Age': '25', 'Name': 'Bob'}]\n", "test_csv_with_only_headers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_csv_with_only_headers\nAssertionError: 'Name,Age\\n' not found in ''\n", "test_different_encoding": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_different_encoding\nAssertionError: 'Alice' not found in ''\n", "test_empty_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 67, in test_empty_file\nAssertionError: '' != 'Column'\n+ Column\n"}}, "MLDebug1017": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 37)"}}, "MLDebug1018": {"stat": "pass", "details": {}}, "MLDebug1019": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_case_1\nAssertionError: 2 != 1\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_case_2\nAssertionError: 1 != 0\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_8\nAssertionError: 2 != 1\n"}}, "MLDebug1020": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1021": {"stat": "fail", "details": {"test_median_empty_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_median_empty_list\nAssertionError: ValueError not raised\n"}}, "MLDebug1022": {"stat": "pass", "details": {}}, "MLDebug1023": {"stat": "pass", "details": {}}, "MLDebug1024": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1025": {"stat": "fail", "details": {"test_environment_variables": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_environment_variables\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/path'\n", "test_full_path_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_full_path_execution\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/path'\n", "test_random_script_selection": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_random_script_selection\n  File \"__test__.py\", line 51, in <setcomp>\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/path'\n", "test_script_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_script_execution\n  File \"__test__.py\", line 18, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/path'\n"}}, "MLDebug1026": {"stat": "pass", "details": {}}, "MLDebug1027": {"stat": "pass", "details": {}}, "MLDebug1028": {"stat": "fail", "details": {"test_error_on_non_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 112, in test_error_on_non_empty_dataframe\nAssertionError: False is not true : Function should raise ValueError for non-empty DataFrame input.\n"}}, "MLDebug1029": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 44)"}}, "MLDebug1030": {"stat": "fail", "details": {"test_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_1\nAssertionError: False is not true : Expected average distance to be between 3.1 and 3.5, got 2.550461981390763\n", "test_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_2\nAssertionError: False is not true : Expected average distance to be between 3.2 and 3.5, got 2.524780156830837\n", "test_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_3\nAssertionError: False is not true : Expected average distance to be between 2.8 and 3.7, got 2.5759837743601155\n", "test_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_4\nAssertionError: False is not true : Expected average distance to be between 2.4 and 4.1, got 2.3499204146719115\n"}}, "MLDebug1031": {"stat": "pass", "details": {}}, "MLDebug1032": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1033": {"stat": "pass", "details": {}}, "MLDebug1034": {"stat": "pass", "details": {}}, "MLDebug1035": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 94, in test_case_1\n  File \"__test__.py\", line 88, in validate_data\nKeyError: 'key'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 97, in test_case_2\n  File \"__test__.py\", line 88, in validate_data\nKeyError: 'key'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_3\n  File \"__test__.py\", line 88, in validate_data\nKeyError: 'key'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_case_4\n  File \"__test__.py\", line 88, in validate_data\nKeyError: 'key'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 106, in test_case_5\n  File \"__test__.py\", line 88, in validate_data\nKeyError: 'key'\n"}}, "MLDebug1036": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1037": {"stat": "fail", "details": {"test_files_do_not_exist": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_files_do_not_exist\nAssertionError: 2 != 0\n", "test_files_with_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_files_with_content\nAssertionError: False is not true\n", "test_files_with_no_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_files_with_no_content\nAssertionError: False is not true\n", "test_mixed_case": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_mixed_case\nAssertionError: False is not true\n"}}, "MLDebug1038": {"stat": "pass", "details": {}}, "MLDebug1039": {"stat": "fail", "details": {"test_empty_directory": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_empty_directory\n  File \"__test__.py\", line 10, in task_func\nOSError: Directory /mnt/data/test_data does not exist or is not accessible\n", "test_file_creation_and_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_file_creation_and_content\n  File \"__test__.py\", line 10, in task_func\nOSError: Directory /mnt/data/test_data does not exist or is not accessible\n", "test_mixed_file_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_mixed_file_types\n  File \"__test__.py\", line 10, in task_func\nOSError: Directory /mnt/data/test_data does not exist or is not accessible\n", "test_non_matching_files": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_non_matching_files\n  File \"__test__.py\", line 10, in task_func\nOSError: Directory /mnt/data/test_data does not exist or is not accessible\n"}}, "MLDebug1040": {"stat": "fail", "details": {"test_move_json_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 50, in test_move_json_files\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 982, in assert_has_calls\n    raise AssertionError(\nAssertionError: 'move' does not contain all of (call('/source/dir/data-1.json', '/target/dir/data.json'), call('/source/dir/info-2.json', '/target/dir/info.json'), call('/source/dir/report-3.json', '/target/dir/report.json')) in its call list, found [] instead\n", "test_renaaccuracy": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_renaaccuracy\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 982, in assert_has_calls\n    raise AssertionError(\nAssertionError: 'move' does not contain all of (call('/source/dir/complex-pattern-123-1.json', '/target/dir/complex-pattern-123.json'), call('/source/dir/simple-2.json', '/target/dir/simple.json')) in its call list, found [] instead\n"}}, "MLDebug1041": {"stat": "pass", "details": {}}, "MLDebug1042": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_2\nAssertionError: {'a':[68 chars]'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0[84 chars]': 0} != {'a':[68 chars]'j': 1, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0[84 chars]': 0}\n  {'a': 1,\n   'b': 1,\n   'c': 1,\n   'd': 1,\n   'e': 1,\n   'f': 1,\n   'g': 1,\n   'h': 1,\n   'i': 1,\n-  'j': 0,\n?       ^\n\n+  'j': 1,\n?       ^\n\n   'k': 0,\n   'l': 0,\n   'm': 0,\n   'n': 0,\n   'o': 0,\n   'p': 0,\n   'q': 0,\n   'r': 0,\n   's': 0,\n   't': 0,\n   'u': 0,\n   'v': 0,\n   'w': 0,\n   'x': 0,\n   'y': 0,\n   'z': 0}\n"}}, "MLDebug1043": {"stat": "pass", "details": {}}, "MLDebug1044": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1045": {"stat": "pass", "details": {}}, "MLDebug1046": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1047": {"stat": "fail", "details": {"test_article_timezone_conversion": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_article_timezone_conversion\n  File \"__test__.py\", line 27, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 257, in aggregate\n    ret = self._aggregate_multiple_funcs(func, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 335, in _aggregate_multiple_funcs\n    raise SpecificationError(\"nested renamer is not supported\")\npandas.errors.SpecificationError: nested renamer is not supported\n", "test_conversion_and_grouping": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_conversion_and_grouping\n  File \"__test__.py\", line 27, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 257, in aggregate\n    ret = self._aggregate_multiple_funcs(func, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 335, in _aggregate_multiple_funcs\n    raise SpecificationError(\"nested renamer is not supported\")\npandas.errors.SpecificationError: nested renamer is not supported\n", "test_different_timezones_across_categories": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_different_timezones_across_categories\n  File \"__test__.py\", line 27, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 257, in aggregate\n    ret = self._aggregate_multiple_funcs(func, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/groupby/generic.py\", line 335, in _aggregate_multiple_funcs\n    raise SpecificationError(\"nested renamer is not supported\")\npandas.errors.SpecificationError: nested renamer is not supported\n"}}, "MLDebug1048": {"stat": "fail", "details": {"test_empty_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_empty_file\nAssertionError: 0 != '0 bytes'\n", "test_file_not_found": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_file_not_found\nAssertionError: 'No such file or directory' not found in 'File does not exist'\n", "test_file_properties": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_file_properties\nAssertionError: 1000000 != '1000000 bytes'\n", "test_permission_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_permission_error\nAssertionError: 'Permission denied' not found in 'File does not exist'\n", "test_large_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_large_file\nAttributeError: 'int' object has no attribute 'replace'\n"}}, "MLDebug1049": {"stat": "pass", "details": {}}, "MLDebug1050": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1051": {"stat": "pass", "details": {}}, "MLDebug1052": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1053": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1054": {"stat": "pass", "details": {}}, "MLDebug1055": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1056": {"stat": "fail", "details": {"test_custom_list_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_custom_list_input\nAssertionError: Lists differ: ['W', 'V', 'U', 'X', 'Y', 'Z'] != ['V', 'X', 'U', 'W', 'Y', 'Z']\n\nFirst differing element 0:\n'W'\n'V'\n\n- ['W', 'V', 'U', 'X', 'Y', 'Z']\n+ ['V', 'X', 'U', 'W', 'Y', 'Z']\n", "test_three_elements_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_three_elements_list\nAssertionError: Lists differ: ['Y', 'X', 'Z'] != ['X', 'Y', 'Z']\n\nFirst differing element 0:\n'Y'\n'X'\n\n- ['Y', 'X', 'Z']\n+ ['X', 'Y', 'Z']\n"}}, "MLDebug1057": {"stat": "pass", "details": {}}, "MLDebug1058": {"stat": "pass", "details": {}}, "MLDebug1059": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1060": {"stat": "fail", "details": {"test_directory_does_not_exist": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_directory_does_not_exist\nAssertionError: 'No backups found in /tmp/backup. Cannot rollback update.' != '/tmp/nonexistent'\n- No backups found in /tmp/backup. Cannot rollback update.\n+ /tmp/nonexistent\n\n", "test_erroneous_backup_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 70, in test_erroneous_backup_content\nAssertionError: Exception not raised\n", "test_no_backups_in_backup_directory": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 51, in test_no_backups_in_backup_directory\nAssertionError: \"An error occurred: [Errno 2] No such file or directory: '/tmp/my_data'\" != 'No backups found in /tmp/backup. Cannot rollback update.'\n- An error occurred: [Errno 2] No such file or directory: '/tmp/my_data'\n+ No backups found in /tmp/backup. Cannot rollback update.\n\n", "test_successful_rollback": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 37, in test_successful_rollback\nAssertionError: 'No backups found in /tmp/backup. Cannot rollback update.' != '/tmp/my_data'\n- No backups found in /tmp/backup. Cannot rollback update.\n+ /tmp/my_data\n\n"}}, "MLDebug1061": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_case_1\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_2\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_3\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_4\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_5\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n", "test_range_limit": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_range_limit\n  File \"__test__.py\", line 7, in task_func\n  File \"__test__.py\", line 7, in <listcomp>\nTypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'\n"}}, "MLDebug1062": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1063": {"stat": "pass", "details": {}}, "MLDebug1064": {"stat": "pass", "details": {}}, "MLDebug1065": {"stat": "pass", "details": {}}, "MLDebug1066": {"stat": "fail", "details": {"test_empty_metrics": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 82, in test_empty_metrics\nAssertionError: False is not true\n"}}, "MLDebug1067": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1068": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1069": {"stat": "pass", "details": {}}, "MLDebug1070": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1071": {"stat": "pass", "details": {}}, "MLDebug1072": {"stat": "pass", "details": {}}, "MLDebug1073": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 212, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1067, in assert_series_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Combinations\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Combinations\") values are different (97.28261 %)\n[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]\n[left]:  [(1, 2, 47), (1, 3, 46), (1, 4, 45), (1, 5, 44), (1, 6, 43), (1, 7, 42), (1, 8, 41), (1, 9, 40), (1, 10, 39), (1, 11, 38), (1, 12, 37), (1, 13, 36), (1, 14, 35), (1, 15, 34), (1, 16, 33), (1, 17, 32), (1, 18, 31), (1, 19, 30), (1, 20, 29), (1, 21, 28), (1, 22, 27), (1, 23, 26), (1, 24, 25), (2, 3, 45), (2, 4, 44), (2, 5, 43), (2, 6, 42), (2, 7, 41), (2, 8, 40), (2, 9, 39), (2, 10, 38), (2, 11, 37), (2, 12, 36), (2, 13, 35), (2, 14, 34), (2, 15, 33), (2, 16, 32), (2, 17, 31), (2, 18, 30), (2, 19, 29), (2, 20, 28), (2, 21, 27), (2, 22, 26), (2, 23, 25), (3, 4, 43), (3, 5, 42), (3, 6, 41), (3, 7, 40), (3, 8, 39), (3, 9, 38), (3, 10, 37), (3, 11, 36), (3, 12, 35), (3, 13, 34), (3, 14, 33), (3, 15, 32), (3, 16, 31), (3, 17, 30), (3, 18, 29), (3, 19, 28), (3, 20, 27), (3, 21, 26), (3, 22, 25), (3, 23, 24), (4, 5, 41), (4, 6, 40), (4, 7, 39), (4, 8, 38), (4, 9, 37), (4, 10, 36), (4, 11, 35), (4, 12, 34), (4, 13, 33), (4, 14, 32), (4, 15, 31), (4, 16, 30), (4, 17, 29), (4, 18, 28), (4, 19, 27), (4, 20, 26), (4, 21, 25), (4, 22, 24), (5, 6, 39), (5, 7, 38), (5, 8, 37), (5, 9, 36), (5, 10, 35), (5, 11, 34), (5, 12, 33), (5, 13, 32), (5, 14, 31), (5, 15, 30), (5, 16, 29), (5, 17, 28), (5, 18, 27), (5, 19, 26), (5, 20, 25), (5, 21, 24), (5, 22, 23), (6, 7, 37), ...]\n[right]: [(1, 12, 37), (1, 13, 36), (12, 16, 22), (3, 22, 25), (2, 14, 34), (3, 23, 24), (5, 12, 33), (5, 13, 32), (9, 10, 31), (1, 11, 38), (3, 20, 27), (3, 21, 26), (6, 19, 25), (5, 11, 34), (9, 16, 25), (2, 5, 43), (7, 20, 23), (1, 2, 47), (7, 21, 22), (6, 10, 34), (6, 17, 27), (6, 18, 26), (11, 13, 26), (2, 3, 45), (2, 4, 44), (7, 19, 24), (6, 8, 36), (10, 18, 22), (4, 13, 33), (6, 16, 28), (4, 21, 25), (3, 10, 37), (11, 19, 20), (10, 16, 24), (1, 22, 27), (4, 11, 35), (4, 12, 34), (7, 10, 33), (12, 18, 20), (4, 19, 27), (3, 8, 39), (3, 9, 38), (6, 7, 37), (1, 21, 28), (4, 10, 36), (5, 14, 31), (7, 8, 35), (7, 9, 34), (15, 16, 19), (3, 7, 40), (2, 22, 26), (9, 18, 23), (2, 23, 25), (5, 21, 24), (9, 19, 22), (1, 19, 30), (8, 15, 27), (1, 20, 29), (8, 16, 26), (4, 9, 37), (5, 19, 26), (9, 17, 24), (8, 13, 29), (2, 13, 35), (8, 14, 28), (1, 10, 39), (4, 7, 39), (12, 14, 24), (8, 12, 30), (2, 12, 36), (10, 19, 21), (1, 8, 41), (1, 9, 40), (4, 22, 24), (2, 10, 38), (3, 19, 28), (2, 11, 37), (5, 9, 36), (10, 17, 23), (2, 18, 30), (1, 7, 42), (4, 20, 26), (14, 17, 19), (3, 17, 30), (3, 18, 29), (5, 7, 38), (4, 18, 28), (7, 17, 26), (13, 18, 19), (3, 15, 32), (14, 16, 20), (3, 16, 31), (6, 14, 30), (5, 6, 39), (5, 22, 23), (11, 17, 22), (7, 15, 28), (7, 16, 27), (6, 12, 32), (6, 13, 31), ...]\nAt positional index 0, first diff: (1, 2, 47) != (1, 12, 37)\n", "test_edge_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 424, in test_edge_case_4\nAssertionError: 10 != 1\n"}}, "MLDebug1074": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1075": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_1\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpo1mveu94/task_func.log'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_2\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmp43w_3l76/task_func.log'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_3\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmp1q0me69r/task_func.log'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_4\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpr0hgjmml/task_func.log'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_5\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpwfirrglc/task_func.log'\n"}}, "MLDebug1076": {"stat": "fail", "details": {"test_empty_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_empty_string\nAssertionError: Lists differ: [] != ['']\n\nSecond list contains 1 additional elements.\nFirst extra element 0:\n''\n\n- []\n+ ['']\n", "test_string_with_special_characters": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_string_with_special_characters\nAssertionError: Lists differ: ['special', 'chars'] != ['special', 'chars', '']\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n''\n\n- ['special', 'chars']\n+ ['special', 'chars', '']\n?                    ++++\n\n", "test_string_with_whitespaces": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_string_with_whitespaces\nAssertionError: Lists differ: ['extra', 'whitespaces'] != ['', 'extra', 'whitespaces', '']\n\nFirst differing element 0:\n'extra'\n''\n\nSecond list contains 2 additional elements.\nFirst extra element 2:\n'whitespaces'\n\n- ['extra', 'whitespaces']\n+ ['', 'extra', 'whitespaces', '']\n?  ++++                      ++++\n\n"}}, "MLDebug1077": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1078": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1079": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1080": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1081": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1082": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 20)"}}, "MLDebug1083": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1084": {"stat": "fail", "details": {"test_new_custom_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_new_custom_parameters\nAssertionError: Lists differ: ['iPhone,138.0,49.58458643734242', 'Apple W[127 chars]487'] != ['Macbook,1561,444.82670855378143', 'iPad,1[123 chars]959']\n\nFirst differing element 0:\n'iPhone,138.0,49.58458643734242'\n'Macbook,1561,444.82670855378143'\n\n- ['iPhone,138.0,49.58458643734242',\n-  'Apple Watch,110.0,41.05587520704858',\n-  'iPad,114.0,39.48946187330003',\n-  'Macbook,120.0,27.74444737061848',\n-  'Airpods,118.0,25.95940801330487']\n+ ['Macbook,1561,444.82670855378143',\n+  'iPad,1383,401.9253335536443',\n+  'Airpods,1297,381.4827132170069',\n+  'Apple Watch,1123,308.07853599252707',\n+  'iPhone,921,294.0138866107959'] : DataFrame contents should match the expected output\n"}}, "MLDebug1085": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1086": {"stat": "pass", "details": {}}, "MLDebug1087": {"stat": "fail", "details": {"ALL": "No module named 'Levenshtein'"}}, "MLDebug1088": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1089": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1090": {"stat": "pass", "details": {}}, "MLDebug1091": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_5\nAssertionError: 'Hello,\\n@world! #T\\nhis$is^a&t\\nest*string' != 'Hello,\\n@world!\\n#This$was^a&test*string'\n  Hello,\n- @world! #T\n?        ---\n+ @world!\n+ #This$was^a&test*string- his$is^a&t\n- est*string\n"}}, "MLDebug1092": {"stat": "pass", "details": {}}, "MLDebug1093": {"stat": "fail", "details": {"test_exception_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_exception_handling\nAssertionError: Lists differ: ['invalid file name.jpg'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'invalid file name.jpg'\n\n- ['invalid file name.jpg']\n+ []\n"}}, "MLDebug1094": {"stat": "pass", "details": {}}, "MLDebug1095": {"stat": "fail", "details": {"test_valid_pattern_matching": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_valid_pattern_matching\nAssertionError: Lists differ: ['zaZsw', 'mJkhA', 'zFjSl', 'JToGR', 'nXIlK[60 chars]FzX'] != ['mrKBk', 'BqJOl', 'NJlwV', 'UfHVA', 'LGkjn[60 chars]lqL']\n\nFirst differing element 0:\n'zaZsw'\n'mrKBk'\n\n- ['zaZsw',\n-  'mJkhA',\n-  'zFjSl',\n-  'JToGR',\n-  'nXIlK',\n-  'ZjoHj',\n-  'WVwQV',\n-  'DdMuL',\n-  'mVRIe',\n-  'okrHG',\n-  'aaElL',\n-  'XfFzX']\n+ ['mrKBk',\n+  'BqJOl',\n+  'NJlwV',\n+  'UfHVA',\n+  'LGkjn',\n+  'vubDv',\n+  'GSVAa',\n+  'kXLls',\n+  'RKlVy',\n+  'vZcoh',\n+  'FnVZW',\n+  'JQlqL']\n"}}, "MLDebug1096": {"stat": "pass", "details": {}}, "MLDebug1097": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 109, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 131, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 143, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n"}}, "MLDebug1098": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1099": {"stat": "pass", "details": {}}, "MLDebug1100": {"stat": "fail", "details": {"test_function_with_non_numeric_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_function_with_non_numeric_data\nAssertionError: Lists differ: [nan, nan] != [nan, nan]\n\nFirst differing element 0:\nnan\nnan\n\n  [nan, nan]\n"}}, "MLDebug1101": {"stat": "fail", "details": {"test_uneven_tuples": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_uneven_tuples\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 521, in assert_almost_equal\n    return assert_array_almost_equal(actual, desired, decimal, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 797, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 7 decimals\n\nMismatched elements: 3 / 4 (75%)\nMax absolute difference: 4.8\nMax relative difference: 0.8\n x: array([nan, 2.4, 2.8, 1.2])\n y: array([      nan, 3.       , 4.6666667, 6.       ])\n"}}, "MLDebug1102": {"stat": "pass", "details": {}}, "MLDebug1103": {"stat": "fail", "details": {"test_random_fill": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_random_fill\nAssertionError: False is not true\n"}}, "MLDebug1104": {"stat": "fail", "details": {"test_empty_dictionary": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_empty_dictionary\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_non_existent_source_directory": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/shutil.py\", line 557, in copytree\n    with os.scandir(src) as itr:\nFileNotFoundError: [Errno 2] No such file or directory: '/path/to/non/existent/directory'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 83, in test_non_existent_source_directory\n  File \"__test__.py\", line 32, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  [Previous line repeated 1 more time]\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/path'\n", "test_non_string_dictionary": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_non_string_dictionary\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_normal_operation": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_normal_operation\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_pre_existing_files_in_backup": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_pre_existing_files_in_backup\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'backup_statu' is not defined\n"}}, "MLDebug1105": {"stat": "fail", "details": {"test_edge_case_non_categorical": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_edge_case_non_categorical\n  File \"__test__.py\", line 21, in task_func\nValueError: Some categories have less than 5 observations.\n"}}, "MLDebug1106": {"stat": "pass", "details": {}}, "MLDebug1107": {"stat": "fail", "details": {"test_different_pattern": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_different_pattern\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (6, 1)\n[right]: (1, 2)\n", "test_no_matches": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_no_matches\nAssertionError: False is not true\n", "test_regular_expression_match": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_regular_expression_match\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1218, in assert_frame_equal\n    raise_assert_detail(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame are different\n\nDataFrame shape mismatch\n[left]:  (5, 1)\n[right]: (5, 2)\n", "test_non_existent_column": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_non_existent_column\n  File \"__test__.py\", line 22, in task_func\nValueError: Column fake_column does not exist in table test_table\n"}}, "MLDebug1108": {"stat": "pass", "details": {}}, "MLDebug1109": {"stat": "pass", "details": {}}, "MLDebug1110": {"stat": "pass", "details": {}}, "MLDebug1111": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 39)"}}, "MLDebug1112": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 18, in test_case_1\nAssertionError: 5 != 10\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_case_2\nAssertionError: 0 != 10\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_3\nAssertionError: 5 != 10\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_5\nAssertionError: 1 != 10\n"}}, "MLDebug1113": {"stat": "pass", "details": {}}, "MLDebug1114": {"stat": "pass", "details": {}}, "MLDebug1115": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: 49.6135 != 250.7154\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_3\nAssertionError: 52 != 103\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_4\nAssertionError: 22 != 278\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_5\nAssertionError: 78 != 367\n"}}, "MLDebug1116": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 29)"}}, "MLDebug1117": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\nAssertionError: Counter({'ae': 2, 'aa': 1, 'cb': 1, 'bb': 1}) != Counter({('d', 'a'): 1, ('b', 'b'): 1, ('d', 'd'):[29 chars]: 1})\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_4\nAssertionError: Counter({'dc': 2, 'eb': 2, 'dd': 1, 'ac': 1, 'ed':[26 chars]: 1}) != Counter({('c', 'c'): 2, ('d', 'b'): 2, ('e', 'e'):[59 chars]: 1})\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_5\nAssertionError: Counter({'be': 1, 'ac': 1, 'ad': 1, 'dd': 1, 'db': 1}) != Counter({('a', 'e'): 1, ('d', 'b'): 1, ('c', 'c'):[29 chars]: 1})\n"}}, "MLDebug1118": {"stat": "fail", "details": {"test_output_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_output_type\nAssertionError: Lists differ: [0, -1, -2, -1, -2, -3] != [0, 1, 0, -1, -2, -1]\n\nFirst differing element 1:\n-1\n1\n\n- [0, -1, -2, -1, -2, -3]\n+ [0, 1, 0, -1, -2, -1]\n"}}, "MLDebug1119": {"stat": "fail", "details": {"test_all_keys_missing": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_all_keys_missing\nAssertionError: {'x': {'mean': None, 'sum': None, 'max': None, [167 chars]one}} != {'x': None, 'y': None, 'z': None}\n+ {'x': None, 'y': None, 'z': None}\n- {'x': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None},\n-  'y': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None},\n-  'z': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None}}\n", "test_empty_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_empty_list\nAssertionError: {'x': {'mean': None, 'sum': None, 'max': None, [167 chars]one}} != {'x': None, 'y': None, 'z': None}\n+ {'x': None, 'y': None, 'z': None}\n- {'x': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None},\n-  'y': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None},\n-  'z': {'max': None, 'mean': None, 'min': None, 'std': None, 'sum': None}}\n"}}, "MLDebug1120": {"stat": "pass", "details": {}}, "MLDebug1121": {"stat": "pass", "details": {}}, "MLDebug1122": {"stat": "pass", "details": {}}, "MLDebug1123": {"stat": "fail", "details": {"test_plot_axes": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_plot_axes\nAssertionError: 1 != 2\n"}}, "MLDebug1124": {"stat": "fail", "details": {"test_empty_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in test_empty_list\nKeyError: 'fft'\n", "test_mixed_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_mixed_types\nKeyError: 'fft'\n", "test_multiple_modes_repeated": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_multiple_modes_repeated\nKeyError: 'fft'\n", "test_no_repetitions": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_no_repetitions\nKeyError: 'fft'\n", "test_single_mode": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_single_mode\nKeyError: 'fft'\n"}}, "MLDebug1125": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'close'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_1\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'close'\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'close'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_2\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'close'\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'close'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_3\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'close'\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'close'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_4\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'close'\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'close'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 80, in test_case_5\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'close'\n"}}, "MLDebug1126": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Z_score'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Z_score'\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Z_score'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Z_score'\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Z_score'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Z_score'\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Z_score'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Z_score'\n"}}, "MLDebug1127": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug1128": {"stat": "pass", "details": {}}, "MLDebug1129": {"stat": "pass", "details": {}}, "MLDebug1130": {"stat": "pass", "details": {}}, "MLDebug1131": {"stat": "fail", "details": {"test_invalid_column_name": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_invalid_column_name\n  File \"__test__.py\", line 15, in task_func\nValueError: Column NonexistentColumn not found in table\n"}}, "MLDebug1132": {"stat": "pass", "details": {}}, "MLDebug1133": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: -0.0 != 1.6094379124341005\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_2\nAssertionError: nan != -inf\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_5\nAssertionError: nan != -inf\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_7\nAssertionError: nan != -inf\n"}}, "MLDebug1134": {"stat": "pass", "details": {}}, "MLDebug1135": {"stat": "pass", "details": {}}, "MLDebug1136": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in test_case_1\nAssertionError: {'ab': 2, 'br': 2, 'ra': 2, 'ac': 1, 'ca': 1, 'ad': 1, 'da': 1} != 'bc9af285d87b312e61ab3661e66b741b'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_case_2\nAssertionError: {'he': 1, 'el': 1, 'll': 1, 'lo': 1} != 'dd5dec1a853625e2dc48f3d42665c337'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_3\nAssertionError: {'py': 1, 'yt': 1, 'th': 1, 'ho': 1, 'on': 1} != '2ef1af06ae4aa496eaa8e963bde5514e'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_4\nAssertionError: {} != '99914b932bd37a50b983c5e7c90ae93b'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_5\nAssertionError: {} != '99914b932bd37a50b983c5e7c90ae93b'\n"}}, "MLDebug1137": {"stat": "fail", "details": {"test_empty_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_empty_string\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of DataFrame.iloc[:, 0] (column name=\"Letter\") are different\n\nAttribute \"dtype\" are different\n[left]:  object\n[right]: float64\n"}}, "MLDebug1138": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_2\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_3\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_4\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug1139": {"stat": "pass", "details": {}}, "MLDebug1140": {"stat": "fail", "details": {"test_mixed_characters": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_mixed_characters\nAssertionError: Lists differ: ['file2txt', 'file3txt', 'file_1txt'] != ['file1txt', 'file2txt', 'file3txt']\n\nFirst differing element 0:\n'file2txt'\n'file1txt'\n\n- ['file2txt', 'file3txt', 'file_1txt']\n+ ['file1txt', 'file2txt', 'file3txt']\n", "test_special_characters_removal": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_special_characters_removal\nAssertionError: Lists differ: ['file1txt', 'file3txt', 'file_2txt'] != ['file1txt', 'file2txt', 'file3txt']\n\nFirst differing element 1:\n'file3txt'\n'file2txt'\n\n- ['file1txt', 'file3txt', 'file_2txt']\n+ ['file1txt', 'file2txt', 'file3txt']\n"}}, "MLDebug1141": {"stat": "fail", "details": {"test_plot_title": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_plot_title\nAssertionError: 'mean = 0.00,  std = 1.00' not found in 'Fit results: mean = 0.00, std = 1.00'\n"}}, "MLDebug1142": {"stat": "fail", "details": {"test_basic_forecast": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_basic_forecast\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/common.py\", line 76, in new_method\n    return method(self, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arraylike.py\", line 40, in __eq__\n    return self._cmp_method(other, operator.eq)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 7201, in _cmp_method\n    result = ops.comp_method_OBJECT_ARRAY(op, self._values, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/array_ops.py\", line 126, in comp_method_OBJECT_ARRAY\n    raise ValueError(\"Shapes must match\", x.shape, y.shape)\nValueError: ('Shapes must match', (2,), (1,))\n", "test_monthly_forecast": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_monthly_forecast\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/common.py\", line 76, in new_method\n    return method(self, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arraylike.py\", line 40, in __eq__\n    return self._cmp_method(other, operator.eq)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 7201, in _cmp_method\n    result = ops.comp_method_OBJECT_ARRAY(op, self._values, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/array_ops.py\", line 126, in comp_method_OBJECT_ARRAY\n    raise ValueError(\"Shapes must match\", x.shape, y.shape)\nValueError: ('Shapes must match', (2,), (1,))\n", "test_quarterly_forecast": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_quarterly_forecast\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/common.py\", line 76, in new_method\n    return method(self, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/arraylike.py\", line 40, in __eq__\n    return self._cmp_method(other, operator.eq)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 7201, in _cmp_method\n    result = ops.comp_method_OBJECT_ARRAY(op, self._values, other)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/ops/array_ops.py\", line 126, in comp_method_OBJECT_ARRAY\n    raise ValueError(\"Shapes must match\", x.shape, y.shape)\nValueError: ('Shapes must match', (2,), (1,))\n"}}, "MLDebug1143": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug1144": {"stat": "fail", "details": {"test_forecasted_values_increasing": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_forecasted_values_increasing\nAssertionError: True is not false\n"}}, "MLDebug1145": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_1\nAssertionError: Lists differ: ['Mobile_Phone', 'T_Shirt'] != ['Mobile_Phone', 'Coffee_Maker']\n\nFirst differing element 1:\n'T_Shirt'\n'Coffee_Maker'\n\n- ['Mobile_Phone', 'T_Shirt']\n+ ['Mobile_Phone', 'Coffee_Maker']\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\nAssertionError: Lists differ: ['Laptop'] != ['Sweater']\n\nFirst differing element 0:\n'Laptop'\n'Sweater'\n\n- ['Laptop']\n+ ['Sweater']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_3\nAssertionError: Lists differ: ['Book', 'Pen', 'Bag'] != ['Pen', 'Book', 'Bag']\n\nFirst differing element 0:\n'Book'\n'Pen'\n\n- ['Book', 'Pen', 'Bag']\n+ ['Pen', 'Book', 'Bag']\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_4\n  File \"__test__.py\", line 16, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 778, in __init__\n    mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 503, in dict_to_mgr\n    return arrays_to_mgr(arrays, columns, index, dtype=dtype, typ=typ, consolidate=copy)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 114, in arrays_to_mgr\n    index = _extract_index(arrays)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/internals/construction.py\", line 677, in _extract_index\n    raise ValueError(\"All arrays must be of the same length\")\nValueError: All arrays must be of the same length\n"}}, "MLDebug1146": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_3\nAssertionError: 3 != 10\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_5\nAssertionError: Items in the second set but not the first:\n'Task Name'\n'Assigned To'\n'Due Date'\n"}}, "MLDebug1147": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: 11 != 13 : Length should match processed input.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_3\nAssertionError: '_' != '__'\n- _\n+ __\n? +\n : Spaces should be replaced with underscores.\n"}}, "MLDebug1148": {"stat": "pass", "details": {}}, "MLDebug1149": {"stat": "pass", "details": {}}, "MLDebug1150": {"stat": "pass", "details": {}}, "MLDebug1151": {"stat": "fail", "details": {"ALL": "No module named 'docx'"}}, "MLDebug1152": {"stat": "pass", "details": {}}, "MLDebug1153": {"stat": "pass", "details": {}}, "MLDebug1154": {"stat": "fail", "details": {"test_constant_array": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_constant_array\n  File \"__test__.py\", line 67, in helper_assert_cumulative_probability_correctness\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 797, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\nCumulative probability calculation is incorrect.\nMismatched elements: 4 / 5 (80%)\nMax absolute difference: 0.2\nMax relative difference: 1.\n x: array([0.  , 0.25, 0.5 , 0.75, 1.  ])\n y: array([0.2, 0.4, 0.6, 0.8, 1. ])\n", "test_increasing_array": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_increasing_array\n  File \"__test__.py\", line 67, in helper_assert_cumulative_probability_correctness\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 797, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\nCumulative probability calculation is incorrect.\nMismatched elements: 1 / 3 (33.3%)\nMax absolute difference: 0.16666667\nMax relative difference: 1.\n x: array([0. , 0.5, 1. ])\n y: array([0.17, 0.5 , 1.  ])\n"}}, "MLDebug1155": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_4\n  File \"__test__.py\", line 15, in task_func\nValueError: Invalid character in path\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_5\n  File \"__test__.py\", line 15, in task_func\nValueError: Invalid character in path\n"}}, "MLDebug1156": {"stat": "fail", "details": {"test_path_with_multiple_delimiters": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 136, in test_path_with_multiple_delimiters\nAssertionError: Lists differ: [('Docs', {'total': 500000000000, 'used': 300000000000, 'free[91 chars]00})] != [('Docs', {'total': 100000000000, 'used': 50000000000, 'free'[128 chars]00})]\n\nFirst differing element 0:\n('Docs', {'total': 500000000000, 'used': 300000000000, 'free': 200000000000})\n('Docs', {'total': 100000000000, 'used': 50000000000, 'free': 50000000000})\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n('src', {'total': 50000000000, 'used': 25000000000, 'free': 25000000000})\n\n- [('Docs', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000}),\n-  ('src', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000})]\n+ [('Docs', {'free': 50000000000, 'total': 100000000000, 'used': 50000000000}),\n+  ('', {'free': 0, 'total': 0, 'used': 0}),\n+  ('src', {'free': 25000000000, 'total': 50000000000, 'used': 25000000000})]\n", "test_path_with_trailing_delimiter": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 151, in test_path_with_trailing_delimiter\nAssertionError: Lists differ: [('Docs', {'total': 500000000000, 'used': 300000000000, 'free[91 chars]00})] != [('Docs', {'total': 100000000000, 'used': 50000000000, 'free'[86 chars]00})]\n\nFirst differing element 0:\n('Docs', {'total': 500000000000, 'used': 300000000000, 'free': 200000000000})\n('Docs', {'total': 100000000000, 'used': 50000000000, 'free': 50000000000})\n\n- [('Docs', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000}),\n-  ('src', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000})]\n+ [('Docs', {'free': 50000000000, 'total': 100000000000, 'used': 50000000000}),\n+  ('src', {'free': 25000000000, 'total': 50000000000, 'used': 25000000000})]\n"}}, "MLDebug1157": {"stat": "fail", "details": {"test_custom_features": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_custom_features\nAssertionError: Lists differ: ['C', 'A', 'B', 'D', 'E'] != ['A', 'B', 'C', 'D', 'E']\n\nFirst differing element 0:\n'C'\n'A'\n\n- ['C', 'A', 'B', 'D', 'E']\n+ ['A', 'B', 'C', 'D', 'E']\n"}}, "MLDebug1158": {"stat": "pass", "details": {}}, "MLDebug1159": {"stat": "pass", "details": {}}, "MLDebug1160": {"stat": "pass", "details": {}}, "MLDebug1161": {"stat": "pass", "details": {}}, "MLDebug1162": {"stat": "pass", "details": {}}, "MLDebug1163": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_3\nAssertionError: ValueError not raised\n", "test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_1\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 92, in test_case_4\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_5\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_6\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 132, in test_case_8\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 142, in test_case_9\n  File \"__test__.py\", line 22, in task_func\nValueError: Populations must be non-negative integers or floats\n"}}, "MLDebug1164": {"stat": "fail", "details": {"test_complex_json_structure": "Traceback (most recent call last):\n  File \"__test__.py\", line 125, in test_complex_json_structure\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_data_extraction": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_data_extraction\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_data_normalization": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_data_normalization\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n", "test_negative_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 93, in test_negative_values\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n", "test_nested_json_structure": "Traceback (most recent call last):\n  File \"__test__.py\", line 99, in test_nested_json_structure\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_non_uniform_data_spacing": "Traceback (most recent call last):\n  File \"__test__.py\", line 85, in test_non_uniform_data_spacing\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n"}}, "MLDebug1165": {"stat": "fail", "details": {"test_has_special_char": "Traceback (most recent call last):\n  File \"__test__.py\", line 133, in test_has_special_char\nAssertionError: False is not true : {'fi@': {'has_special_chars': True}, 'f.ile.txt': {'has_special_chars': False}, 'fi!e': {'has_special_chars': True}}\n"}}, "MLDebug1166": {"stat": "pass", "details": {}}, "MLDebug1167": {"stat": "pass", "details": {}}, "MLDebug1168": {"stat": "pass", "details": {}}, "MLDebug1169": {"stat": "fail", "details": {"test_correct_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_correct_length\nAssertionError: 'w\\x1e\\n_q\\x1a(`' != ']'\n+ ]- w\u001e- \n- _q\u001a(`\n", "test_correct_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_correct_type\nAssertionError: \"o:\\x0ee'3\" != 'y<'\n- o:\u000ee'3\n+ y<\n\n", "test_non_empty_string_positive_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_non_empty_string_positive_length\nAssertionError: '(?B\\x0fQ\\x12' != '\\x10'\n- (?B\u000fQ\u0012\n+ \u0010\n\n"}}, "MLDebug1170": {"stat": "pass", "details": {}}, "MLDebug1171": {"stat": "pass", "details": {}}, "MLDebug1172": {"stat": "fail", "details": {"test_append_to_existing_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 92, in test_append_to_existing_file\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: write('{\"title\": \"New Title\"}\\n')\nActual: write('\\n')\n", "test_page_without_title": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_page_without_title\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'), call('\"title\"'), call(': '), call('null'), call('}'), call('\\n')].\n", "test_scrape_title_page_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 34, in test_scrape_title_page_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n call('\"Test Page 1\"'),\n call('}'),\n call('\\n')].\n", "test_scrape_title_page_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 46, in test_scrape_title_page_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n call('\"Test Page 2\"'),\n call('}'),\n call('\\n')].\n", "test_very_long_title": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 76, in test_very_long_title\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n calln call('}'),\n call('\\n')].\n"}}, "MLDebug1173": {"stat": "fail", "details": {"test_non_zip_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nzipfile.BadZipFile\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 66, in test_non_zip_file\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'rais' is not defined\n"}}, "MLDebug1174": {"stat": "pass", "details": {}}}