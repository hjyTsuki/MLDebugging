{"MLDebug0": {"stat": "pass", "details": {}}, "MLDebug1": {"stat": "pass", "details": {}}, "MLDebug2": {"stat": "pass", "details": {}}, "MLDebug3": {"stat": "pass", "details": {}}, "MLDebug4": {"stat": "pass", "details": {}}, "MLDebug5": {"stat": "pass", "details": {}}, "MLDebug6": {"stat": "pass", "details": {}}, "MLDebug7": {"stat": "pass", "details": {}}, "MLDebug8": {"stat": "pass", "details": {}}, "MLDebug9": {"stat": "pass", "details": {}}, "MLDebug10": {"stat": "pass", "details": {}}, "MLDebug11": {"stat": "pass", "details": {}}, "MLDebug12": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug13": {"stat": "pass", "details": {}}, "MLDebug14": {"stat": "pass", "details": {}}, "MLDebug15": {"stat": "pass", "details": {}}, "MLDebug16": {"stat": "pass", "details": {}}, "MLDebug17": {"stat": "pass", "details": {}}, "MLDebug18": {"stat": "pass", "details": {}}, "MLDebug19": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug20": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_5\n  File \"__test__.py\", line 13, in task_func\nValueError: All elements must be numeric\n"}}, "MLDebug21": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug22": {"stat": "pass", "details": {}}, "MLDebug23": {"stat": "pass", "details": {}}, "MLDebug24": {"stat": "pass", "details": {}}, "MLDebug25": {"stat": "pass", "details": {}}, "MLDebug26": {"stat": "pass", "details": {}}, "MLDebug27": {"stat": "pass", "details": {}}, "MLDebug28": {"stat": "pass", "details": {}}, "MLDebug29": {"stat": "pass", "details": {}}, "MLDebug30": {"stat": "pass", "details": {}}, "MLDebug31": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug32": {"stat": "pass", "details": {}}, "MLDebug33": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug34": {"stat": "pass", "details": {}}, "MLDebug35": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug36": {"stat": "pass", "details": {}}, "MLDebug37": {"stat": "pass", "details": {}}, "MLDebug38": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug39": {"stat": "pass", "details": {}}, "MLDebug40": {"stat": "pass", "details": {}}, "MLDebug41": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug42": {"stat": "pass", "details": {}}, "MLDebug43": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug44": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug45": {"stat": "pass", "details": {}}, "MLDebug46": {"stat": "pass", "details": {}}, "MLDebug47": {"stat": "pass", "details": {}}, "MLDebug48": {"stat": "pass", "details": {}}, "MLDebug49": {"stat": "pass", "details": {}}, "MLDebug50": {"stat": "pass", "details": {}}, "MLDebug51": {"stat": "pass", "details": {}}, "MLDebug52": {"stat": "pass", "details": {}}, "MLDebug53": {"stat": "pass", "details": {}}, "MLDebug54": {"stat": "fail", "details": {"test_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_1\nAssertionError: False is not true : Expected average distance to be between 3.1 and 3.5, got 2.5285\n", "test_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_2\nAssertionError: False is not true : Expected average distance to be between 3.2 and 3.5, got 2.5341\n", "test_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_3\nAssertionError: False is not true : Expected average distance to be between 2.8 and 3.7, got 2.3642\n"}}, "MLDebug55": {"stat": "pass", "details": {}}, "MLDebug56": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug57": {"stat": "pass", "details": {}}, "MLDebug58": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug59": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug60": {"stat": "pass", "details": {}}, "MLDebug61": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug62": {"stat": "pass", "details": {}}, "MLDebug63": {"stat": "pass", "details": {}}, "MLDebug64": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug65": {"stat": "pass", "details": {}}, "MLDebug66": {"stat": "pass", "details": {}}, "MLDebug67": {"stat": "pass", "details": {}}, "MLDebug68": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug69": {"stat": "fail", "details": {"test_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_empty_dataframe\nAssertionError: (None, None) is not None\n", "test_missing_columns": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_missing_columns\nAssertionError: (None, None) is not None\n", "test_no_rows_matching_criteria": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_no_rows_matching_criteria\nAssertionError: (None, None) is not None\n", "test_non_numeric_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_non_numeric_data\nAssertionError: (None, None) is not None\n"}}, "MLDebug70": {"stat": "pass", "details": {}}, "MLDebug71": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug72": {"stat": "pass", "details": {}}, "MLDebug73": {"stat": "pass", "details": {}}, "MLDebug74": {"stat": "pass", "details": {}}, "MLDebug75": {"stat": "pass", "details": {}}, "MLDebug76": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug77": {"stat": "pass", "details": {}}, "MLDebug78": {"stat": "pass", "details": {}}, "MLDebug79": {"stat": "pass", "details": {}}, "MLDebug80": {"stat": "pass", "details": {}}, "MLDebug81": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug82": {"stat": "pass", "details": {}}, "MLDebug83": {"stat": "pass", "details": {}}, "MLDebug84": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug85": {"stat": "pass", "details": {}}, "MLDebug86": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug87": {"stat": "pass", "details": {}}, "MLDebug88": {"stat": "pass", "details": {}}, "MLDebug89": {"stat": "pass", "details": {}}, "MLDebug90": {"stat": "pass", "details": {}}, "MLDebug91": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug92": {"stat": "pass", "details": {}}, "MLDebug93": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 936, in assert_series_equal\n    raise_assert_detail(obj, \"Series length are different\", msg1, msg2)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nSeries length are different\n[left]:  3, Index(['Sentence 1', 'Sentence 2', 'Sentence 3'], dtype='object')\n[right]: 1, Index(['Sentence 1'], dtype='object')\n"}}, "MLDebug94": {"stat": "pass", "details": {}}, "MLDebug95": {"stat": "pass", "details": {}}, "MLDebug96": {"stat": "pass", "details": {}}, "MLDebug97": {"stat": "pass", "details": {}}, "MLDebug98": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug99": {"stat": "pass", "details": {}}, "MLDebug100": {"stat": "pass", "details": {}}, "MLDebug101": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug102": {"stat": "fail", "details": {"test_invalid_content_type": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_invalid_content_type\n  File \"__test__.py\", line 20, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_invalid_json": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 93, in test_invalid_json\n  File \"__test__.py\", line 20, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_missing_data_key": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 104, in test_missing_data_key\n  File \"__test__.py\", line 20, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n", "test_valid_json_data": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_valid_json_data\n  File \"__test__.py\", line 20, in do_POST\nAttributeError: 'PostRequestHandler' object has no attribute 'path'\n"}}, "MLDebug103": {"stat": "pass", "details": {}}, "MLDebug104": {"stat": "pass", "details": {}}, "MLDebug105": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug106": {"stat": "pass", "details": {}}, "MLDebug107": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug108": {"stat": "pass", "details": {}}, "MLDebug109": {"stat": "pass", "details": {}}, "MLDebug110": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug111": {"stat": "pass", "details": {}}, "MLDebug112": {"stat": "pass", "details": {}}, "MLDebug113": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug114": {"stat": "pass", "details": {}}, "MLDebug115": {"stat": "fail", "details": {"test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_normal_functionality\nAssertionError: False is not true : The arrays should not be equal\n"}}, "MLDebug116": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug117": {"stat": "pass", "details": {}}, "MLDebug118": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug119": {"stat": "fail", "details": {"ALL": "cannot import name 'StandardScale' from 'sklearn.preprocessing' (/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/preprocessing/__init__.py)"}}, "MLDebug120": {"stat": "pass", "details": {}}, "MLDebug121": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug122": {"stat": "pass", "details": {}}, "MLDebug123": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug124": {"stat": "pass", "details": {}}, "MLDebug125": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug126": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_8\n  File \"__test__.py\", line 87, in validate_plot\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1504, in assert_allclose\n    assert_array_compare(compare, actual, desired, err_msg=str(err_msg),\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nNot equal to tolerance rtol=1e-05, atol=1e-08\n\n(shapes (2,), (3,) mismatch)\n x: array([5., 6.])\n y: array([ 5., nan,  6.])\n"}}, "MLDebug127": {"stat": "pass", "details": {}}, "MLDebug128": {"stat": "pass", "details": {}}, "MLDebug129": {"stat": "pass", "details": {}}, "MLDebug130": {"stat": "pass", "details": {}}, "MLDebug131": {"stat": "pass", "details": {}}, "MLDebug132": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug133": {"stat": "pass", "details": {}}, "MLDebug134": {"stat": "pass", "details": {}}, "MLDebug135": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug136": {"stat": "pass", "details": {}}, "MLDebug137": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug138": {"stat": "pass", "details": {}}, "MLDebug139": {"stat": "pass", "details": {}}, "MLDebug140": {"stat": "pass", "details": {}}, "MLDebug141": {"stat": "pass", "details": {}}, "MLDebug142": {"stat": "pass", "details": {}}, "MLDebug143": {"stat": "fail", "details": {"test_incorrect_file_patterns": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 50, in test_incorrect_file_patterns\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/target'\n", "test_move_json_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 35, in test_move_json_files\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/target'\n", "test_no_files_to_move": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_no_files_to_move\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/target'\n", "test_renaaccuracy": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_renaaccuracy\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/target'\n", "test_special_cases_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 65, in test_special_cases_handling\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/target'\n"}}, "MLDebug144": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug145": {"stat": "pass", "details": {}}, "MLDebug146": {"stat": "pass", "details": {}}, "MLDebug147": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug148": {"stat": "pass", "details": {}}, "MLDebug149": {"stat": "pass", "details": {}}, "MLDebug150": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug151": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug152": {"stat": "pass", "details": {}}, "MLDebug153": {"stat": "pass", "details": {}}, "MLDebug154": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug155": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug156": {"stat": "pass", "details": {}}, "MLDebug157": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug158": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug159": {"stat": "pass", "details": {}}, "MLDebug160": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug161": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug162": {"stat": "pass", "details": {}}, "MLDebug163": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug164": {"stat": "pass", "details": {}}, "MLDebug165": {"stat": "pass", "details": {}}, "MLDebug166": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 7) (__test__.py, line 7)"}}, "MLDebug167": {"stat": "pass", "details": {}}, "MLDebug168": {"stat": "pass", "details": {}}, "MLDebug169": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug170": {"stat": "pass", "details": {}}, "MLDebug171": {"stat": "pass", "details": {}}, "MLDebug172": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 26) (__test__.py, line 26)"}}, "MLDebug173": {"stat": "pass", "details": {}}, "MLDebug174": {"stat": "pass", "details": {}}, "MLDebug175": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug176": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_2\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_3\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_4\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 109, in test_case_5\n  File \"__test__.py\", line 19, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_core.py\", line 129, in hist_series\n    return plot_backend.hist_series(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/plotting/_matplotlib/hist.py\", line 454, in hist_series\n    ax.hist(values, bins=bins, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 7154, in hist\n    p._internal_update(kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1216, in _internal_update\n    return self._update_props(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/artist.py\", line 1190, in _update_props\n    raise AttributeError(\nAttributeError: Rectangle.set() got an unexpected keyword argument 'title'\n"}}, "MLDebug177": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug178": {"stat": "pass", "details": {}}, "MLDebug179": {"stat": "pass", "details": {}}, "MLDebug180": {"stat": "pass", "details": {}}, "MLDebug181": {"stat": "pass", "details": {}}, "MLDebug182": {"stat": "pass", "details": {}}, "MLDebug183": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug184": {"stat": "pass", "details": {}}, "MLDebug185": {"stat": "pass", "details": {}}, "MLDebug186": {"stat": "pass", "details": {}}, "MLDebug187": {"stat": "pass", "details": {}}, "MLDebug188": {"stat": "pass", "details": {}}, "MLDebug189": {"stat": "pass", "details": {}}, "MLDebug190": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug191": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug192": {"stat": "pass", "details": {}}, "MLDebug193": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug194": {"stat": "pass", "details": {}}, "MLDebug195": {"stat": "pass", "details": {}}, "MLDebug196": {"stat": "pass", "details": {}}, "MLDebug197": {"stat": "pass", "details": {}}, "MLDebug198": {"stat": "fail", "details": {"ALL": "invalid decimal literal (__test__.py, line 29)"}}, "MLDebug199": {"stat": "pass", "details": {}}, "MLDebug200": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug201": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug202": {"stat": "pass", "details": {}}, "MLDebug203": {"stat": "pass", "details": {}}, "MLDebug204": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug205": {"stat": "pass", "details": {}}, "MLDebug206": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug207": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug208": {"stat": "fail", "details": {"test_non_string_unicode_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_non_string_unicode_values\nAssertionError: Exception not raised\n"}}, "MLDebug209": {"stat": "pass", "details": {}}, "MLDebug210": {"stat": "pass", "details": {}}, "MLDebug211": {"stat": "pass", "details": {}}, "MLDebug212": {"stat": "pass", "details": {}}, "MLDebug213": {"stat": "pass", "details": {}}, "MLDebug214": {"stat": "pass", "details": {}}, "MLDebug215": {"stat": "pass", "details": {}}, "MLDebug216": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug217": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 25) (__test__.py, line 25)"}}, "MLDebug218": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug219": {"stat": "pass", "details": {}}, "MLDebug220": {"stat": "pass", "details": {}}, "MLDebug221": {"stat": "pass", "details": {}}, "MLDebug222": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug223": {"stat": "pass", "details": {}}, "MLDebug224": {"stat": "pass", "details": {}}, "MLDebug225": {"stat": "pass", "details": {}}, "MLDebug226": {"stat": "pass", "details": {}}, "MLDebug227": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug228": {"stat": "pass", "details": {}}, "MLDebug229": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug230": {"stat": "pass", "details": {}}, "MLDebug231": {"stat": "pass", "details": {}}, "MLDebug232": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug233": {"stat": "pass", "details": {}}, "MLDebug234": {"stat": "pass", "details": {}}, "MLDebug235": {"stat": "pass", "details": {}}, "MLDebug236": {"stat": "pass", "details": {}}, "MLDebug237": {"stat": "pass", "details": {}}, "MLDebug238": {"stat": "pass", "details": {}}, "MLDebug239": {"stat": "pass", "details": {}}, "MLDebug240": {"stat": "pass", "details": {}}, "MLDebug241": {"stat": "pass", "details": {}}, "MLDebug242": {"stat": "pass", "details": {}}, "MLDebug243": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug244": {"stat": "pass", "details": {}}, "MLDebug245": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug246": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug247": {"stat": "pass", "details": {}}, "MLDebug248": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug249": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug250": {"stat": "pass", "details": {}}, "MLDebug251": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug252": {"stat": "pass", "details": {}}, "MLDebug253": {"stat": "pass", "details": {}}, "MLDebug254": {"stat": "pass", "details": {}}, "MLDebug255": {"stat": "pass", "details": {}}, "MLDebug256": {"stat": "pass", "details": {}}, "MLDebug257": {"stat": "pass", "details": {}}, "MLDebug258": {"stat": "pass", "details": {}}, "MLDebug259": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug260": {"stat": "pass", "details": {}}, "MLDebug261": {"stat": "pass", "details": {}}, "MLDebug262": {"stat": "pass", "details": {}}, "MLDebug263": {"stat": "pass", "details": {}}, "MLDebug264": {"stat": "pass", "details": {}}, "MLDebug265": {"stat": "pass", "details": {}}, "MLDebug266": {"stat": "pass", "details": {}}, "MLDebug267": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug268": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 1) (__test__.py, line 1)"}}, "MLDebug269": {"stat": "pass", "details": {}}, "MLDebug270": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 2)"}}, "MLDebug271": {"stat": "pass", "details": {}}, "MLDebug272": {"stat": "pass", "details": {}}, "MLDebug273": {"stat": "pass", "details": {}}, "MLDebug274": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug275": {"stat": "pass", "details": {}}, "MLDebug276": {"stat": "pass", "details": {}}, "MLDebug277": {"stat": "pass", "details": {}}, "MLDebug278": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 2) (__test__.py, line 2)"}}, "MLDebug279": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 1)"}}, "MLDebug280": {"stat": "pass", "details": {}}, "MLDebug281": {"stat": "pass", "details": {}}, "MLDebug282": {"stat": "pass", "details": {}}, "MLDebug283": {"stat": "pass", "details": {}}, "MLDebug284": {"stat": "pass", "details": {}}, "MLDebug285": {"stat": "pass", "details": {}}, "MLDebug286": {"stat": "pass", "details": {}}, "MLDebug287": {"stat": "pass", "details": {}}, "MLDebug288": {"stat": "pass", "details": {}}, "MLDebug289": {"stat": "fail", "details": {"ALL": "unexpected indent (__test__.py, line 1)"}}, "MLDebug290": {"stat": "pass", "details": {}}, "MLDebug291": {"stat": "pass", "details": {}}, "MLDebug292": {"stat": "pass", "details": {}}, "MLDebug293": {"stat": "pass", "details": {}}, "MLDebug294": {"stat": "pass", "details": {}}, "MLDebug295": {"stat": "pass", "details": {}}, "MLDebug296": {"stat": "pass", "details": {}}, "MLDebug297": {"stat": "pass", "details": {}}, "MLDebug298": {"stat": "pass", "details": {}}, "MLDebug299": {"stat": "fail", "details": {"ALL": "invalid syntax (__test__.py, line 5)"}}, "MLDebug300": {"stat": "fail", "details": {"ALL": "invalid decimal literal (__test__.py, line 1)"}}, "MLDebug301": {"stat": "pass", "details": {}}, "MLDebug302": {"stat": "pass", "details": {}}, "MLDebug303": {"stat": "pass", "details": {}}, "MLDebug304": {"stat": "pass", "details": {}}, "MLDebug305": {"stat": "pass", "details": {}}, "MLDebug306": {"stat": "pass", "details": {}}, "MLDebug307": {"stat": "pass", "details": {}}, "MLDebug308": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 7) (__test__.py, line 7)"}}, "MLDebug309": {"stat": "pass", "details": {}}, "MLDebug310": {"stat": "pass", "details": {}}, "MLDebug311": {"stat": "pass", "details": {}}, "MLDebug312": {"stat": "pass", "details": {}}, "MLDebug313": {"stat": "pass", "details": {}}, "MLDebug314": {"stat": "pass", "details": {}}, "MLDebug315": {"stat": "pass", "details": {}}, "MLDebug316": {"stat": "pass", "details": {}}, "MLDebug317": {"stat": "pass", "details": {}}, "MLDebug318": {"stat": "pass", "details": {}}, "MLDebug319": {"stat": "pass", "details": {}}, "MLDebug320": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_1\nAssertionError: 'Invalid input' != {'feature1': {'mean': 3.0, 'median': 3.0,[321 chars]006}}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_2\nAssertionError: 'Invalid input' != {'feature1': {'mean': 1.6, 'median': 1.0,[328 chars]2.0}}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 94, in test_case_3\nAssertionError: 'Invalid input' != {'feature1': {'mean': 2.0, 'median': 2.0,[379 chars]666}}\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 114, in test_case_4\nAssertionError: 'Invalid input' != {'feature1': {'mean': 2.0, 'median': 2.0,[385 chars]666}}\n"}}, "MLDebug321": {"stat": "pass", "details": {}}, "MLDebug322": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_1\nAssertionError: 'Fit results: mu = 10.76,  std = 48.28' != 'Fit results: mu = 10.76,  std = 39.42'\n- Fit results: mu = 10.76,  std = 48.28\n?                                  -- -\n+ Fit results: mu = 10.76,  std = 39.42\n?                                 +++\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_3\nAssertionError: 'Fit results: mu = 27.52,  std = 40.32' != 'Fit results: mu = 27.52,  std = 32.92'\n- Fit results: mu = 27.52,  std = 40.32\n?                                 ---\n+ Fit results: mu = 27.52,  std = 32.92\n?                                   +++\n\n"}}, "MLDebug323": {"stat": "pass", "details": {}}, "MLDebug324": {"stat": "pass", "details": {}}, "MLDebug325": {"stat": "pass", "details": {}}, "MLDebug326": {"stat": "pass", "details": {}}, "MLDebug327": {"stat": "pass", "details": {}}, "MLDebug328": {"stat": "fail", "details": {"test_card_distribution": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_card_distribution\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_card_uniqueness": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_card_uniqueness\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_counter": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_counter\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_drawn_size": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_drawn_size\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_hand_size": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_hand_size\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_randomness": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_randomness\n  File \"__test__.py\", line 52, in <listcomp>\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n", "test_valid_cards": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_valid_cards\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'card_count' is not defined\n"}}, "MLDebug329": {"stat": "pass", "details": {}}, "MLDebug330": {"stat": "pass", "details": {}}, "MLDebug331": {"stat": "pass", "details": {}}, "MLDebug332": {"stat": "pass", "details": {}}, "MLDebug333": {"stat": "pass", "details": {}}, "MLDebug334": {"stat": "pass", "details": {}}, "MLDebug335": {"stat": "pass", "details": {}}, "MLDebug336": {"stat": "pass", "details": {}}, "MLDebug337": {"stat": "pass", "details": {}}, "MLDebug338": {"stat": "pass", "details": {}}, "MLDebug339": {"stat": "pass", "details": {}}, "MLDebug340": {"stat": "pass", "details": {}}, "MLDebug341": {"stat": "pass", "details": {}}, "MLDebug342": {"stat": "pass", "details": {}}, "MLDebug343": {"stat": "pass", "details": {}}, "MLDebug344": {"stat": "pass", "details": {}}, "MLDebug345": {"stat": "pass", "details": {}}, "MLDebug346": {"stat": "pass", "details": {}}, "MLDebug347": {"stat": "pass", "details": {}}, "MLDebug348": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\nAssertionError: {'London': 72816, 'New York': 367942, 'Sydn[43 chars]7288} != {'New York': 72816, 'London': 367942, 'Beij[43 chars]7288}\n- {'Beijing': 267288,\n+ {'Beijing': 869251,\n-  'London': 72816,\n?              ---\n\n+  'London': 367942,\n?            ++ ++\n\n-  'New York': 367942,\n?              ^ ----\n\n+  'New York': 72816,\n?              ^^^^\n\n-  'Sydney': 869251,\n+  'Sydney': 267288,\n   'Tokyo': 323344}\n"}}, "MLDebug349": {"stat": "pass", "details": {}}, "MLDebug350": {"stat": "pass", "details": {}}, "MLDebug351": {"stat": "pass", "details": {}}, "MLDebug352": {"stat": "pass", "details": {}}, "MLDebug353": {"stat": "pass", "details": {}}, "MLDebug354": {"stat": "pass", "details": {}}, "MLDebug355": {"stat": "pass", "details": {}}, "MLDebug356": {"stat": "pass", "details": {}}, "MLDebug357": {"stat": "pass", "details": {}}, "MLDebug358": {"stat": "pass", "details": {}}, "MLDebug359": {"stat": "pass", "details": {}}, "MLDebug360": {"stat": "pass", "details": {}}, "MLDebug361": {"stat": "pass", "details": {}}, "MLDebug362": {"stat": "fail", "details": {"ALL": "unterminated string literal (detected at line 3) (__test__.py, line 3)"}}, "MLDebug363": {"stat": "pass", "details": {}}, "MLDebug364": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_1\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 128, in test_case_10\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_4\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_5\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 102, in test_case_8\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_9\n  File \"__test__.py\", line 22, in task_func\nNameError: name 'resul' is not defined\n"}}, "MLDebug365": {"stat": "pass", "details": {}}, "MLDebug366": {"stat": "pass", "details": {}}, "MLDebug367": {"stat": "pass", "details": {}}, "MLDebug368": {"stat": "pass", "details": {}}, "MLDebug369": {"stat": "pass", "details": {}}, "MLDebug370": {"stat": "pass", "details": {}}, "MLDebug371": {"stat": "pass", "details": {}}, "MLDebug372": {"stat": "pass", "details": {}}, "MLDebug373": {"stat": "pass", "details": {}}, "MLDebug374": {"stat": "pass", "details": {}}, "MLDebug375": {"stat": "pass", "details": {}}, "MLDebug376": {"stat": "pass", "details": {}}, "MLDebug377": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 20, in test_case_1\nAssertionError: 'eNoFwUEOhCAMAMAvLVBXONJooGqkUCDa/z/EmR3M0e[82 chars]tg==' != 'eJwFwUEOhCAMAMAvLVBXONJooGqkUCDa/z/EmR3M0e[82 chars]tg=='\n- eNoFwUEOhCAMAMAvLVBXONJooGqkUCDa/z/EmR3M0epjNwQ2sSr5P8a+3pkxcyPK9YwwnhRgv1RXdu85F5CJZEvq+t4sVkpD1DBLkmA6kPhRj+6jdcvPyeAPdLQbtg==\n?  ^^\n+ eJwFwUEOhCAMAMAvLVBXONJooGqkUCDa/z/EmR3M0epjNwQ2sSr5P8a+3pkxcyPK9YwwnhRgv1RXdu85F5CJZEvq+t4sVkpD1DBLkmA6kPhRj+6jdcvPyeAPdLQbtg==\n?  ^^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_case_2\nAssertionError: 'eNozMQzwCvY38g4KMwv2Ngz3MrM0NvMxMIsMdAkIM7[34 chars]dQ==' != 'eJwzMQzwCvY38g4KMwv2Ngz3MrM0NvMxMIsMdAkIM7[34 chars]dQ=='\n- eNozMQzwCvY38g4KMwv2Ngz3MrM0NvMxMIsMdAkIM7MIMvUyCnGM8jeOdAwy9fQxdQ/1tAAAVX8NdQ==\n?  ^^\n+ eJwzMQzwCvY38g4KMwv2Ngz3MrM0NvMxMIsMdAkIM7MIMvUyCnGM8jeOdAwy9fQxdQ/1tAAAVX8NdQ==\n?  ^^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_3\nAssertionError: 'eNoFwVkCQCAQANArRZs+WzCTJIyU+x/Ee81GZF2F4u[166 chars]NyU=' != 'eJwFwVkCQCAQANArRZs+WzCTJIyU+x/Ee81GZF2F4u[166 chars]NyU='\n- eNoFwVkCQCAQANArRZs+WzCTJIyU+x/Ee81GZF2F4uC20Agqt/zbl2kPQVTOyGTir3w+h5vHsL05Q9StrmzJpj1dDOhSBC1TO9QZ8YlVHWDu4MI7Fp8NTcJ+nWKbyznJeK9Kbq0uA41kk9WSJy+ncPlhmC+KsgAxSKaVe8a9IvgXlfDYYdbPNfI1lHKybsKxS1zPsqEukpwRP8dcNyU=\n?  ^^\n+ eJwFwVkCQCAQANArRZs+WzCTJIyU+x/Ee81GZF2F4uC20Agqt/zbl2kPQVTOyGTir3w+h5vHsL05Q9StrmzJpj1dDOhSBC1TO9QZ8YlVHWDu4MI7Fp8NTcJ+nWKbyznJeK9Kbq0uA41kk9WSJy+ncPlhmC+KsgAxSKaVe8a9IvgXlfDYYdbPNfI1lHKybsKxS1zPsqEukpwRP8dcNyU=\n?  ^^\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_4\nAssertionError: 'eNoLDQj1MDaOcAv2AQAQIQLm' != 'eJwLDQj1MDaOcAv2AQAQIQLm'\n- eNoLDQj1MDaOcAv2AQAQIQLm\n?  ^^\n+ eJwLDQj1MDaOcAv2AQAQIQLm\n?  ^^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_5\nAssertionError: 'eNpzBQAARgBG' != 'eJxzBQAARgBG'\n- eNpzBQAARgBG\n?  ^^\n+ eJxzBQAARgBG\n?  ^^\n\n"}}, "MLDebug378": {"stat": "pass", "details": {}}, "MLDebug379": {"stat": "pass", "details": {}}, "MLDebug380": {"stat": "pass", "details": {}}, "MLDebug381": {"stat": "pass", "details": {}}, "MLDebug382": {"stat": "pass", "details": {}}, "MLDebug383": {"stat": "pass", "details": {}}, "MLDebug384": {"stat": "pass", "details": {}}, "MLDebug385": {"stat": "pass", "details": {}}, "MLDebug386": {"stat": "pass", "details": {}}, "MLDebug387": {"stat": "pass", "details": {}}, "MLDebug388": {"stat": "pass", "details": {}}, "MLDebug389": {"stat": "pass", "details": {}}, "MLDebug390": {"stat": "pass", "details": {}}, "MLDebug391": {"stat": "pass", "details": {}}, "MLDebug392": {"stat": "pass", "details": {}}, "MLDebug393": {"stat": "pass", "details": {}}, "MLDebug394": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug395": {"stat": "pass", "details": {}}, "MLDebug396": {"stat": "pass", "details": {}}, "MLDebug397": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_case_1\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_case_2\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_3\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_4\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_5\n  File \"__test__.py\", line 15, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug398": {"stat": "pass", "details": {}}, "MLDebug399": {"stat": "pass", "details": {}}, "MLDebug400": {"stat": "pass", "details": {}}, "MLDebug401": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_1\n  File \"__test__.py\", line 35, in base\nAssertionError: 'a,b,c\\n1,2,3\\n7,8,9\\n4,5,6' != 'a,b,c\\n7,8,9\\n4,5,6\\n1,2,3'\n  a,b,c\n- 1,2,3\n  7,8,9\n- 4,5,6+ 4,5,6\n?      +\n+ 1,2,3\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\n  File \"__test__.py\", line 35, in base\nAssertionError: 'a,b,c\\n1,2,3\\n4,5,6' != 'a,b,c\\n4,5,6\\n1,2,3'\n  a,b,c\n- 1,2,3\n- 4,5,6+ 4,5,6\n?      +\n+ 1,2,3\n"}}, "MLDebug402": {"stat": "pass", "details": {}}, "MLDebug403": {"stat": "pass", "details": {}}, "MLDebug404": {"stat": "pass", "details": {}}, "MLDebug405": {"stat": "pass", "details": {}}, "MLDebug406": {"stat": "pass", "details": {}}, "MLDebug407": {"stat": "pass", "details": {}}, "MLDebug408": {"stat": "pass", "details": {}}, "MLDebug409": {"stat": "pass", "details": {}}, "MLDebug410": {"stat": "pass", "details": {}}, "MLDebug411": {"stat": "pass", "details": {}}, "MLDebug412": {"stat": "pass", "details": {}}, "MLDebug413": {"stat": "pass", "details": {}}, "MLDebug414": {"stat": "pass", "details": {}}, "MLDebug415": {"stat": "pass", "details": {}}, "MLDebug416": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 119, in test_case_3\nAssertionError: 0.5542239979087153 != 0.2921456 within 2 places (0.26207839790871534 difference)\n"}}, "MLDebug417": {"stat": "pass", "details": {}}, "MLDebug418": {"stat": "pass", "details": {}}, "MLDebug419": {"stat": "pass", "details": {}}, "MLDebug420": {"stat": "pass", "details": {}}, "MLDebug421": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_2\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_3\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_5\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'mode' is not defined\n"}}, "MLDebug422": {"stat": "pass", "details": {}}, "MLDebug423": {"stat": "pass", "details": {}}, "MLDebug424": {"stat": "pass", "details": {}}, "MLDebug425": {"stat": "pass", "details": {}}, "MLDebug426": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_1\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'count' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_2\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'count' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_3\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'count' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_4\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'count' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 93, in test_case_5\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'count' is not defined\n"}}, "MLDebug427": {"stat": "pass", "details": {}}, "MLDebug428": {"stat": "pass", "details": {}}, "MLDebug429": {"stat": "pass", "details": {}}, "MLDebug430": {"stat": "pass", "details": {}}, "MLDebug431": {"stat": "pass", "details": {}}, "MLDebug432": {"stat": "pass", "details": {}}, "MLDebug433": {"stat": "pass", "details": {}}, "MLDebug434": {"stat": "pass", "details": {}}, "MLDebug435": {"stat": "pass", "details": {}}, "MLDebug436": {"stat": "pass", "details": {}}, "MLDebug437": {"stat": "pass", "details": {}}, "MLDebug438": {"stat": "pass", "details": {}}, "MLDebug439": {"stat": "pass", "details": {}}, "MLDebug440": {"stat": "pass", "details": {}}, "MLDebug441": {"stat": "pass", "details": {}}, "MLDebug442": {"stat": "pass", "details": {}}, "MLDebug443": {"stat": "pass", "details": {}}, "MLDebug444": {"stat": "pass", "details": {}}, "MLDebug445": {"stat": "pass", "details": {}}, "MLDebug446": {"stat": "pass", "details": {}}, "MLDebug447": {"stat": "pass", "details": {}}, "MLDebug448": {"stat": "pass", "details": {}}, "MLDebug449": {"stat": "pass", "details": {}}, "MLDebug450": {"stat": "fail", "details": {"test_invalid_column": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_invalid_column\n  File \"__test__.py\", line 9, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/categorical.py\", line 1597, in boxplot\n    p = _CategoricalPlotter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/categorical.py\", line 67, in __init__\n    super().__init__(data=data, variables=variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_base.py\", line 634, in __init__\n    self.assign_variables(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_base.py\", line 679, in assign_variables\n    plot_data = PlotData(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_core/data.py\", line 58, in __init__\n    frame, names, ids = self._assign_variables(data, variables)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/_core/data.py\", line 232, in _assign_variables\n    raise ValueError(err)\nValueError: Could not interpret value `closing_price` for `y`. An entry with this name does not appear in `data`.\n"}}, "MLDebug451": {"stat": "pass", "details": {}}, "MLDebug452": {"stat": "pass", "details": {}}, "MLDebug453": {"stat": "pass", "details": {}}, "MLDebug454": {"stat": "pass", "details": {}}, "MLDebug455": {"stat": "pass", "details": {}}, "MLDebug456": {"stat": "pass", "details": {}}, "MLDebug457": {"stat": "pass", "details": {}}, "MLDebug458": {"stat": "pass", "details": {}}, "MLDebug459": {"stat": "pass", "details": {}}, "MLDebug460": {"stat": "pass", "details": {}}, "MLDebug461": {"stat": "pass", "details": {}}, "MLDebug462": {"stat": "fail", "details": {"test_all_zeros": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_all_zeros\n  File \"__test__.py\", line 43, in check_cumsum_and_scaling\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1067, in assert_series_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"A\") are different\n\nDataFrame.iloc[:, 0] (column name=\"A\") values are different (66.66667 %)\n[index]: [0, 1, 2]\n[left]:  [0.0, 0.5, 1.0]\n[right]: [0.0, 0.0, 0.0]\nAt positional index 1, first diff: 0.5 != 0.0\n"}}, "MLDebug463": {"stat": "pass", "details": {}}, "MLDebug464": {"stat": "pass", "details": {}}, "MLDebug465": {"stat": "pass", "details": {}}, "MLDebug466": {"stat": "pass", "details": {}}, "MLDebug467": {"stat": "pass", "details": {}}, "MLDebug468": {"stat": "pass", "details": {}}, "MLDebug469": {"stat": "pass", "details": {}}, "MLDebug470": {"stat": "pass", "details": {}}, "MLDebug471": {"stat": "pass", "details": {}}, "MLDebug472": {"stat": "pass", "details": {}}, "MLDebug473": {"stat": "pass", "details": {}}, "MLDebug474": {"stat": "pass", "details": {}}, "MLDebug475": {"stat": "pass", "details": {}}, "MLDebug476": {"stat": "pass", "details": {}}, "MLDebug477": {"stat": "pass", "details": {}}, "MLDebug478": {"stat": "pass", "details": {}}, "MLDebug479": {"stat": "pass", "details": {}}, "MLDebug480": {"stat": "pass", "details": {}}, "MLDebug481": {"stat": "pass", "details": {}}, "MLDebug482": {"stat": "pass", "details": {}}, "MLDebug483": {"stat": "pass", "details": {}}, "MLDebug484": {"stat": "pass", "details": {}}, "MLDebug485": {"stat": "pass", "details": {}}, "MLDebug486": {"stat": "pass", "details": {}}, "MLDebug487": {"stat": "pass", "details": {}}, "MLDebug488": {"stat": "pass", "details": {}}, "MLDebug489": {"stat": "pass", "details": {}}, "MLDebug490": {"stat": "pass", "details": {}}, "MLDebug491": {"stat": "pass", "details": {}}, "MLDebug492": {"stat": "pass", "details": {}}, "MLDebug493": {"stat": "pass", "details": {}}, "MLDebug494": {"stat": "pass", "details": {}}, "MLDebug495": {"stat": "pass", "details": {}}, "MLDebug496": {"stat": "pass", "details": {}}, "MLDebug497": {"stat": "pass", "details": {}}, "MLDebug498": {"stat": "pass", "details": {}}, "MLDebug499": {"stat": "pass", "details": {}}, "MLDebug500": {"stat": "pass", "details": {}}, "MLDebug501": {"stat": "pass", "details": {}}, "MLDebug502": {"stat": "pass", "details": {}}, "MLDebug503": {"stat": "fail", "details": {"test_custom_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_custom_parameters\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'plot_filenam' is not defined\n", "test_data_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_data_values\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'plot_filenam' is not defined\n", "test_default_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_default_parameters\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'plot_filenam' is not defined\n", "test_no_labels_provided": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_no_labels_provided\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'plot_filenam' is not defined\n", "test_plot_file_cleanup": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_plot_file_cleanup\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'plot_filenam' is not defined\n"}}, "MLDebug504": {"stat": "pass", "details": {}}, "MLDebug505": {"stat": "pass", "details": {}}, "MLDebug506": {"stat": "pass", "details": {}}, "MLDebug507": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_3\nAssertionError: 14 != 610 : Unexpected number of lines in the plot\n"}}, "MLDebug508": {"stat": "pass", "details": {}}, "MLDebug509": {"stat": "pass", "details": {}}, "MLDebug510": {"stat": "pass", "details": {}}, "MLDebug511": {"stat": "pass", "details": {}}, "MLDebug512": {"stat": "fail", "details": {"test_data_points_count": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_data_points_count\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_return_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_return_type\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_value_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_value_range\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n", "test_value_truncation": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_value_truncation\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'data_d' is not defined\n"}}, "MLDebug513": {"stat": "pass", "details": {}}, "MLDebug514": {"stat": "pass", "details": {}}, "MLDebug515": {"stat": "pass", "details": {}}, "MLDebug516": {"stat": "pass", "details": {}}, "MLDebug517": {"stat": "pass", "details": {}}, "MLDebug518": {"stat": "pass", "details": {}}, "MLDebug519": {"stat": "pass", "details": {}}, "MLDebug520": {"stat": "pass", "details": {}}, "MLDebug521": {"stat": "pass", "details": {}}, "MLDebug522": {"stat": "pass", "details": {}}, "MLDebug523": {"stat": "pass", "details": {}}, "MLDebug524": {"stat": "pass", "details": {}}, "MLDebug525": {"stat": "pass", "details": {}}, "MLDebug526": {"stat": "pass", "details": {}}, "MLDebug527": {"stat": "pass", "details": {}}, "MLDebug528": {"stat": "pass", "details": {}}, "MLDebug529": {"stat": "pass", "details": {}}, "MLDebug530": {"stat": "pass", "details": {}}, "MLDebug531": {"stat": "pass", "details": {}}, "MLDebug532": {"stat": "pass", "details": {}}, "MLDebug533": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_5\nAssertionError: Exception not raised\n"}}, "MLDebug534": {"stat": "pass", "details": {}}, "MLDebug535": {"stat": "pass", "details": {}}, "MLDebug536": {"stat": "pass", "details": {}}, "MLDebug537": {"stat": "pass", "details": {}}, "MLDebug538": {"stat": "pass", "details": {}}, "MLDebug539": {"stat": "pass", "details": {}}, "MLDebug540": {"stat": "pass", "details": {}}, "MLDebug541": {"stat": "pass", "details": {}}, "MLDebug542": {"stat": "pass", "details": {}}, "MLDebug543": {"stat": "pass", "details": {}}, "MLDebug544": {"stat": "pass", "details": {}}, "MLDebug545": {"stat": "pass", "details": {}}, "MLDebug546": {"stat": "pass", "details": {}}, "MLDebug547": {"stat": "pass", "details": {}}, "MLDebug548": {"stat": "pass", "details": {}}, "MLDebug549": {"stat": "pass", "details": {}}, "MLDebug550": {"stat": "pass", "details": {}}, "MLDebug551": {"stat": "pass", "details": {}}, "MLDebug552": {"stat": "pass", "details": {}}, "MLDebug553": {"stat": "pass", "details": {}}, "MLDebug554": {"stat": "pass", "details": {}}, "MLDebug555": {"stat": "pass", "details": {}}, "MLDebug556": {"stat": "pass", "details": {}}, "MLDebug557": {"stat": "pass", "details": {}}, "MLDebug558": {"stat": "pass", "details": {}}, "MLDebug559": {"stat": "pass", "details": {}}, "MLDebug560": {"stat": "pass", "details": {}}, "MLDebug561": {"stat": "pass", "details": {}}, "MLDebug562": {"stat": "pass", "details": {}}, "MLDebug563": {"stat": "fail", "details": {"test_millisecond_difference": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_millisecond_difference\nAssertionError: Lists differ: [0.5, 0.5] != [0, 0]\n\nFirst differing element 0:\n0.5\n0\n\n- [0.5, 0.5]\n?   --   --\n\n+ [0, 0]\n"}}, "MLDebug564": {"stat": "pass", "details": {}}, "MLDebug565": {"stat": "pass", "details": {}}, "MLDebug566": {"stat": "pass", "details": {}}, "MLDebug567": {"stat": "pass", "details": {}}, "MLDebug568": {"stat": "pass", "details": {}}, "MLDebug569": {"stat": "pass", "details": {}}, "MLDebug570": {"stat": "fail", "details": {"test_valid_xml": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 56, in test_valid_xml\n  File \"__test__.py\", line 15, in task_func\n  File \"src/lxml/etree.pyx\", line 3306, in lxml.etree.fromstring\n  File \"src/lxml/parser.pxi\", line 1994, in lxml.etree._parseMemoryDocument\nValueError: can only parse strings\n"}}, "MLDebug571": {"stat": "pass", "details": {}}, "MLDebug572": {"stat": "fail", "details": {"test_download_invald_zip_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 87, in test_download_invald_zip_file\nAssertionError: 'Error: The URL does not point to a ZIP file.' != 'Error: The downloaded file is not a valid ZIP file.'\n- Error: The URL does not point to a ZIP file.\n+ Error: The downloaded file is not a valid ZIP file.\n\n"}}, "MLDebug573": {"stat": "pass", "details": {}}, "MLDebug574": {"stat": "pass", "details": {}}, "MLDebug575": {"stat": "fail", "details": {"test_invalid_url": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 62, in test_invalid_url\n  File \"__test__.py\", line 30, in task_func\nTypeError: a bytes-like object is required, not 'MagicMock'\n", "test_non_200_http_response": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 69, in test_non_200_http_response\n  File \"__test__.py\", line 30, in task_func\nTypeError: a bytes-like object is required, not 'MagicMock'\n", "test_successful_download_and_extraction": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_successful_download_and_extraction\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/api.py\", line 73, in get\n    return request(\"get\", url, params=params, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/sessions.py\", line 589, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/sessions.py\", line 703, in send\n    r = adapter.send(request, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/requests/adapters.py\", line 667, in send\n    resp = conn.urlopen(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 789, in urlopen\n    response = self._make_request(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 466, in _make_request\n    self._validate_conn(conn)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 1095, in _validate_conn\n    conn.connect()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connection.py\", line 693, in connect\n    self.sock = sock = self._new_conn()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/connection.py\", line 199, in _new_conn\n    sock = connection.create_connection(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/urllib3/util/connection.py\", line 73, in create_connection\n    sock.connect(sa)\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 86, in signal_handler\n    raise TimeoutException(\"Timed out!\")\ncheck_utils.TimeoutException: Timed out!\n"}}, "MLDebug576": {"stat": "fail", "details": {"test_empty_table": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/html.py\", line 1240, in read_html\n    return _parse(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/html.py\", line 1003, in _parse\n    raise retained\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/html.py\", line 983, in _parse\n    tables = p.parse_tables()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/html.py\", line 249, in parse_tables\n    tables = self._parse_tables(self._build_doc(), self.match, self.attrs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/html.py\", line 752, in _parse_tables\n    raise ValueError(f\"No tables found matching regex {repr(pattern)}\")\nValueError: No tables found matching regex '.+'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 106, in test_empty_table\n  File \"__test__.py\", line 56, in task_func\nsqlite3.DatabaseError: No tables found matching regex '.+'\n"}}, "MLDebug577": {"stat": "pass", "details": {}}, "MLDebug578": {"stat": "pass", "details": {}}, "MLDebug579": {"stat": "fail", "details": {"ALL": "No module named 'pytesseract'"}}, "MLDebug580": {"stat": "fail", "details": {"ALL": "No module named 'chardet'"}}, "MLDebug581": {"stat": "fail", "details": {"test_high_correlation": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_high_correlation\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_negative_correlation": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_negative_correlation\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n", "test_no_correlation": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_no_correlation\n  File \"__test__.py\", line 25, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug582": {"stat": "fail", "details": {"test_number_of_bins": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_number_of_bins\nAssertionError: False is not true\n"}}, "MLDebug583": {"stat": "pass", "details": {}}, "MLDebug584": {"stat": "fail", "details": {"test_value_consistency": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_value_consistency\n  File \"timestamps.pyx\", line 1865, in pandas._libs.tslibs.timestamps.Timestamp.__new__\n  File \"conversion.pyx\", line 423, in pandas._libs.tslibs.conversion.convert_to_tsobject\nValueError: Cannot convert Period to Timestamp unambiguously. Use to_timestamp\n"}}, "MLDebug585": {"stat": "pass", "details": {}}, "MLDebug586": {"stat": "pass", "details": {}}, "MLDebug587": {"stat": "pass", "details": {}}, "MLDebug588": {"stat": "fail", "details": {"test_smtp_server_connection_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 121, in test_smtp_server_connection_error\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 265, in readline\n    raise IOError\nOSError\n", "test_socket_closes_after_operation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 137, in test_socket_closes_after_operation\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 265, in readline\n    raise IOError\nOSError\n", "test_successful_email_dispatch": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 156, in test_successful_email_dispatch\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 265, in readline\n    raise IOError\nOSError\n", "test_successful_email_send": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 77, in test_successful_email_send\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 265, in readline\n    raise IOError\nOSError\n"}}, "MLDebug589": {"stat": "pass", "details": {}}, "MLDebug590": {"stat": "pass", "details": {}}, "MLDebug591": {"stat": "pass", "details": {}}, "MLDebug592": {"stat": "pass", "details": {}}, "MLDebug593": {"stat": "pass", "details": {}}, "MLDebug594": {"stat": "fail", "details": {"test_large_distribution": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_large_distribution\n  File \"__test__.py\", line 27, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_base.py\", line 74, in wrapper\n    return get_method(self)(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2071, in set_ticklabels\n    raise ValueError(\nValueError: The number of FixedLocator locations (10), usually from a call to set_ticks, does not match the number of labels (26).\n", "test_uniform_distribution": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_uniform_distribution\n  File \"__test__.py\", line 27, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_base.py\", line 74, in wrapper\n    return get_method(self)(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axis.py\", line 2071, in set_ticklabels\n    raise ValueError(\nValueError: The number of FixedLocator locations (1), usually from a call to set_ticks, does not match the number of labels (3).\n"}}, "MLDebug595": {"stat": "fail", "details": {"test_save_plot": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 97, in test_save_plot\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: savefig('output.png')\nActual: savefig('output.png', bbox_inches='tight')\n"}}, "MLDebug596": {"stat": "fail", "details": {"test_csv_with_non_numeric_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_csv_with_non_numeric_data\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1373, in loadtxt\n    arr = _read(fname, dtype=dtype, comment=comment, delimiter=delimiter,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1016, in _read\n    arr = _load_from_filelike(\nTypeError: encoding must be a unicode string.\n", "test_empty_csv_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_empty_csv_file\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1373, in loadtxt\n    arr = _read(fname, dtype=dtype, comment=comment, delimiter=delimiter,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1016, in _read\n    arr = _load_from_filelike(\nTypeError: encoding must be a unicode string.\n", "test_small_population_size": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_small_population_size\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1373, in loadtxt\n    arr = _read(fname, dtype=dtype, comment=comment, delimiter=delimiter,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1016, in _read\n    arr = _load_from_filelike(\nTypeError: encoding must be a unicode string.\n", "test_valid_csv_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_valid_csv_file\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1373, in loadtxt\n    arr = _read(fname, dtype=dtype, comment=comment, delimiter=delimiter,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/lib/npyio.py\", line 1016, in _read\n    arr = _load_from_filelike(\nTypeError: encoding must be a unicode string.\n"}}, "MLDebug597": {"stat": "pass", "details": {}}, "MLDebug598": {"stat": "fail", "details": {"test_valid_pairs": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_valid_pairs\nAssertionError: 'a:1' not found in ['_nolegend_', '_nolegend_', '_nolegend_', '_nolegend_', '_nolegend_'] : Expected pair a:1 not found in plotted pairs.\n"}}, "MLDebug599": {"stat": "fail", "details": {"test_default_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_default_input\nAssertionError: Tuples differ: (0, 0) != (10, 7)\n\nFirst differing element 0:\n0\n10\n\n- (0, 0)\n?     ^\n\n+ (10, 7)\n?  +   ^\n : The shape of the DataFrame with default inputs is not as expected.\n", "test_custom_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_custom_input\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'd' is not defined\n", "test_partial_default": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_partial_default\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'd' is not defined\n", "test_single_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_single_input\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'd' is not defined\n"}}, "MLDebug600": {"stat": "pass", "details": {}}, "MLDebug601": {"stat": "pass", "details": {}}, "MLDebug602": {"stat": "pass", "details": {}}, "MLDebug603": {"stat": "pass", "details": {}}, "MLDebug604": {"stat": "pass", "details": {}}, "MLDebug605": {"stat": "pass", "details": {}}, "MLDebug606": {"stat": "pass", "details": {}}, "MLDebug607": {"stat": "pass", "details": {}}, "MLDebug608": {"stat": "pass", "details": {}}, "MLDebug609": {"stat": "pass", "details": {}}, "MLDebug610": {"stat": "fail", "details": {"test_color_cycle": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_color_cycle\nAssertionError: Lists differ: ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'b'] != [(0.0, 0.0, 1.0, 1), (0.0, 0.5, 0.0, 1), ([119 chars], 1)]\n\nFirst differing element 0:\n'b'\n(0.0, 0.0, 1.0, 1)\n\n- ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'b']\n+ [(0.0, 0.0, 1.0, 1),\n+  (0.0, 0.5, 0.0, 1),\n+  (1.0, 0.0, 0.0, 1),\n+  (0.0, 0.75, 0.75, 1),\n+  (0.75, 0.0, 0.75, 1),\n+  (0.75, 0.75, 0.0, 1),\n+  (0.0, 0.0, 0.0, 1),\n+  (0.0, 0.0, 1.0, 1)] : The colors of the plotted lines should follow the specified cycle.\n"}}, "MLDebug611": {"stat": "fail", "details": {"test_est_to_utc": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_est_to_utc\n  File \"__test__.py\", line 8, in task_func\nNameError: name 'datetime' is not defined\n", "test_ist_to_utc": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_ist_to_utc\n  File \"__test__.py\", line 8, in task_func\nNameError: name 'datetime' is not defined\n", "test_utc_to_est": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_utc_to_est\n  File \"__test__.py\", line 8, in task_func\nNameError: name 'datetime' is not defined\n", "test_utc_to_gmt": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_utc_to_gmt\n  File \"__test__.py\", line 8, in task_func\nNameError: name 'datetime' is not defined\n", "test_utc_to_ist": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_utc_to_ist\n  File \"__test__.py\", line 8, in task_func\nNameError: name 'datetime' is not defined\n"}}, "MLDebug612": {"stat": "pass", "details": {}}, "MLDebug613": {"stat": "pass", "details": {}}, "MLDebug614": {"stat": "pass", "details": {}}, "MLDebug615": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug616": {"stat": "pass", "details": {}}, "MLDebug617": {"stat": "pass", "details": {}}, "MLDebug618": {"stat": "pass", "details": {}}, "MLDebug619": {"stat": "fail", "details": {"test_multiple_columns": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'ANOVA Results'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 94, in test_multiple_columns\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 4102, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'ANOVA Results'\n"}}, "MLDebug620": {"stat": "fail", "details": {"test_custom_items_and_locations": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_custom_items_and_locations\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'a' is not defined\n", "test_plot_title_and_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_plot_title_and_labels\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'a' is not defined\n", "test_return_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_return_type\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'a' is not defined\n", "test_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_value\n  File \"__test__.py\", line 38, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug621": {"stat": "pass", "details": {}}, "MLDebug622": {"stat": "pass", "details": {}}, "MLDebug623": {"stat": "fail", "details": {"ALL": "'[' was never closed (__test__.py, line 12)"}}, "MLDebug624": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug625": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug626": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_case_1\nAssertionError: Lists differ: [('python', 2), ('is', 1)] != [('Python', 2), ('is', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('is', 1)]\n?    ^\n\n+ [('Python', 2), ('is', 1)]\n?    ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_2\nAssertionError: Lists differ: [('python', 2), ('visit', 1)] != [('Python', 2), ('Visit', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('visit', 1)]\n?    ^              ^\n\n+ [('Python', 2), ('Visit', 1)]\n?    ^              ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_3\nAssertionError: Lists differ: [('python', 2), ('visit', 1)] != [('Python', 2), ('Visit', 1)]\n\nFirst differing element 0:\n('python', 2)\n('Python', 2)\n\n- [('python', 2), ('visit', 1)]\n?    ^              ^\n\n+ [('Python', 2), ('Visit', 1)]\n?    ^              ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_5\nAssertionError: Lists differ: [('hello', 1), ('world', 1)] != [('Hello', 1), ('world', 1)]\n\nFirst differing element 0:\n('hello', 1)\n('Hello', 1)\n\n- [('hello', 1), ('world', 1)]\n?    ^\n\n+ [('Hello', 1), ('world', 1)]\n?    ^\n\n"}}, "MLDebug627": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_3\nAssertionError: Lists differ: [('is[47 chars] 1), ('with', 1), ('its', 2), ('of', 1), ('to', 1), ('for', 1)] != [('is[47 chars] 1), ('with', 1), ('its', 1), ('of', 1), ('to', 1), ('for', 1)]\n\nFirst differing element 6:\n('its', 2)\n('its', 1)\n\n  [('is', 1),\n   ('an', 1),\n   ('and', 4),\n   ('by', 1),\n   ('in', 1),\n   ('with', 1),\n-  ('its', 2),\n?          ^\n\n+  ('its', 1),\n?          ^\n\n   ('of', 1),\n   ('to', 1),\n   ('for', 1)]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_5\nAssertionError: Lists differ: [('i', 1)] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n('i', 1)\n\n- [('i', 1)]\n+ []\n"}}, "MLDebug628": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_1\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'np' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_2\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'np' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_3\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'np' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_4\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'np' is not defined\n"}}, "MLDebug629": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 8, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_case_1\n  File \"__test__.py\", line 30, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 8, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 73, in test_case_3\n  File \"__test__.py\", line 30, in task_func\nFileNotFoundError: The file /path/to/short_script.py does not exist.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_5\n  File \"__test__.py\", line 20, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/threading.py\", line 1100, in join\n    self._wait_for_tstate_lock(timeout=max(timeout, 0))\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/threading.py\", line 1116, in _wait_for_tstate_lock\n    if lock.acquire(block, timeout):\n  File \"/home/jyhuang/code/MLDebug/eval/check_utils.py\", line 86, in signal_handler\n    raise TimeoutException(\"Timed out!\")\ncheck_utils.TimeoutException: Timed out!\n"}}, "MLDebug630": {"stat": "pass", "details": {}}, "MLDebug631": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in test_case_1\nAssertionError: {0: 2, 1: 1} != {0: 2}\n- {0: 2, 1: 1}\n+ {0: 2}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_case_2\nAssertionError: {2: 2, 3: 1} != {2: 2}\n- {2: 2, 3: 1}\n+ {2: 2}\n"}}, "MLDebug632": {"stat": "fail", "details": {"test_date_conversion": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_date_conversion\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_empty_dataframe": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_empty_dataframe\n  File \"__test__.py\", line 17, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1191, in __getitem__\n    return self._getitem_axis(maybe_callable, axis=axis)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1752, in _getitem_axis\n    self._validate_integer(key, axis)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexing.py\", line 1685, in _validate_integer\n    raise IndexError(\"single positional indexer is out-of-bounds\")\nIndexError: single positional indexer is out-of-bounds\n", "test_plot_title": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_plot_title\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_return_type1": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_return_type1\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_return_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_return_value\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug633": {"stat": "pass", "details": {}}, "MLDebug634": {"stat": "pass", "details": {}}, "MLDebug635": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_1\n  File \"__test__.py\", line 35, in task_func\nNameError: name 'file_nam' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_2\n  File \"__test__.py\", line 35, in task_func\nNameError: name 'file_nam' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_3\n  File \"__test__.py\", line 35, in task_func\nNameError: name 'file_nam' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_4\n  File \"__test__.py\", line 35, in task_func\nNameError: name 'file_nam' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_5\n  File \"__test__.py\", line 35, in task_func\nNameError: name 'file_nam' is not defined\n"}}, "MLDebug636": {"stat": "pass", "details": {}}, "MLDebug637": {"stat": "pass", "details": {}}, "MLDebug638": {"stat": "pass", "details": {}}, "MLDebug639": {"stat": "pass", "details": {}}, "MLDebug640": {"stat": "fail", "details": {"test_api_failure_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 137, in test_api_failure_handling\nAssertionError: Exception not raised\n", "test_repeated_urls": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 134, in test_repeated_urls\nAssertionError: 2 != 1\n"}}, "MLDebug641": {"stat": "fail", "details": {"test_api_failure_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 133, in test_api_failure_handling\nAssertionError: Exception not raised\n", "test_repeated_urls": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 130, in test_repeated_urls\nAssertionError: 2 != 1\n"}}, "MLDebug642": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_1\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_3\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_4\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_5\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_6\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'resul' is not defined\n"}}, "MLDebug643": {"stat": "pass", "details": {}}, "MLDebug644": {"stat": "pass", "details": {}}, "MLDebug645": {"stat": "pass", "details": {}}, "MLDebug646": {"stat": "pass", "details": {}}, "MLDebug647": {"stat": "pass", "details": {}}, "MLDebug648": {"stat": "pass", "details": {}}, "MLDebug649": {"stat": "pass", "details": {}}, "MLDebug650": {"stat": "pass", "details": {}}, "MLDebug651": {"stat": "pass", "details": {}}, "MLDebug652": {"stat": "fail", "details": {"test_custom_values_successful_script": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 73, in test_custom_values_successful_script\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: sh: 0: Can't open custom_backup.sh\n\n", "test_default_values_successful_script": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 51, in test_default_values_successful_script\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: sh: 0: Can't open backup.sh\n\n", "test_log_data_format": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 82, in test_log_data_format\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: sh: 0: Can't open backup.sh\n\n", "test_non_zero_exit_status": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_non_zero_exit_status\n  File \"__test__.py\", line 21, in task_func\nRuntimeError: There was an error executing the script: sh: 0: Can't open backup.sh\n\n"}}, "MLDebug653": {"stat": "pass", "details": {}}, "MLDebug654": {"stat": "fail", "details": {"test_output_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_output_types\nAssertionError: Lists differ: [0.0, 0.0, 2.0, 2.0, 1.0, 0.0, 1.0, 0.0, 1[53 chars] 1.0] != [2.0, 2.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0[53 chars] 2.0]\n\nFirst differing element 0:\n0.0\n2.0\n\n- [0.0,\n?  ^\n\n+ [2.0,\n?  ^\n\n-  0.0,\n-  2.0,\n   2.0,\n   1.0,\n+  0.0,\n   0.0,\n   1.0,\n   0.0,\n   1.0,\n   0.0,\n   1.0,\n   4.0,\n+  0.0,\n   1.0,\n   1.0,\n   0.0,\n   0.0,\n   0.0,\n   0.0,\n-  3.0,\n?  ^\n\n+  2.0,\n?  ^\n\n-  1.0]\n?  ^\n\n+  2.0]\n?  ^\n : DataFrame contents should match the expected output\n"}}, "MLDebug655": {"stat": "pass", "details": {}}, "MLDebug656": {"stat": "pass", "details": {}}, "MLDebug657": {"stat": "pass", "details": {}}, "MLDebug658": {"stat": "pass", "details": {}}, "MLDebug659": {"stat": "fail", "details": {"test_various_hex_formats": "Traceback (most recent call last):\n  File \"__test__.py\", line 11, in task_func\nbinascii.Error: Non-hexadecimal digit found\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 43, in test_various_hex_formats\n  File \"__test__.py\", line 14, in task_func\nValueError: non-hexadecimal number found in fromhex() arg at position 0\n"}}, "MLDebug660": {"stat": "pass", "details": {}}, "MLDebug661": {"stat": "pass", "details": {}}, "MLDebug662": {"stat": "pass", "details": {}}, "MLDebug663": {"stat": "pass", "details": {}}, "MLDebug664": {"stat": "pass", "details": {}}, "MLDebug665": {"stat": "pass", "details": {}}, "MLDebug666": {"stat": "pass", "details": {}}, "MLDebug667": {"stat": "fail", "details": {"test_open_port": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 47, in test_open_port\nAssertionError: False is not true : At least one port should be open for the test range.\n"}}, "MLDebug668": {"stat": "fail", "details": {"test_command_failure_with_specific_exit_code": "Traceback (most recent call last):\n  File \"__test__.py\", line 107, in test_command_failure_with_specific_exit_code\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_empty_csv_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_empty_csv_file\n  File \"__test__.py\", line 36, in task_func\nUnboundLocalError: local variable 'output_file' referenced before assignment\n", "test_invalid_command": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_invalid_command\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_mixed_commands": "Traceback (most recent call last):\n  File \"__test__.py\", line 93, in test_mixed_commands\nTypeError: object of type '_io.TextIOWrapper' has no len()\n", "test_successful_command_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_successful_command_execution\nTypeError: object of type '_io.TextIOWrapper' has no len()\n"}}, "MLDebug669": {"stat": "pass", "details": {}}, "MLDebug670": {"stat": "fail", "details": {"test_deterministic_grades": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_deterministic_grades\nAssertionError: Lists differ: [84, 16, 79, 67, 13, 62, 32, 22] != [49, 97, 53, 5, 33, 65, 62, 51]\n\nFirst differing element 0:\n84\n49\n\n- [84, 16, 79, 67, 13, 62, 32, 22]\n+ [49, 97, 53, 5, 33, 65, 62, 51] : The first row grades should be deterministic and match the expected pattern\n"}}, "MLDebug671": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\n  File \"__test__.py\", line 24, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\n  File \"__test__.py\", line 24, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 24, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_4\n  File \"__test__.py\", line 24, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_5\n  File \"__test__.py\", line 24, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug672": {"stat": "fail", "details": {"test_correlation_calculation": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_correlation_calculation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 6 decimals\n\n(shapes (8, 8), (64,) mismatch)\n x: MaskedArray([[ 1., inf, inf, inf, -1.,  1., -1., inf],\n             [inf, inf, inf, inf, inf, inf, inf, inf],\n             [inf, inf, inf, inf, inf, inf, inf, inf],...\n y: array([ 1., nan, nan, nan, -1.,  1., -1., nan, nan, nan, nan, nan, nan,\n       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n       nan, nan, nan, nan, nan, nan, -1., nan, nan, nan,  1., -1.,  1.,...\n"}}, "MLDebug673": {"stat": "pass", "details": {}}, "MLDebug674": {"stat": "pass", "details": {}}, "MLDebug675": {"stat": "pass", "details": {}}, "MLDebug676": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 25, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_case_4\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug677": {"stat": "fail", "details": {"test_process_found_restarts_process": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_process_found_restarts_process\nAssertionError: 'Process not found. Starting notepad.' != 'Process found. Restarting notepad.'\n- Process not found. Starting notepad.\n?         ----       ^\n+ Process found. Restarting notepad.\n?                ^^^\n\n", "test_process_terminates_and_restarts_multiple_instances": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 59, in test_process_terminates_and_restarts_multiple_instances\nAssertionError: 'Process not found. Starting multi_instance.' != 'Process found. Restarting multi_instance.'\n- Process not found. Starting multi_instance.\n?         ----       ^\n+ Process found. Restarting multi_instance.\n?                ^^^\n\n"}}, "MLDebug678": {"stat": "pass", "details": {}}, "MLDebug679": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 18, in test_case_1\nAssertionError: Lists differ: ['UK', 'USA', 'China'] != ['USA', 'UK', 'China']\n\nFirst differing element 0:\n'UK'\n'USA'\n\n- ['UK', 'USA', 'China']\n+ ['USA', 'UK', 'China']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_3\nAssertionError: Lists differ: ['Japan', 'Australia', 'China', 'UK', 'USA'] != ['USA', 'UK', 'China', 'Japan', 'Australia']\n\nFirst differing element 0:\n'Japan'\n'USA'\n\n- ['Japan', 'Australia', 'China', 'UK', 'USA']\n+ ['USA', 'UK', 'China', 'Japan', 'Australia']\n"}}, "MLDebug680": {"stat": "pass", "details": {}}, "MLDebug681": {"stat": "pass", "details": {}}, "MLDebug682": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug683": {"stat": "pass", "details": {}}, "MLDebug684": {"stat": "pass", "details": {}}, "MLDebug685": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug686": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_3\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_4\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 92, in test_case_5\n  File \"__test__.py\", line 26, in task_func\nNameError: name 'result_d' is not defined\n"}}, "MLDebug687": {"stat": "fail", "details": {"ALL": "No module named 'geopy'"}}, "MLDebug688": {"stat": "fail", "details": {"ALL": "No module named 'geopandas'"}}, "MLDebug689": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 48, in test_case_1\nAssertionError: Lists differ: ['names', 'John', 'Doe', 'Alice'] != ['John', 'Doe', 'Alice']\n\nFirst differing element 0:\n'names'\n'John'\n\nFirst list contains 1 additional elements.\nFirst extra element 3:\n'Alice'\n\n- ['names', 'John', 'Doe', 'Alice']\n?  ---------\n\n+ ['John', 'Doe', 'Alice']\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 53, in test_case_2\nAssertionError: Lists differ: ['names', 'Bob', 'Eve'] != ['Bob', 'Eve']\n\nFirst differing element 0:\n'names'\n'Bob'\n\nFirst list contains 1 additional elements.\nFirst extra element 2:\n'Eve'\n\n- ['names', 'Bob', 'Eve']\n?  ---------\n\n+ ['Bob', 'Eve']\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 68, in test_case_5\nAssertionError: Lists differ: ['names', 'Billy'] != ['Billy']\n\nFirst differing element 0:\n'names'\n'Billy'\n\nFirst list contains 1 additional elements.\nFirst extra element 1:\n'Billy'\n\n- ['names', 'Billy']\n+ ['Billy']\n"}}, "MLDebug690": {"stat": "pass", "details": {}}, "MLDebug691": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_6\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"id\") are different\n\nDataFrame.iloc[:, 0] (column name=\"id\") values are different (100.0 %)\n[index]: [0, 1]\n[left]:  [1, 2]\n[right]: [1, 2]\n"}}, "MLDebug692": {"stat": "fail", "details": {"test_large_number_of_customers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 55, in test_large_number_of_customers\nAssertionError: {'Dog': 1, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 1000, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 0, 'Dog': 1, 'Fish': 0, 'Hamster': 0}\n+ {'Bird': 0, 'Cat': 0, 'Dog': 1000, 'Fish': 0, 'Hamster': 0}\n?                               +++\n\n", "test_no_customer": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_no_customer\nAssertionError: {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 1, 'Hamster': 0} != {'Dog': 0, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 1, 'Hamster': 0}\n?                                         ^\n\n+ {'Bird': 0, 'Cat': 0, 'Dog': 0, 'Fish': 0, 'Hamster': 0}\n?                                         ^\n\n", "test_random_animal_selection": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 64, in test_random_animal_selection\nAssertionError: {'Dog': 1, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 1, 'Cat': 1, 'Bird': 1, 'Fish': 1, 'Hamster': 1}\n- {'Bird': 0, 'Cat': 0, 'Dog': 1, 'Fish': 0, 'Hamster': 0}\n?          ^         ^                    ^             ^\n\n+ {'Bird': 1, 'Cat': 1, 'Dog': 1, 'Fish': 1, 'Hamster': 1}\n?          ^         ^                    ^             ^\n\n", "test_sales_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 84, in test_sales_content\nAssertionError: {'Dog': 1, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 1, 'Cat': 1, 'Bird': 1, 'Fish': 1, 'Hamster': 1}\n- {'Bird': 0, 'Cat': 0, 'Dog': 1, 'Fish': 0, 'Hamster': 0}\n?          ^         ^                    ^             ^\n\n+ {'Bird': 1, 'Cat': 1, 'Dog': 1, 'Fish': 1, 'Hamster': 1}\n?          ^         ^                    ^             ^\n\n", "test_typical_case": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 38, in test_typical_case\nAssertionError: {'Dog': 1, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0} != {'Dog': 100, 'Cat': 0, 'Bird': 0, 'Fish': 0, 'Hamster': 0}\n- {'Bird': 0, 'Cat': 0, 'Dog': 1, 'Fish': 0, 'Hamster': 0}\n+ {'Bird': 0, 'Cat': 0, 'Dog': 100, 'Fish': 0, 'Hamster': 0}\n?                               ++\n\n", "test_zero_customers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_zero_customers\n  File \"__test__.py\", line 21, in task_func\nKeyError: <MagicMock name='choice()' id='140442552835312'>\n"}}, "MLDebug693": {"stat": "pass", "details": {}}, "MLDebug694": {"stat": "pass", "details": {}}, "MLDebug695": {"stat": "pass", "details": {}}, "MLDebug696": {"stat": "pass", "details": {}}, "MLDebug697": {"stat": "pass", "details": {}}, "MLDebug698": {"stat": "fail", "details": {"test_count_greater_than_or_equal_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_count_greater_than_or_equal_value\nAssertionError: 3 != 2\n"}}, "MLDebug699": {"stat": "pass", "details": {}}, "MLDebug700": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 31)"}}, "MLDebug701": {"stat": "pass", "details": {}}, "MLDebug702": {"stat": "pass", "details": {}}, "MLDebug703": {"stat": "pass", "details": {}}, "MLDebug704": {"stat": "pass", "details": {}}, "MLDebug705": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_1\nAssertionError: 3 != 4\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_2\nAssertionError: 0.6 != 2\n"}}, "MLDebug706": {"stat": "pass", "details": {}}, "MLDebug707": {"stat": "pass", "details": {}}, "MLDebug708": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 114, in test_case_1\nAssertionError: 'final' != 'success'\n- final\n+ success\n\n"}}, "MLDebug709": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: Tuples differ: (81, 60, 30, 2, 2, 2) != (81, 60, 30, 10712, 8460, 8460)\n\nFirst differing element 3:\n2\n10712\n\n- (81, 60, 30, 2, 2, 2)\n+ (81, 60, 30, 10712, 8460, 8460)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_2\nAssertionError: Tuples differ: (180, 180, 0, 90, 90, 90) != (180, 180, 0, 24508, 21932, 21932)\n\nFirst differing element 3:\n90\n24508\n\n- (180, 180, 0, 90, 90, 90)\n+ (180, 180, 0, 24508, 21932, 21932)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_3\nAssertionError: Tuples differ: (30, 30, 10, 6, 5, 5) != (30, 30, 10, 3296, 2437, 2437)\n\nFirst differing element 3:\n6\n3296\n\n- (30, 30, 10, 6, 5, 5)\n+ (30, 30, 10, 3296, 2437, 2437)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_4\nAssertionError: Tuples differ: (82.5, 82.5, 15, 4, 3) != (82.5, 82.5, 15, 11366, 6311)\n\nFirst differing element 3:\n4\n11366\n\n- (82.5, 82.5, 15, 4, 3)\n?                  ^\n\n+ (82.5, 82.5, 15, 11366, 6311)\n?                  ^^^^^  + ++\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_5\nAssertionError: Tuples differ: (32.5, 32.5, 5, 12, 9, 11) != (32.5, 32.5, 5, 4718, 2431, 6641)\n\nFirst differing element 3:\n12\n4718\n\n- (32.5, 32.5, 5, 12, 9, 11)\n+ (32.5, 32.5, 5, 4718, 2431, 6641)\n"}}, "MLDebug710": {"stat": "pass", "details": {}}, "MLDebug711": {"stat": "pass", "details": {}}, "MLDebug712": {"stat": "pass", "details": {}}, "MLDebug713": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_3\nAssertionError: 13 != 610 : Unexpected number of lines in the plot\n"}}, "MLDebug714": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_4\nAssertionError: 112 != 210\n"}}, "MLDebug715": {"stat": "fail", "details": {"ALL": "No module named 'soundfile'"}}, "MLDebug716": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_1\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_3\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_4\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_5\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug717": {"stat": "fail", "details": {"test_case_regular": "Traceback (most recent call last):\n  File \"__test__.py\", line 37, in test_case_regular\nAssertionError: {'Total Sales': 1800, 'Most Popular Category': 'Beauty'} != {'Total Sales': 1800, 'Most Popular Category': 'Electronics'}\n- {'Most Popular Category': 'Beauty', 'Total Sales': 1800}\n?                            ^ ^^ ^\n\n+ {'Most Popular Category': 'Electronics', 'Total Sales': 1800}\n?                            ^^ ^ ^^^^^^\n\n", "test_case_with_duplicates": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_with_duplicates\nAssertionError: {'Total Sales': 1200, 'Most Popular Category': 'Beauty'} != {'Total Sales': 1200, 'Most Popular Category': 'Electronics'}\n- {'Most Popular Category': 'Beauty', 'Total Sales': 1200}\n?                            ^ ^^ ^\n\n+ {'Most Popular Category': 'Electronics', 'Total Sales': 1200}\n?                            ^^ ^ ^^^^^^\n\n"}}, "MLDebug718": {"stat": "pass", "details": {}}, "MLDebug719": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 31)"}}, "MLDebug720": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_1\n  File \"__test__.py\", line 28, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\n  File \"__test__.py\", line 28, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_3\n  File \"__test__.py\", line 28, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_4\n  File \"__test__.py\", line 28, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_5\n  File \"__test__.py\", line 28, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug721": {"stat": "pass", "details": {}}, "MLDebug722": {"stat": "fail", "details": {"test_custom_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_custom_range\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_default_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in test_default_parameters\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_large_dataset": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_large_dataset\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_single_value_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_single_value_range\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n", "test_small_dataset": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_small_dataset\n  File \"__test__.py\", line 13, in task_func\nIndexError: invalid index to scalar variable.\n"}}, "MLDebug723": {"stat": "pass", "details": {}}, "MLDebug724": {"stat": "pass", "details": {}}, "MLDebug725": {"stat": "pass", "details": {}}, "MLDebug726": {"stat": "pass", "details": {}}, "MLDebug727": {"stat": "pass", "details": {}}, "MLDebug728": {"stat": "pass", "details": {}}, "MLDebug729": {"stat": "fail", "details": {"test_sine_function": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_sine_function\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1504, in assert_allclose\n    assert_array_compare(compare, actual, desired, err_msg=str(err_msg),\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nNot equal to tolerance rtol=1e-07, atol=1e-05\n\n(shapes (400,), (1000,) mismatch)\n x: array([ 0.000000e+00,  1.574668e-02,  3.148946e-02,  4.722442e-02,\n        6.294768e-02,  7.865533e-02,  9.434347e-02,  1.100082e-01,\n        1.256457e-01,  1.412520e-01,  1.568233e-01,  1.723557e-01,...\n y: array([ 0.000000e+00,  6.289433e-03,  1.257862e-02,  1.886730e-02,\n        2.515525e-02,  3.144219e-02,  3.772789e-02,  4.401210e-02,\n        5.029457e-02,  5.657505e-02,  6.285329e-02,  6.912904e-02,...\n"}}, "MLDebug730": {"stat": "pass", "details": {}}, "MLDebug731": {"stat": "pass", "details": {}}, "MLDebug732": {"stat": "pass", "details": {}}, "MLDebug733": {"stat": "pass", "details": {}}, "MLDebug734": {"stat": "pass", "details": {}}, "MLDebug735": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nIndexError: invalid index to scalar variable.\n"}}, "MLDebug736": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: '8d1578e1643b59534f0122a4b798aab069981f7ff9c40e15f52ec5fb03b99f5e' != '8691a011016e0fba3c2b0b8a26e4c9c722975f1defe42f580ab55a9c97dfccf8'\n- 8d1578e1643b59534f0122a4b798aab069981f7ff9c40e15f52ec5fb03b99f5e\n+ 8691a011016e0fba3c2b0b8a26e4c9c722975f1defe42f580ab55a9c97dfccf8\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\nAssertionError: '038f24a1bb0798ac2c2423167514543a81c1faeebd7c5c3efd3bc841db42c8c2' != '99a44a377de81b704fcc13054924e260927064689112828e9385597a93d65f76'\n- 038f24a1bb0798ac2c2423167514543a81c1faeebd7c5c3efd3bc841db42c8c2\n+ 99a44a377de81b704fcc13054924e260927064689112828e9385597a93d65f76\n\n"}}, "MLDebug737": {"stat": "fail", "details": {"test_invalid_json": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_invalid_json\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: mock(400, 'Invalid JSON')\nActual: mock(400, 'Content-Type header is not application/json')\n", "test_missing_data_key": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 101, in test_missing_data_key\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: mock(400, 'No data key in request')\nActual: mock(400, 'Content-Type header is not application/json')\n", "test_valid_json_data": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 77, in test_valid_json_data\n  File \"__test__.py\", line 20, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 487, in send_error\n    if self.command != 'HEAD' and body:\nAttributeError: 'JsonRequestHandler' object has no attribute 'command'\n"}}, "MLDebug738": {"stat": "fail", "details": {"test_invalid_content_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_invalid_content_type\n  File \"__test__.py\", line 12, in do_POST\nValueError: I/O operation on closed file.\n", "test_valid_json_request": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 81, in test_valid_json_request\n  File \"__test__.py\", line 42, in do_POST\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/http/server.py\", line 519, in send_header\n    if self.request_version != 'HTTP/0.9':\nAttributeError: 'EmailRequestHandler' object has no attribute 'request_version'\n"}}, "MLDebug739": {"stat": "pass", "details": {}}, "MLDebug740": {"stat": "pass", "details": {}}, "MLDebug741": {"stat": "fail", "details": {"test_onpick_function": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_onpick_function\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n", "test_valid_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_valid_input\n  File \"__test__.py\", line 45, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug742": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug743": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug744": {"stat": "pass", "details": {}}, "MLDebug745": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug746": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: False is not true : The plot should have data.\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\nAssertionError: False is not true : The plot should have data.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_3\nAssertionError: False is not true : The plot should have data.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\nAssertionError: False is not true : The plot should have data.\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_5\nAssertionError: False is not true : The plot should have data.\n"}}, "MLDebug747": {"stat": "pass", "details": {}}, "MLDebug748": {"stat": "pass", "details": {}}, "MLDebug749": {"stat": "pass", "details": {}}, "MLDebug750": {"stat": "pass", "details": {}}, "MLDebug751": {"stat": "pass", "details": {}}, "MLDebug752": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug753": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: 0.9999999617867533 != 0.95949 within 5 places (0.04050996178675337 difference)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_2\nAssertionError: 0.020308623525462866 != 0.415415 within 5 places (0.3951063764745371 difference)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_3\nAssertionError: 0.9999999617867533 != 0.959492 within 5 places (0.04050796178675331 difference)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_4\nAssertionError: 0.17271739355356397 != 0.65486 within 5 places (0.48214260644643603 difference)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_5\nAssertionError: 0.9205210486748165 != 0.841253 within 5 places (0.07926804867481652 difference)\n"}}, "MLDebug754": {"stat": "pass", "details": {}}, "MLDebug755": {"stat": "pass", "details": {}}, "MLDebug756": {"stat": "pass", "details": {}}, "MLDebug757": {"stat": "pass", "details": {}}, "MLDebug758": {"stat": "pass", "details": {}}, "MLDebug759": {"stat": "pass", "details": {}}, "MLDebug760": {"stat": "pass", "details": {}}, "MLDebug761": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug762": {"stat": "fail", "details": {"test_default_bin_count": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_default_bin_count\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n", "test_distribution_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_distribution_length\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n", "test_distribution_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_distribution_type\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n", "test_histogram_axes_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_histogram_axes_type\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n", "test_histogram_bin_count": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_histogram_bin_count\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n", "test_plot_distribution": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_plot_distribution\n  File \"__test__.py\", line 18, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug763": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug764": {"stat": "fail", "details": {"ALL": "No module named 'sendgrid'"}}, "MLDebug765": {"stat": "pass", "details": {}}, "MLDebug766": {"stat": "pass", "details": {}}, "MLDebug767": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug768": {"stat": "fail", "details": {"test_non_zero_exit_code": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_non_zero_exit_code\nAssertionError: None != 1\n", "test_random_file_selection": "Traceback (most recent call last):\n  File \"__test__.py\", line 88, in test_random_file_selection\nAssertionError: False is not true : Expected call with valid_dir/script1.bat not found\n", "test_valid_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_valid_input\nAssertionError: None != 0\n"}}, "MLDebug769": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_5\nAssertionError: 1.7888543819998313 != 2.04 within 2 places (0.25114561800016877 difference)\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3805, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"index.pyx\", line 167, in pandas._libs.index.IndexEngine.get_loc\n  File \"index.pyx\", line 196, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Mr. X'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 1121, in __getitem__\n    return self._get_value(key)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/series.py\", line 1237, in _get_value\n    loc = self.index.get_loc(label)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/indexes/base.py\", line 3812, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Mr. X'\n"}}, "MLDebug770": {"stat": "fail", "details": {"test_backup_of_large_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_backup_of_large_file\nAssertionError: -1 != 0\n", "test_successful_execution": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_successful_execution\nAssertionError: -1 != 0\n"}}, "MLDebug771": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\nKeyError: 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_5\nKeyError: 0\n"}}, "MLDebug772": {"stat": "pass", "details": {}}, "MLDebug773": {"stat": "pass", "details": {}}, "MLDebug774": {"stat": "fail", "details": {"test_multiple_bat_files_mixed_results": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 58, in test_multiple_bat_files_mixed_results\nAssertionError: Lists differ: [('file1.bat', <MagicMock name='mock.__enter__().wait()'[179 chars]8'>)] != [('file1.bat', 0), ('file2.bat', 1), ('file3.bat', None)]\n\nFirst differing element 0:\n('file1.bat', <MagicMock name='mock.__enter__().wait()' id='140443026662416'>)\n('file1.bat', 0)\n\n+ [('file1.bat', 0), ('file2.bat', 1), ('file3.bat', None)]\n- [('file1.bat', <MagicMock name='mock.__enter__().wait()' id='140443026662416'>),\n-  ('file2.bat', <MagicMock name='mock.__enter__().wait()' id='140443026734720'>),\n-  ('file3.bat', <MagicMock name='mock.__enter__().wait()' id='140443026807088'>)]\n", "test_single_bat_file_failure": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_single_bat_file_failure\nAssertionError: Lists differ: [('file1.bat', <MagicMock name='Popen().__enter__().wait[22 chars]2'>)] != [('file1.bat', 1)]\n\nFirst differing element 0:\n('file1.bat', <MagicMock name='Popen().__enter__().wait[21 chars]32'>)\n('file1.bat', 1)\n\n- [('file1.bat',\n+ [('file1.bat', 1)]\n?               ++++\n\n-   <MagicMock name='Popen().__enter__().wait()' id='140443026724832'>)]\n", "test_single_bat_file_success": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 36, in test_single_bat_file_success\nAssertionError: Lists differ: [('file1.bat', <MagicMock name='Popen().__enter__().wait[22 chars]2'>)] != [('file1.bat', 0)]\n\nFirst differing element 0:\n('file1.bat', <MagicMock name='Popen().__enter__().wait[21 chars]72'>)\n('file1.bat', 0)\n\n- [('file1.bat',\n+ [('file1.bat', 0)]\n?               ++++\n\n-   <MagicMock name='Popen().__enter__().wait()' id='140443026605872'>)]\n"}}, "MLDebug775": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_1\nAssertionError: {'a': 4, '\\n': 3, 'b': 2, '\\n(': 4, 'abc': 2, ')\\n'[27 chars]': 1} != {'a': 4, ' ': 3, 'b': 2, ' (': 4, 'abc': 2, ') ': 3[32 chars]': 1}\n- {'\\n': 3,\n?   ^^\n\n+ {' ': 3,\n?   ^\n\n-  '\\n(': 4,\n?   ^^\n\n+  ' (': 4,\n?   ^\n\n-  ')\\n': 4,\n?    --   ^\n\n+  ')': 1,\n?       ^\n\n+  ') ': 3,\n   'a': 4,\n   'abc': 2,\n   'b': 2,\n   'c': 1,\n   'def': 1,\n   'ghi': 1} : Expected {'a': 4, ' ': 3, 'b': 2, ' (': 4, 'abc': 2, ') ': 3, 'def': 1, 'ghi': 1, 'c': 1, ')': 1} but got {'a': 4, '\\n': 3, 'b': 2, '\\n(': 4, 'abc': 2, ')\\n': 4, 'def': 1, 'ghi': 1, 'c': 1}\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_2\nAssertionError: {'x': 2, '\\n': 2, 'y': 2, '\\n(': 3, 'xyz': 2, ')\\n'[38 chars]': 1} != {'x': 2, ' ': 2, 'y': 2, ' (': 3, 'xyz': 2, ') ': 2[42 chars]': 1}\n- {'\\n': 2,\n?   ^^\n\n+ {' ': 2,\n?   ^\n\n-  '\\n(': 3,\n?   ^^\n\n+  ' (': 3,\n?   ^\n\n-  ')\\n': 3,\n?    --   ^\n\n+  ')': 1,\n?       ^\n\n+  ') ': 2,\n-  ')\\n(': 1,\n?    ^^\n\n+  ') (': 1,\n?    ^\n\n   'rst': 1,\n   'uvw': 1,\n   'x': 2,\n   'xyz': 2,\n   'y': 2,\n   'z': 1} : Expected {'x': 2, ' ': 2, 'y': 2, ' (': 3, 'xyz': 2, ') ': 2, 'uvw': 1, 'z': 1, 'rst': 1, ') (': 1, ')': 1} but got {'x': 2, '\\n': 2, 'y': 2, '\\n(': 3, 'xyz': 2, ')\\n': 3, 'uvw': 1, 'z': 1, 'rst': 1, ')\\n(': 1}\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_3\nAssertionError: {'1': 1, '\\n': 2, '2': 2, '\\n(': 3, '345': 1, ')\\n([56 chars]': 1} != {'1': 1, ' ': 2, '2': 2, ' (': 3, '345': 1, ') (': [60 chars]': 1}\n- {'\\n': 2,\n?   ^^\n\n+ {' ': 2,\n?   ^\n\n-  '\\n(': 3,\n?   ^^\n\n+  ' (': 3,\n?   ^\n\n-  ')\\n': 3,\n?    --   ^\n\n+  ')': 1,\n?       ^\n\n+  ') ': 2,\n-  ')\\n(': 1,\n?    ^^\n\n+  ') (': 1,\n?    ^\n\n   '1': 1,\n   '2': 2,\n   '234': 1,\n   '3': 1,\n   '345': 1,\n   '4': 1,\n   '678': 1,\n   '901': 1} : Expected {'1': 1, ' ': 2, '2': 2, ' (': 3, '345': 1, ') (': 1, '678': 1, ') ': 2, '3': 1, '901': 1, '4': 1, '234': 1, ')': 1} but got {'1': 1, '\\n': 2, '2': 2, '\\n(': 3, '345': 1, ')\\n(': 1, '678': 1, ')\\n': 3, '3': 1, '901': 1, '4': 1, '234': 1}\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_4\nAssertionError: {'@\\n#\\n($%^)\\n&\\n*\\n(*)_+\\n@\\n(#&)\\n': 1} != {'@ # ($%^) & * (*)_+ @ (#&)': 1}\n- {'@\\n#\\n($%^)\\n&\\n*\\n(*)_+\\n@\\n(#&)\\n': 1}\n+ {'@ # ($%^) & * (*)_+ @ (#&)': 1} : Expected {'@ # ($%^) & * (*)_+ @ (#&)': 1} but got {'@\\n#\\n($%^)\\n&\\n*\\n(*)_+\\n@\\n(#&)\\n': 1}\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_5\nAssertionError: {'apple': 1, '\\n': 1, 'banana': 1, '\\n(': 4, 'cherry': [75 chars]': 1} != {'apple': 1, ' ': 1, 'banana': 1, ' (': 4, 'cherry': 1,[80 chars]': 1}\n- {'\\n': 1,\n?   ^^\n\n+ {' ': 1,\n?   ^\n\n-  '\\n(': 4,\n?   ^^\n\n+  ' (': 4,\n?   ^\n\n-  ')\\n': 4,\n?    --   ^\n\n+  ')': 1,\n?       ^\n\n+  ') ': 3,\n   'apple': 1,\n   'banana': 1,\n   'cherry': 1,\n   'date': 1,\n   'fig': 1,\n   'grape': 1,\n   'kiwi': 1,\n   'lemon': 1,\n   'mango': 1} : Expected {'apple': 1, ' ': 1, 'banana': 1, ' (': 4, 'cherry': 1, ') ': 3, 'date': 1, 'fig': 1, 'grape': 1, 'kiwi': 1, 'lemon': 1, 'mango': 1, ')': 1} but got {'apple': 1, '\\n': 1, 'banana': 1, '\\n(': 4, 'cherry': 1, ')\\n': 4, 'date': 1, 'fig': 1, 'grape': 1, 'kiwi': 1, 'lemon': 1, 'mango': 1}\n"}}, "MLDebug776": {"stat": "pass", "details": {}}, "MLDebug777": {"stat": "pass", "details": {}}, "MLDebug778": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug779": {"stat": "pass", "details": {}}, "MLDebug780": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug781": {"stat": "pass", "details": {}}, "MLDebug782": {"stat": "pass", "details": {}}, "MLDebug783": {"stat": "fail", "details": {"ALL": "No module named 'wordcloud'"}}, "MLDebug784": {"stat": "fail", "details": {"test_categorical_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_categorical_data\nAssertionError: False is not true\n"}}, "MLDebug785": {"stat": "pass", "details": {}}, "MLDebug786": {"stat": "pass", "details": {}}, "MLDebug787": {"stat": "pass", "details": {}}, "MLDebug788": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_2\n  File \"__test__.py\", line 21, in task_func\nsubprocess.CalledProcessError: Command '['/home/jyhuang/anaconda3/envs/MedicalGPT/bin/python', '/tmp/tmpvn_w0b9i/test/script2.py']' returned non-zero exit status 1.\n"}}, "MLDebug789": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\nAssertionError: 0 != 2\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_4\nAssertionError: 0 != 2\n"}}, "MLDebug790": {"stat": "pass", "details": {}}, "MLDebug791": {"stat": "pass", "details": {}}, "MLDebug792": {"stat": "fail", "details": {"test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_3\nAssertionError: 0 != 3\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_case_4\nAssertionError: 0 != 1\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 80, in test_case_5\nAssertionError: ValueError not raised\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 88, in test_case_6\nAssertionError: ValueError not raised\n"}}, "MLDebug793": {"stat": "fail", "details": {"test_bar_chart_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_correct_mean_and_std_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_invalid_sheet_name": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_non_existent_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in setUp\n  File \"__test__.py\", line 44, in create_dummy_excel\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n"}}, "MLDebug794": {"stat": "timeout", "details": {}}, "MLDebug795": {"stat": "pass", "details": {}}, "MLDebug796": {"stat": "pass", "details": {}}, "MLDebug797": {"stat": "pass", "details": {}}, "MLDebug798": {"stat": "pass", "details": {}}, "MLDebug799": {"stat": "pass", "details": {}}, "MLDebug800": {"stat": "fail", "details": {"ALL": "No module named 'docx'"}}, "MLDebug801": {"stat": "pass", "details": {}}, "MLDebug802": {"stat": "fail", "details": {"ALL": "No module named 'openpyxl'"}}, "MLDebug803": {"stat": "pass", "details": {}}, "MLDebug804": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 37)"}}, "MLDebug805": {"stat": "pass", "details": {}}, "MLDebug806": {"stat": "fail", "details": {"ALL": "No module named 'textblob'"}}, "MLDebug807": {"stat": "pass", "details": {}}, "MLDebug808": {"stat": "pass", "details": {}}, "MLDebug809": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 32, in test_case_1\nAssertionError: 100 != 1\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_2\nAssertionError: 0.1 != 10\n"}}, "MLDebug810": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\nAssertionError: {'London': 72816, 'New York': 367942, 'Sydn[43 chars]7288} != {'New York': 72816, 'London': 367942, 'Beij[43 chars]7288}\n- {'Beijing': 267288,\n+ {'Beijing': 869251,\n-  'London': 72816,\n?              ---\n\n+  'London': 367942,\n?            ++ ++\n\n-  'New York': 367942,\n?              ^ ----\n\n+  'New York': 72816,\n?              ^^^^\n\n-  'Sydney': 869251,\n+  'Sydney': 267288,\n   'Tokyo': 323344}\n"}}, "MLDebug811": {"stat": "pass", "details": {}}, "MLDebug812": {"stat": "pass", "details": {}}, "MLDebug813": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 25)"}}, "MLDebug814": {"stat": "pass", "details": {}}, "MLDebug815": {"stat": "pass", "details": {}}, "MLDebug816": {"stat": "fail", "details": {"test_nested_directories": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_nested_directories\nAssertionError: '/tmp/tmp76mnk176/test/nested/nested_file_with_target.json' unexpectedly found in ['/tmp/tmp76mnk176/test/file_with_target_2.json', '/tmp/tmp76mnk176/test/file_with_target_1.json', '/tmp/tmp76mnk176/test/nested/nested_file_with_target.json'] : The file in the nested directory containing the target string was found.\n", "test_with_target_string": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_with_target_string\nAssertionError: True is not false : Not all expected files with target string were found.\n"}}, "MLDebug817": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug818": {"stat": "pass", "details": {}}, "MLDebug819": {"stat": "fail", "details": {"test_empty_excel_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_file_with_different_data_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_invalid_column_name": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_non_existent_file": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in setUp\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/generic.py\", line 2417, in to_excel\n    formatter.write(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/formats/excel.py\", line 943, in write\n    writer = ExcelWriter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py\", line 57, in __init__\n    from openpyxl.workbook import Workbook\nModuleNotFoundError: No module named 'openpyxl'\n"}}, "MLDebug820": {"stat": "pass", "details": {}}, "MLDebug821": {"stat": "fail", "details": {"ALL": "No module named 'flask_mail'"}}, "MLDebug822": {"stat": "pass", "details": {}}, "MLDebug823": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_1\n  File \"__test__.py\", line 29, in task_func\nAttributeError: module 'seaborn' has no attribute 'get_axes'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_2\n  File \"__test__.py\", line 29, in task_func\nAttributeError: module 'seaborn' has no attribute 'get_axes'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_case_3\n  File \"__test__.py\", line 29, in task_func\nAttributeError: module 'seaborn' has no attribute 'get_axes'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_case_4\n  File \"__test__.py\", line 29, in task_func\nAttributeError: module 'seaborn' has no attribute 'get_axes'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 111, in test_case_5\n  File \"__test__.py\", line 29, in task_func\nAttributeError: module 'seaborn' has no attribute 'get_axes'\n"}}, "MLDebug824": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug825": {"stat": "fail", "details": {"ALL": "No module named 'tensorflow'"}}, "MLDebug826": {"stat": "pass", "details": {}}, "MLDebug827": {"stat": "pass", "details": {}}, "MLDebug828": {"stat": "pass", "details": {}}, "MLDebug829": {"stat": "fail", "details": {"test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_normal_functionality\nAssertionError: False is not true : The arrays should be equal\n"}}, "MLDebug830": {"stat": "fail", "details": {"test_histogram_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_histogram_labels\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'histogram_axe' is not defined\n", "test_histogram_output_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_histogram_output_type\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'histogram_axe' is not defined\n", "test_normal_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_normal_functionality\n  File \"__test__.py\", line 34, in task_func\nNameError: name 'histogram_axe' is not defined\n"}}, "MLDebug831": {"stat": "pass", "details": {}}, "MLDebug832": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 153, in test_case_8\nAssertionError: False is not true\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 137, in test_case_7\n  File \"__test__.py\", line 12, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/axisgrid.py\", line 2119, in pairplot\n    grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/seaborn/axisgrid.py\", line 1272, in __init__\n    raise ValueError(\"No variables found for grid columns.\")\nValueError: No variables found for grid columns.\n"}}, "MLDebug833": {"stat": "pass", "details": {}}, "MLDebug834": {"stat": "pass", "details": {}}, "MLDebug835": {"stat": "pass", "details": {}}, "MLDebug836": {"stat": "pass", "details": {}}, "MLDebug837": {"stat": "pass", "details": {}}, "MLDebug838": {"stat": "pass", "details": {}}, "MLDebug839": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 90, in test_case_6\n  File \"__test__.py\", line 7, in task_func\nIndexError: tuple index out of range\n"}}, "MLDebug840": {"stat": "pass", "details": {}}, "MLDebug841": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_4\n  File \"__test__.py\", line 19, in task_func\nValueError: Matrix P columns (4) must match first dimension of tensor T (5)\n"}}, "MLDebug842": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_1\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4787, in scatter\n    raise ValueError(\"x and y must be the same size\")\nValueError: x and y must be the same size\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_2\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4787, in scatter\n    raise ValueError(\"x and y must be the same size\")\nValueError: x and y must be the same size\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_3\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4787, in scatter\n    raise ValueError(\"x and y must be the same size\")\nValueError: x and y must be the same size\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_case_4\n  File \"__test__.py\", line 22, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4787, in scatter\n    raise ValueError(\"x and y must be the same size\")\nValueError: x and y must be the same size\n"}}, "MLDebug843": {"stat": "pass", "details": {}}, "MLDebug844": {"stat": "pass", "details": {}}, "MLDebug845": {"stat": "pass", "details": {}}, "MLDebug846": {"stat": "pass", "details": {}}, "MLDebug847": {"stat": "fail", "details": {"test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_10\nAssertionError: 11 != 9\n", "test_case_12": "Traceback (most recent call last):\n  File \"__test__.py\", line 113, in test_case_12\n  File \"__test__.py\", line 19, in task_func\nTypeError: All elements in the nested list should be integers.\n"}}, "MLDebug848": {"stat": "pass", "details": {}}, "MLDebug849": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_1\nTypeError: object of type 'Axes' has no len()\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_2\nTypeError: object of type 'Axes' has no len()\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_3\nTypeError: object of type 'Axes' has no len()\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_case_4\nTypeError: object of type 'Axes' has no len()\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 92, in test_case_5\nTypeError: object of type 'Axes' has no len()\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_case_6\nTypeError: object of type 'Axes' has no len()\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 114, in test_case_7\nTypeError: object of type 'Axes' has no len()\n"}}, "MLDebug850": {"stat": "pass", "details": {}}, "MLDebug851": {"stat": "pass", "details": {}}, "MLDebug852": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_6\n  File \"__test__.py\", line 44, in _test_helper\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Count\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Count\") values are different (40.0 %)\n[index]: [A, B, C, D, F]\n[left]:  [0, 0, 1, 0, 0]\n[right]: [1, 1, 1, 0, 0]\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_7\n  File \"__test__.py\", line 44, in _test_helper\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Count\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Count\") values are different (20.0 %)\n[index]: [A, B, C, D, F]\n[left]:  [0, 0, 0, 0, 0]\n[right]: [0, 1, 0, 0, 0]\n"}}, "MLDebug853": {"stat": "pass", "details": {}}, "MLDebug854": {"stat": "fail", "details": {"test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_7\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 326, in assert_index_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nDataFrame.index values are different (100.0 %)\n[left]:  Index(['!kiwi', 'kiwi', 'kiwi!'], dtype='object')\n[right]: Index(['kiwi!', '!kiwi', 'kiwi'], dtype='object')\nAt positional index 0, first diff: !kiwi != kiwi!\n"}}, "MLDebug855": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\nTypeError: 'NoneType' object is not iterable\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\nTypeError: 'NoneType' object is not iterable\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_5\nTypeError: 'NoneType' object is not iterable\n"}}, "MLDebug856": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_2\n  File \"__test__.py\", line 9, in task_func\nValueError: Both n_walks and n_steps must be greater than 0.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_3\n  File \"__test__.py\", line 9, in task_func\nValueError: Both n_walks and n_steps must be greater than 0.\n"}}, "MLDebug857": {"stat": "pass", "details": {}}, "MLDebug858": {"stat": "fail", "details": {"test_custom_country_codes": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_custom_country_codes\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n", "test_histogram_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_histogram_values\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n", "test_valid_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_valid_data\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug859": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 129, in test_case_6\n  File \"__test__.py\", line 9, in task_func\nTypeError: All elements must be numeric\n"}}, "MLDebug860": {"stat": "pass", "details": {}}, "MLDebug861": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_6\n  File \"__test__.py\", line 93, in _test_dataframe\nAssertionError: False is not true\n"}}, "MLDebug862": {"stat": "pass", "details": {}}, "MLDebug863": {"stat": "pass", "details": {}}, "MLDebug864": {"stat": "pass", "details": {}}, "MLDebug865": {"stat": "pass", "details": {}}, "MLDebug866": {"stat": "pass", "details": {}}, "MLDebug867": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_1\n  File \"__test__.py\", line 102, in _common_assertions\nAssertionError: Lists differ: ['America/Los_Angeles', 'Europe/Paris', 'As[27 chars]ney'] != ['UTC', 'America/Los_Angeles', 'Europe/Pari[34 chars]ney']\n\nFirst differing element 0:\n'America/Los_Angeles'\n'UTC'\n\nSecond list contains 1 additional elements.\nFirst extra element 4:\n'Australia/Sydney'\n\n- ['America/Los_Angeles', 'Europe/Paris', 'Asia/Kolkata', 'Australia/Sydney']\n+ ['UTC',\n+  'America/Los_Angeles',\n+  'Europe/Paris',\n+  'Asia/Kolkata',\n+  'Australia/Sydney']\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_case_2\n  File \"__test__.py\", line 102, in _common_assertions\nAssertionError: Lists differ: ['America/Los_Angeles', 'Europe/Paris', 'As[27 chars]ney'] != ['UTC', 'America/Los_Angeles', 'Europe/Pari[34 chars]ney']\n\nFirst differing element 0:\n'America/Los_Angeles'\n'UTC'\n\nSecond list contains 1 additional elements.\nFirst extra element 4:\n'Australia/Sydney'\n\n- ['America/Los_Angeles', 'Europe/Paris', 'Asia/Kolkata', 'Australia/Sydney']\n+ ['UTC',\n+  'America/Los_Angeles',\n+  'Europe/Paris',\n+  'Asia/Kolkata',\n+  'Australia/Sydney']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_3\n  File \"__test__.py\", line 102, in _common_assertions\nAssertionError: Lists differ: ['America/Los_Angeles', 'Europe/Paris', 'As[27 chars]ney'] != ['UTC', 'America/Los_Angeles', 'Europe/Pari[34 chars]ney']\n\nFirst differing element 0:\n'America/Los_Angeles'\n'UTC'\n\nSecond list contains 1 additional elements.\nFirst extra element 4:\n'Australia/Sydney'\n\n- ['America/Los_Angeles', 'Europe/Paris', 'Asia/Kolkata', 'Australia/Sydney']\n+ ['UTC',\n+  'America/Los_Angeles',\n+  'Europe/Paris',\n+  'Asia/Kolkata',\n+  'Australia/Sydney']\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_case_4\n  File \"__test__.py\", line 102, in _common_assertions\nAssertionError: Lists differ: ['America/Los_Angeles', 'Europe/Paris', 'As[27 chars]ney'] != ['UTC', 'America/Los_Angeles', 'Europe/Pari[34 chars]ney']\n\nFirst differing element 0:\n'America/Los_Angeles'\n'UTC'\n\nSecond list contains 1 additional elements.\nFirst extra element 4:\n'Australia/Sydney'\n\n- ['America/Los_Angeles', 'Europe/Paris', 'Asia/Kolkata', 'Australia/Sydney']\n+ ['UTC',\n+  'America/Los_Angeles',\n+  'Europe/Paris',\n+  'Asia/Kolkata',\n+  'Australia/Sydney']\n"}}, "MLDebug868": {"stat": "fail", "details": {"test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 117, in test_case_8\nAssertionError: False is not true\n"}}, "MLDebug869": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 77, in test_case_5\nAssertionError: 101 != 100\n"}}, "MLDebug870": {"stat": "pass", "details": {}}, "MLDebug871": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_1\n  File \"__test__.py\", line 79, in assert_function_output\nTypeError: 'Axes' object is not subscriptable\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_2\n  File \"__test__.py\", line 79, in assert_function_output\nTypeError: 'Axes' object is not subscriptable\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_4\n  File \"__test__.py\", line 79, in assert_function_output\nTypeError: 'Axes' object is not subscriptable\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_5\n  File \"__test__.py\", line 79, in assert_function_output\nTypeError: 'Axes' object is not subscriptable\n"}}, "MLDebug872": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_2\nAssertionError: ValueError not raised\n"}}, "MLDebug873": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_1\nAssertionError: Timestamp('2021-09-10 00:00:00') != datetime.datetime(2021, 9, 10, 16, 0)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_2\nAssertionError: Timestamp('2025-01-29 00:00:00') != datetime.datetime(2025, 1, 29, 7, 52, 25, 652288)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_3\nAssertionError: Timestamp('2025-01-02 00:00:00') != datetime.datetime(2025, 1, 2, 7, 52, 25, 652826)\n"}}, "MLDebug874": {"stat": "pass", "details": {}}, "MLDebug875": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug876": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_case_4\n  File \"__test__.py\", line 6, in task_func\nValueError: Number of days must be a non-negative integer\n"}}, "MLDebug877": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_1\n  File \"__test__.py\", line 101, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_2\n  File \"__test__.py\", line 101, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_3\n  File \"__test__.py\", line 101, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_4\n  File \"__test__.py\", line 101, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_case_5\n  File \"__test__.py\", line 101, in validate_output\nAssertionError: dtype('O') != 'datetime64[ns]'\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_6\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of DataFrame.iloc[:, 1] (column name=\"Datetime\") are different\n\nAttribute \"dtype\" are different\n[left]:  object\n[right]: datetime64[ns]\n"}}, "MLDebug878": {"stat": "fail", "details": {"ALL": "No module named 'xlwt'"}}, "MLDebug879": {"stat": "fail", "details": {"ALL": "No module named 'xlwt'"}}, "MLDebug880": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1059, in assert_series_equal\n    assert_extension_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 794, in assert_extension_array_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Date\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Date\") values are different (100.0 %)\n[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]\n[left]:  [1737618749759933000, 1737618749759933000, 1737618749759933000, 1737618749759933000, 1737618749759933000, 1737705149759933000, 1737705149759933000, 1737705149759933000, 1737705149759933000, 1737705149759933000, 1737791549759933000, 1737791549759933000, 1737791549759933000, 1737791549759933000, 1737791549759933000, 1737877949759933000, 1737877949759933000, 1737877949759933000, 1737877949759933000, 1737877949759933000, 1737964349759933000, 1737964349759933000, 1737964349759933000, 1737964349759933000, 1737964349759933000, 1738050749759933000, 1738050749759933000, 1738050749759933000, 1738050749759933000, 1738050749759933000, 1738137149759933000, 1738137149759933000, 1738137149759933000, 1738137149759933000, 1738137149759933000, 1738223549759933000, 1738223549759933000, 1738223549759933000, 1738223549759933000, 1738223549759933000, 1738309949759933000, 1738309949759933000, 1738309949759933000, 1738309949759933000, 1738309949759933000, 1738396349759933000, 1738396349759933000, 1738396349759933000, 1738396349759933000, 1738396349759933000]\n[right]: [1737618749805598000, 1737618749805598000, 1737618749805598000, 1737618749805598000, 1737618749805598000, 1737705149805598000, 1737705149805598000, 1737705149805598000, 1737705149805598000, 1737705149805598000, 1737791549805598000, 1737791549805598000, 1737791549805598000, 1737791549805598000, 1737791549805598000, 1737877949805598000, 1737877949805598000, 1737877949805598000, 1737877949805598000, 1737877949805598000, 1737964349805598000, 1737964349805598000, 1737964349805598000, 1737964349805598000, 1737964349805598000, 1738050749805598000, 1738050749805598000, 1738050749805598000, 1738050749805598000, 1738050749805598000, 1738137149805598000, 1738137149805598000, 1738137149805598000, 1738137149805598000, 1738137149805598000, 1738223549805598000, 1738223549805598000, 1738223549805598000, 1738223549805598000, 1738223549805598000, 1738309949805598000, 1738309949805598000, 1738309949805598000, 1738309949805598000, 1738309949805598000, 1738396349805598000, 1738396349805598000, 1738396349805598000, 1738396349805598000, 1738396349805598000]\n"}}, "MLDebug881": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 104, in test_case_6\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 326, in assert_index_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nDataFrame.index values are different (100.0 %)\n[left]:  DatetimeIndex(['2025-01-26 07:52:30.394598', '2025-01-27 07:52:30.394598',\n               '2025-01-28 07:52:30.394598', '2025-01-29 07:52:30.394598',\n               '2025-01-30 07:52:30.394598', '2025-01-31 07:52:30.394598',\n               '2025-02-01 07:52:30.394598'],\n              dtype='datetime64[ns]', freq='D')\n[right]: DatetimeIndex(['2025-01-26 07:52:30.394829', '2025-01-27 07:52:30.394829',\n               '2025-01-28 07:52:30.394829', '2025-01-29 07:52:30.394829',\n               '2025-01-30 07:52:30.394829', '2025-01-31 07:52:30.394829',\n               '2025-02-01 07:52:30.394829'],\n              dtype='datetime64[ns]', freq='D')\nAt positional index 0, first diff: 2025-01-26T07:52:30.394598000 != 2025-01-26T07:52:30.394829000\n"}}, "MLDebug882": {"stat": "pass", "details": {}}, "MLDebug883": {"stat": "pass", "details": {}}, "MLDebug884": {"stat": "fail", "details": {"test_difference_report": "Traceback (most recent call last):\n  File \"__test__.py\", line 110, in test_difference_report\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/frame.py\", line 10374, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 916, in apply\n    return self.apply_standard()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1063, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/core/apply.py\", line 1081, in apply_series_generator\n    results[i] = self.func(v, *self.args, **self.kwargs)\n  File \"__test__.py\", line 110, in <lambda>\nValueError: setting an array element with a sequence\n"}}, "MLDebug885": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_1\nAssertionError: Lists differ: [] != [0, 0]\n\nSecond list contains 2 additional elements.\nFirst extra element 0:\n0\n\n- []\n+ [0, 0]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_2\nAssertionError: 1 != 0\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 70, in test_case_3\nAssertionError: 0 != 5\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_4\nValueError: max() arg is an empty sequence\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_case_5\nValueError: max() arg is an empty sequence\n"}}, "MLDebug886": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 99, in test_case_4\nAssertionError: Exception not raised\n"}}, "MLDebug887": {"stat": "pass", "details": {}}, "MLDebug888": {"stat": "pass", "details": {}}, "MLDebug889": {"stat": "pass", "details": {}}, "MLDebug890": {"stat": "pass", "details": {}}, "MLDebug891": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_1\nAssertionError: 1.0 != 0.816496580927726 within 7 places (0.18350341907227397 difference)\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_2\nAssertionError: 1.0 != 0.816496580927726 within 7 places (0.18350341907227397 difference)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_3\nAssertionError: 1.0 != 0.816496580927726 within 7 places (0.18350341907227397 difference)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 91, in test_case_4\nAssertionError: Lists differ: [1.0] != [1.0, 0.0]\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n0.0\n\n- [1.0]\n+ [1.0, 0.0]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_case_5\nAssertionError: Lists differ: [0.0] != [0.0, 0.0]\n\nSecond list contains 1 additional elements.\nFirst extra element 1:\n0.0\n\n- [0.0]\n+ [0.0, 0.0]\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 125, in test_case_8\nAssertionError: 2.0 != 1.632993161855452 within 7 places (0.36700683814454793 difference)\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 133, in test_case_9\nAssertionError: 2.0 != 1.632993161855452 within 7 places (0.36700683814454793 difference)\n"}}, "MLDebug892": {"stat": "pass", "details": {}}, "MLDebug893": {"stat": "pass", "details": {}}, "MLDebug894": {"stat": "pass", "details": {}}, "MLDebug895": {"stat": "pass", "details": {}}, "MLDebug896": {"stat": "pass", "details": {}}, "MLDebug897": {"stat": "pass", "details": {}}, "MLDebug898": {"stat": "pass", "details": {}}, "MLDebug899": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_1\nAssertionError: Counter({(2, 1): 3, (1, 1): 1, (3, 3): 1, (4, 3): 1}) != Counter({(2, 1): 3})\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_case_2\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1, (5, 5): 1, (6, 6): 1}) != Counter()\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_4\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (40, 40[27 chars]: 1}) != Counter()\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_case_5\nAssertionError: Counter({(5, 5): 4, (1, 1): 1, (2, 2): 1, (3, 3): 1, (4, 4): 1}) != Counter({(5, 5): 4})\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_case_6\nAssertionError: Counter({(3, 3): 3, (1, 1): 1, (2, 2): 1, (4, 4): 1, (5, 5): 1, (6, 6): 1}) != Counter({(3, 3): 3})\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_case_7\nAssertionError: Counter({(1, 1): 1, (2, 2): 1, (3, 3): 1, (10, 10[66 chars]: 1}) != Counter()\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_3\n  File \"__test__.py\", line 15, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/base.py\", line 1473, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 1473, in fit\n    self._check_params_vs_input(X)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 1414, in _check_params_vs_input\n    super()._check_params_vs_input(X, default_n_init=10)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py\", line 878, in _check_params_vs_input\n    raise ValueError(\nValueError: n_samples=1 should be >= n_clusters=3.\n"}}, "MLDebug900": {"stat": "pass", "details": {}}, "MLDebug901": {"stat": "pass", "details": {}}, "MLDebug902": {"stat": "fail", "details": {"ALL": "No module named 'cryptography'"}}, "MLDebug903": {"stat": "pass", "details": {}}, "MLDebug904": {"stat": "pass", "details": {}}, "MLDebug905": {"stat": "pass", "details": {}}, "MLDebug906": {"stat": "pass", "details": {}}, "MLDebug907": {"stat": "pass", "details": {}}, "MLDebug908": {"stat": "fail", "details": {"test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 100, in test_case_6\n  File \"__test__.py\", line 9, in task_func\nValueError: Input list cannot be empty\n"}}, "MLDebug909": {"stat": "fail", "details": {"test_module_path_in_sys_path": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_module_path_in_sys_path\nAssertionError: False is not true\n", "test_no_duplicates_in_sys_path": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_no_duplicates_in_sys_path\nAssertionError: 0 != 1\n"}}, "MLDebug910": {"stat": "pass", "details": {}}, "MLDebug911": {"stat": "fail", "details": {"test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 936, in assert_series_equal\n    raise_assert_detail(obj, \"Series length are different\", msg1, msg2)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nSeries length are different\n[left]:  3, Index(['Sentence 1', 'Sentence 2', 'Sentence 3'], dtype='object')\n[right]: 1, Index(['Sentence 1'], dtype='object')\n"}}, "MLDebug912": {"stat": "pass", "details": {}}, "MLDebug913": {"stat": "pass", "details": {}}, "MLDebug914": {"stat": "pass", "details": {}}, "MLDebug915": {"stat": "pass", "details": {}}, "MLDebug916": {"stat": "pass", "details": {}}, "MLDebug917": {"stat": "pass", "details": {}}, "MLDebug918": {"stat": "pass", "details": {}}, "MLDebug919": {"stat": "pass", "details": {}}, "MLDebug920": {"stat": "pass", "details": {}}, "MLDebug921": {"stat": "pass", "details": {}}, "MLDebug922": {"stat": "pass", "details": {}}, "MLDebug923": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_1\nAssertionError: Lists differ: [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0] != [1, 2, 3, 4, 5]\n\nFirst differing element 0:\n0.0\n1\n\nFirst list contains 2 additional elements.\nFirst extra element 5:\n5.0\n\n- [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n+ [1, 2, 3, 4, 5]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_2\nAssertionError: Lists differ: [4.4, 4.6000000000000005, 4.800000000000001, 5.0, 5.2, 5.4, 5.6000000000000005] != [5]\n\nFirst differing element 0:\n4.4\n5\n\nFirst list contains 6 additional elements.\nFirst extra element 1:\n4.6000000000000005\n\n- [4.4, 4.6000000000000005, 4.800000000000001, 5.0, 5.2, 5.4, 5.6000000000000005]\n+ [5]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_3\nAssertionError: Lists differ: [6.4, 6.6000000000000005, 6.800000000000001, 7.0, 7.2, 7.4, 7.6000000000000005] != [7]\n\nFirst differing element 0:\n6.4\n7\n\nFirst list contains 6 additional elements.\nFirst extra element 1:\n6.6000000000000005\n\n- [6.4, 6.6000000000000005, 6.800000000000001, 7.0, 7.2, 7.4, 7.6000000000000005]\n+ [7]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_4\nAssertionError: Lists differ: [0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0] != [1, 2, 4, 8, 10]\n\nFirst differing element 0:\n0.0\n1\n\nFirst list contains 2 additional elements.\nFirst extra element 5:\n10.0\n\n- [0.0, 2.0, 4.0, 6.0, 8.0, 10.0, 12.0]\n+ [1, 2, 4, 8, 10]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_5\nAssertionError: Lists differ: [-20.0, 0.0, 20.0, 40.0, 60.0, 80.0, 100.0, 120.0, 140.0, 160.0] != [1, 50, 100, 150]\n\nFirst differing element 0:\n-20.0\n1\n\nFirst list contains 6 additional elements.\nFirst extra element 4:\n60.0\n\n- [-20.0, 0.0, 20.0, 40.0, 60.0, 80.0, 100.0, 120.0, 140.0, 160.0]\n+ [1, 50, 100, 150]\n"}}, "MLDebug924": {"stat": "pass", "details": {}}, "MLDebug925": {"stat": "pass", "details": {}}, "MLDebug926": {"stat": "pass", "details": {}}, "MLDebug927": {"stat": "pass", "details": {}}, "MLDebug928": {"stat": "fail", "details": {"test_statistics_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_statistics_values\nAssertionError: 0.01933205582232549 != 0.4903 within 3 places (0.4709679441776745 difference)\n"}}, "MLDebug929": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_case_5\nAssertionError: False is not true\n"}}, "MLDebug930": {"stat": "pass", "details": {}}, "MLDebug931": {"stat": "pass", "details": {}}, "MLDebug932": {"stat": "pass", "details": {}}, "MLDebug933": {"stat": "pass", "details": {}}, "MLDebug934": {"stat": "fail", "details": {"ALL": "No module named 'Crypto'"}}, "MLDebug935": {"stat": "fail", "details": {"test_hashing_of_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 59, in test_hashing_of_content\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_return_type": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 41, in test_return_type\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_valid_signature": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 48, in test_valid_signature\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n", "test_verification_error_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 78, in test_verification_error_handling\n  File \"__test__.py\", line 21, in task_func\nTypeError: object supporting the buffer API required\n"}}, "MLDebug936": {"stat": "fail", "details": {"ALL": "No module named 'cryptography'"}}, "MLDebug937": {"stat": "fail", "details": {"ALL": "No module named 'wikipedia'"}}, "MLDebug938": {"stat": "fail", "details": {"ALL": "No module named 'pyquery'"}}, "MLDebug939": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Normal'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_1\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0    Normal\nName: Category, dtype: object\n", "test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Hot'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 47, in test_case_2\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0        Hot\n1        Hot\n2     Normal\n3       Cold\n4       Cold\n5       Cold\n6        Hot\n7        Hot\n8        Hot\n9     Normal\n10      Cold\n11       Hot\n12      Cold\n13       Hot\n14       Hot\n15      Cold\n16       Hot\n17    Normal\n18      Cold\n19       Hot\n20      Cold\n21      Cold\n22      Cold\n23       Hot\nName: Category, dtype: object\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Normal'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_3\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0      Normal\n1        Cold\n2      Normal\n3         Hot\n4         Hot\n        ...  \n115    Normal\n116      Cold\n117    Normal\n118    Normal\n119    Normal\nName: Category, Length: 120, dtype: object\n", "test_case_4": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Cold'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 61, in test_case_4\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0       Cold\n1     Normal\n2        Hot\n3        Hot\n4        Hot\n5       Cold\n6       Cold\n7        Hot\n8       Cold\n9     Normal\n10      Cold\n11    Normal\n12      Cold\n13       Hot\n14      Cold\n15       Hot\n16      Cold\n17       Hot\n18       Hot\n19      Cold\n20    Normal\n21       Hot\n22       Hot\n23      Cold\nName: Category, dtype: object\n", "test_case_5": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4618, in _parse_scatter_color_args\n    colors = mcolors.to_rgba_array(c)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in to_rgba_array\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 512, in <listcomp>\n    rgba = np.array([to_rgba(cc) for cc in c])\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 314, in to_rgba\n    rgba = _to_rgba_no_colorcycle(c, alpha)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/colors.py\", line 391, in _to_rgba_no_colorcycle\n    raise ValueError(f\"Invalid RGBA argument: {orig_c!r}\")\nValueError: Invalid RGBA argument: 'Cold'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_5\n  File \"__test__.py\", line 21, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/pyplot.py\", line 3903, in scatter\n    __ret = gca().scatter(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/__init__.py\", line 1473, in inner\n    return func(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4805, in scatter\n    self._parse_scatter_color_args(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/matplotlib/axes/_axes.py\", line 4627, in _parse_scatter_color_args\n    raise ValueError(\nValueError: 'c' argument must be a color, a sequence of colors, or a sequence of numbers, not 0       Cold\n1       Cold\n2     Normal\n3        Hot\n4     Normal\n5     Normal\n6     Normal\n7     Normal\n8     Normal\n9     Normal\n10       Hot\n11       Hot\n12       Hot\n13      Cold\n14      Cold\n15       Hot\n16    Normal\n17      Cold\n18      Cold\n19    Normal\n20      Cold\n21    Normal\n22      Cold\n23    Normal\nName: Category, dtype: object\n"}}, "MLDebug940": {"stat": "pass", "details": {}}, "MLDebug941": {"stat": "fail", "details": {"test_dataframe_content": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 76, in test_dataframe_content\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 920, in assert_called_with\n    raise AssertionError(error_message)\nAssertionError: expected call not found.\nExpected: read_csv('./output/traffic_data.csv')\nActual: not called.\n", "test_directory_creation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 90, in test_directory_creation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: makedirs('./output')\nActual: makedirs('./output', exist_ok=True)\n", "test_plot_generation": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 95, in test_plot_generation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 898, in assert_called\n    raise AssertionError(msg)\nAssertionError: Expected 'show' to have been called.\n"}}, "MLDebug942": {"stat": "fail", "details": {"test_backup_file_creation": "Traceback (most recent call last):\n  File \"__test__.py\", line 96, in test_backup_file_creation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 941, in assert_called_once_with\n    return self.assert_called_with(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: copy('./output/weather_data.csv', './output/backup/')\nActual: copy('./output/weather_data.csv', './output/backup')\n", "test_task_func_copies_to_backup_directory": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 76, in test_task_func_copies_to_backup_directory\nAssertionError: 'output/backup' != 'output'\n- output/backup\n+ output\n : The backup directory path does not match the expected directory path.\n"}}, "MLDebug943": {"stat": "pass", "details": {}}, "MLDebug944": {"stat": "pass", "details": {}}, "MLDebug945": {"stat": "pass", "details": {}}, "MLDebug946": {"stat": "pass", "details": {}}, "MLDebug947": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 51, in test_case_2\nAssertionError: None != '/mock_dir/access.log.1'\n", "test_case_3": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 60, in test_case_3\nAssertionError: None != '/mock_dir/access.log.123'\n"}}, "MLDebug948": {"stat": "pass", "details": {}}, "MLDebug949": {"stat": "pass", "details": {}}, "MLDebug950": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 21)"}}, "MLDebug951": {"stat": "fail", "details": {"test_compilation_failure": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 39, in test_compilation_failure\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nsubprocess.CalledProcessError: Command '['g++']' returned non-zero exit status 1.\n", "test_compiler_not_found": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_compiler_not_found\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nFileNotFoundError\n", "test_empty_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 49, in test_empty_file\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/subprocess.py\", line 369, in check_call\n    raise CalledProcessError(retcode, cmd)\nsubprocess.CalledProcessError: Command '['g++', './empty_file.cpp', '-o', 'example']' returned non-zero exit status 1.\n", "test_logging_output": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 54, in test_logging_output\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1114, in __call__\n    return self._mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1118, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1173, in _execute_mock_call\n    raise effect\nFileNotFoundError\n"}}, "MLDebug952": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1067, in assert_series_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"0\") are different\n\nDataFrame.iloc[:, 0] (column name=\"0\") values are different (100.0 %)\n[index]: [0, 1]\n[left]:  [-0.7071067811865476, 0.7071067811865476]\n[right]: [-1.0, 1.0]\nAt positional index 0, first diff: -0.7071067811865476 != -1.0\n"}}, "MLDebug953": {"stat": "pass", "details": {}}, "MLDebug954": {"stat": "pass", "details": {}}, "MLDebug955": {"stat": "pass", "details": {}}, "MLDebug956": {"stat": "fail", "details": {"test_more_plots_than_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 61, in test_more_plots_than_data\nAssertionError: False is not true\n"}}, "MLDebug957": {"stat": "pass", "details": {}}, "MLDebug958": {"stat": "pass", "details": {}}, "MLDebug959": {"stat": "pass", "details": {}}, "MLDebug960": {"stat": "pass", "details": {}}, "MLDebug961": {"stat": "pass", "details": {}}, "MLDebug962": {"stat": "pass", "details": {}}, "MLDebug963": {"stat": "pass", "details": {}}, "MLDebug964": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_case_1\nAssertionError: Tuples differ: (10, 18) != (6, 30)\n\nFirst differing element 0:\n10\n6\n\n- (10, 18)\n+ (6, 30)\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_case_3\nAssertionError: Tuples differ: (8, 15) != (20, 6)\n\nFirst differing element 0:\n8\n20\n\n- (8, 15)\n+ (20, 6)\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_4\nAssertionError: Tuples differ: (18, 10) != (6, 30)\n\nFirst differing element 0:\n18\n6\n\n- (18, 10)\n+ (6, 30)\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_5\nAssertionError: Tuples differ: (7, 16) != (56, 2)\n\nFirst differing element 0:\n7\n56\n\n- (7, 16)\n+ (56, 2)\n"}}, "MLDebug965": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: False is not true\n"}}, "MLDebug966": {"stat": "pass", "details": {}}, "MLDebug967": {"stat": "pass", "details": {}}, "MLDebug968": {"stat": "pass", "details": {}}, "MLDebug969": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug970": {"stat": "pass", "details": {}}, "MLDebug971": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_2\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_3\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_case_4\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_case_5\n  File \"__test__.py\", line 32, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug972": {"stat": "pass", "details": {}}, "MLDebug973": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"1\") are different\n\nDataFrame.iloc[:, 0] (column name=\"1\") values are different (50.0 %)\n[index]: [1, 2]\n[left]:  [3, 3]\n[right]: [2, 3]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 94, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 997, in assert_series_equal\n    assert_numpy_array_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 690, in assert_numpy_array_equal\n    _raise(left, right, err_msg)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 684, in _raise\n    raise_assert_detail(obj, msg, left, right, index_values=index_values)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"1\") are different\n\nDataFrame.iloc[:, 0] (column name=\"1\") values are different (100.0 %)\n[index]: [1]\n[left]:  [3]\n[right]: [1]\n"}}, "MLDebug974": {"stat": "pass", "details": {}}, "MLDebug975": {"stat": "pass", "details": {}}, "MLDebug976": {"stat": "pass", "details": {}}, "MLDebug977": {"stat": "pass", "details": {}}, "MLDebug978": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_1\nAssertionError: -97358022 not greater than 0\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_2\nAssertionError: -97340022 not greater than 0\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_4\nAssertionError: 863999 not less than 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_case_5\nAssertionError: -97377822 not greater than 0\n"}}, "MLDebug979": {"stat": "pass", "details": {}}, "MLDebug980": {"stat": "pass", "details": {}}, "MLDebug981": {"stat": "pass", "details": {}}, "MLDebug982": {"stat": "pass", "details": {}}, "MLDebug983": {"stat": "pass", "details": {}}, "MLDebug984": {"stat": "pass", "details": {}}, "MLDebug985": {"stat": "fail", "details": {"test_functionality": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/optimize/_minpack_py.py\", line 1012, in curve_fit\n    raise RuntimeError(\"Optimal parameters not found: \" + errmsg)\nRuntimeError: Optimal parameters not found: Number of calls to function has reached maxfev = 800.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 70, in test_functionality\n  File \"__test__.py\", line 25, in task_func\nValueError: Fitting failed\n", "test_return_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/optimize/_minpack_py.py\", line 1012, in curve_fit\n    raise RuntimeError(\"Optimal parameters not found: \" + errmsg)\nRuntimeError: Optimal parameters not found: Number of calls to function has reached maxfev = 800.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 52, in test_return_types\n  File \"__test__.py\", line 25, in task_func\nValueError: Fitting failed\n", "test_target_value_found": "Traceback (most recent call last):\n  File \"__test__.py\", line 23, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/scipy/optimize/_minpack_py.py\", line 1012, in curve_fit\n    raise RuntimeError(\"Optimal parameters not found: \" + errmsg)\nRuntimeError: Optimal parameters not found: Number of calls to function has reached maxfev = 800.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"__test__.py\", line 57, in test_target_value_found\n  File \"__test__.py\", line 25, in task_func\nValueError: Fitting failed\n"}}, "MLDebug986": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug987": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug988": {"stat": "pass", "details": {}}, "MLDebug989": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_case_1\nAssertionError: Tuples differ: (3, 3) != (3, 6)\n\nFirst differing element 1:\n3\n6\n\n- (3, 3)\n?     ^\n\n+ (3, 6)\n?     ^\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_case_2\nAssertionError: Tuples differ: (2, 2) != (2, 4)\n\nFirst differing element 1:\n2\n4\n\n- (2, 2)\n?     ^\n\n+ (2, 4)\n?     ^\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_3\nAssertionError: Tuples differ: (1, 1) != (1, 2)\n\nFirst differing element 1:\n1\n2\n\n- (1, 1)\n?     ^\n\n+ (1, 2)\n?     ^\n\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_4\nAssertionError: Tuples differ: (3, 3) != (3, 6)\n\nFirst differing element 1:\n3\n6\n\n- (3, 3)\n?     ^\n\n+ (3, 6)\n?     ^\n\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 81, in test_case_5\nAssertionError: Tuples differ: (2, 2) != (2, 4)\n\nFirst differing element 1:\n2\n4\n\n- (2, 2)\n?     ^\n\n+ (2, 4)\n?     ^\n\n"}}, "MLDebug990": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 49, in test_case_1\n  File \"__test__.py\", line 22, in task_func\nAttributeError: 'PathCollection' object has no attribute 'collections'\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_2\n  File \"__test__.py\", line 22, in task_func\nAttributeError: 'PathCollection' object has no attribute 'collections'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_case_3\n  File \"__test__.py\", line 22, in task_func\nAttributeError: 'PathCollection' object has no attribute 'collections'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_case_4\n  File \"__test__.py\", line 22, in task_func\nAttributeError: 'PathCollection' object has no attribute 'collections'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 76, in test_case_5\n  File \"__test__.py\", line 22, in task_func\nAttributeError: 'PathCollection' object has no attribute 'collections'\n"}}, "MLDebug991": {"stat": "pass", "details": {}}, "MLDebug992": {"stat": "pass", "details": {}}, "MLDebug993": {"stat": "pass", "details": {}}, "MLDebug994": {"stat": "pass", "details": {}}, "MLDebug995": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_case_5\n  File \"__test__.py\", line 41, in base\n  File \"__test__.py\", line 11, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1026, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 620, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1620, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1898, in _make_engine\n    return mapping[engine](f, **self.options)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 93, in __init__\n    self._reader = parsers.TextReader(src, **kwds)\n  File \"parsers.pyx\", line 581, in pandas._libs.parsers.TextReader.__cinit__\npandas.errors.EmptyDataError: No columns to parse from file\n"}}, "MLDebug996": {"stat": "pass", "details": {}}, "MLDebug997": {"stat": "pass", "details": {}}, "MLDebug998": {"stat": "pass", "details": {}}, "MLDebug999": {"stat": "pass", "details": {}}, "MLDebug1000": {"stat": "pass", "details": {}}, "MLDebug1001": {"stat": "pass", "details": {}}, "MLDebug1002": {"stat": "pass", "details": {}}, "MLDebug1003": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in test_case_1\nAssertionError: 1 != 0\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_3\nAssertionError: 1 != 0\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_5\nAssertionError: 1 != 0\n"}}, "MLDebug1004": {"stat": "pass", "details": {}}, "MLDebug1005": {"stat": "pass", "details": {}}, "MLDebug1006": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'csv_fil' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'csv_fil' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'csv_fil' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_case_4\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'csv_fil' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'csv_fil' is not defined\n"}}, "MLDebug1007": {"stat": "pass", "details": {}}, "MLDebug1008": {"stat": "pass", "details": {}}, "MLDebug1009": {"stat": "pass", "details": {}}, "MLDebug1010": {"stat": "pass", "details": {}}, "MLDebug1011": {"stat": "fail", "details": {"ALL": "No module named 'pyfakefs'"}}, "MLDebug1012": {"stat": "pass", "details": {}}, "MLDebug1013": {"stat": "fail", "details": {"test_correct_scraping": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 54, in test_correct_scraping\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n", "test_empty_table": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 67, in test_empty_table\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n", "test_overwrite_existing_csv": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 88, in test_overwrite_existing_csv\n  File \"__test__.py\", line 13, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/__init__.py\", line 328, in __init__\n    for (self.markup, self.original_encoding, self.declared_html_encoding,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/builder/_htmlparser.py\", line 361, in prepare_markup\n    dammit = UnicodeDammit(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 601, in __init__\n    for encoding in self.detector.encodings:\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 434, in encodings\n    self.declared_encoding = self.find_declared_encoding(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/bs4/dammit.py\", line 511, in find_declared_encoding\n    declared_encoding_match = xml_re.search(markup, endpos=xml_endpos)\nTypeError: expected string or bytes-like object\n"}}, "MLDebug1014": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1015": {"stat": "pass", "details": {}}, "MLDebug1016": {"stat": "fail", "details": {"test_csv_with_only_headers": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 103, in test_csv_with_only_headers\nAssertionError: 'Name,Age\\n' not found in 'Column\\n'\n"}}, "MLDebug1017": {"stat": "fail", "details": {"ALL": "'[' was never closed (__test__.py, line 37)"}}, "MLDebug1018": {"stat": "pass", "details": {}}, "MLDebug1019": {"stat": "pass", "details": {}}, "MLDebug1020": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1021": {"stat": "pass", "details": {}}, "MLDebug1022": {"stat": "pass", "details": {}}, "MLDebug1023": {"stat": "pass", "details": {}}, "MLDebug1024": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1025": {"stat": "pass", "details": {}}, "MLDebug1026": {"stat": "pass", "details": {}}, "MLDebug1027": {"stat": "pass", "details": {}}, "MLDebug1028": {"stat": "pass", "details": {}}, "MLDebug1029": {"stat": "fail", "details": {"ALL": "'(' was never closed (__test__.py, line 44)"}}, "MLDebug1030": {"stat": "fail", "details": {"test_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 21, in test_1\nAssertionError: False is not true : Expected average distance to be between 3.1 and 3.5, got 2.4954575024534082\n", "test_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 24, in test_2\nAssertionError: False is not true : Expected average distance to be between 3.2 and 3.5, got 2.3941015486301795\n", "test_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_3\nAssertionError: False is not true : Expected average distance to be between 2.8 and 3.7, got 2.453392199613588\n"}}, "MLDebug1031": {"stat": "pass", "details": {}}, "MLDebug1032": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1033": {"stat": "pass", "details": {}}, "MLDebug1034": {"stat": "pass", "details": {}}, "MLDebug1035": {"stat": "pass", "details": {}}, "MLDebug1036": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1037": {"stat": "fail", "details": {"test_empty_dict": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_empty_dict\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'copied_file' is not defined\n", "test_files_do_not_exist": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_files_do_not_exist\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'copied_file' is not defined\n", "test_files_with_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_files_with_content\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'copied_file' is not defined\n", "test_files_with_no_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_files_with_no_content\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'copied_file' is not defined\n", "test_mixed_case": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_mixed_case\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'copied_file' is not defined\n"}}, "MLDebug1038": {"stat": "pass", "details": {}}, "MLDebug1039": {"stat": "fail", "details": {"test_empty_directory": "Traceback (most recent call last):\n  File \"__test__.py\", line 74, in test_empty_directory\n  File \"__test__.py\", line 13, in task_func\nOSError: Directory /mnt/data/test_data does not exist\n", "test_file_creation_and_content": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_file_creation_and_content\n  File \"__test__.py\", line 13, in task_func\nOSError: Directory /mnt/data/test_data does not exist\n", "test_mixed_file_types": "Traceback (most recent call last):\n  File \"__test__.py\", line 84, in test_mixed_file_types\n  File \"__test__.py\", line 13, in task_func\nOSError: Directory /mnt/data/test_data does not exist\n", "test_non_matching_files": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_non_matching_files\n  File \"__test__.py\", line 13, in task_func\nOSError: Directory /mnt/data/test_data does not exist\n"}}, "MLDebug1040": {"stat": "fail", "details": {"test_incorrect_file_patterns": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 57, in test_incorrect_file_patterns\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/source'\n", "test_move_json_files": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 42, in test_move_json_files\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/source'\n", "test_no_files_to_move": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 52, in test_no_files_to_move\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/source'\n", "test_renaaccuracy": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 63, in test_renaaccuracy\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/source'\n", "test_special_cases_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 72, in test_special_cases_handling\n  File \"__test__.py\", line 14, in task_func\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 215, in makedirs\n    makedirs(head, exist_ok=exist_ok)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/os.py\", line 225, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/source'\n"}}, "MLDebug1041": {"stat": "pass", "details": {}}, "MLDebug1042": {"stat": "pass", "details": {}}, "MLDebug1043": {"stat": "pass", "details": {}}, "MLDebug1044": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1045": {"stat": "pass", "details": {}}, "MLDebug1046": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1047": {"stat": "pass", "details": {}}, "MLDebug1048": {"stat": "fail", "details": {"test_permission_error": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 65, in test_permission_error\nAssertionError: 'Permission denied' not found in \"No such file or directory: 'fakepath/file.txt'\"\n"}}, "MLDebug1049": {"stat": "fail", "details": {"test_archive_image_files": "Traceback (most recent call last):\n  File \"__test__.py\", line 78, in test_archive_image_files\n  File \"__test__.py\", line 40, in task_func\nFileNotFoundError: [Errno 2] No such file or directory: './test_files/image1.jpg'\n", "test_archive_txt_files": "Traceback (most recent call last):\n  File \"__test__.py\", line 71, in test_archive_txt_files\n  File \"__test__.py\", line 40, in task_func\nFileNotFoundError: [Errno 2] No such file or directory: './test_files/test2.txt'\n", "test_multiple_archiving_unique_naming": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_multiple_archiving_unique_naming\n  File \"__test__.py\", line 40, in task_func\nFileNotFoundError: [Errno 2] No such file or directory: './test_files/test2.txt'\n"}}, "MLDebug1050": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1051": {"stat": "pass", "details": {}}, "MLDebug1052": {"stat": "fail", "details": {"ALL": "No module named 'django'"}}, "MLDebug1053": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1054": {"stat": "pass", "details": {}}, "MLDebug1055": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1056": {"stat": "fail", "details": {"test_custom_list_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_custom_list_input\nAssertionError: Lists differ: ['W', 'V', 'U', 'X', 'Y', 'Z'] != ['V', 'X', 'U', 'W', 'Y', 'Z']\n\nFirst differing element 0:\n'W'\n'V'\n\n- ['W', 'V', 'U', 'X', 'Y', 'Z']\n+ ['V', 'X', 'U', 'W', 'Y', 'Z']\n", "test_three_elements_list": "Traceback (most recent call last):\n  File \"__test__.py\", line 62, in test_three_elements_list\nAssertionError: Lists differ: ['Y', 'X', 'Z'] != ['X', 'Y', 'Z']\n\nFirst differing element 0:\n'Y'\n'X'\n\n- ['Y', 'X', 'Z']\n+ ['X', 'Y', 'Z']\n"}}, "MLDebug1057": {"stat": "pass", "details": {}}, "MLDebug1058": {"stat": "pass", "details": {}}, "MLDebug1059": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1060": {"stat": "pass", "details": {}}, "MLDebug1061": {"stat": "pass", "details": {}}, "MLDebug1062": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1063": {"stat": "pass", "details": {}}, "MLDebug1064": {"stat": "pass", "details": {}}, "MLDebug1065": {"stat": "pass", "details": {}}, "MLDebug1066": {"stat": "pass", "details": {}}, "MLDebug1067": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1068": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1069": {"stat": "pass", "details": {}}, "MLDebug1070": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1071": {"stat": "pass", "details": {}}, "MLDebug1072": {"stat": "pass", "details": {}}, "MLDebug1073": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 213, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1067, in assert_series_equal\n    _testing.assert_almost_equal(\n  File \"testing.pyx\", line 55, in pandas._libs.testing.assert_almost_equal\n  File \"testing.pyx\", line 173, in pandas._libs.testing.assert_almost_equal\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.iloc[:, 0] (column name=\"Combinations\") are different\n\nDataFrame.iloc[:, 0] (column name=\"Combinations\") values are different (97.28261 %)\n[index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]\n[left]:  [(1, 2, 47), (1, 3, 46), (1, 4, 45), (1, 5, 44), (1, 6, 43), (1, 7, 42), (1, 8, 41), (1, 9, 40), (1, 10, 39), (1, 11, 38), (1, 12, 37), (1, 13, 36), (1, 14, 35), (1, 15, 34), (1, 16, 33), (1, 17, 32), (1, 18, 31), (1, 19, 30), (1, 20, 29), (1, 21, 28), (1, 22, 27), (1, 23, 26), (1, 24, 25), (2, 3, 45), (2, 4, 44), (2, 5, 43), (2, 6, 42), (2, 7, 41), (2, 8, 40), (2, 9, 39), (2, 10, 38), (2, 11, 37), (2, 12, 36), (2, 13, 35), (2, 14, 34), (2, 15, 33), (2, 16, 32), (2, 17, 31), (2, 18, 30), (2, 19, 29), (2, 20, 28), (2, 21, 27), (2, 22, 26), (2, 23, 25), (3, 4, 43), (3, 5, 42), (3, 6, 41), (3, 7, 40), (3, 8, 39), (3, 9, 38), (3, 10, 37), (3, 11, 36), (3, 12, 35), (3, 13, 34), (3, 14, 33), (3, 15, 32), (3, 16, 31), (3, 17, 30), (3, 18, 29), (3, 19, 28), (3, 20, 27), (3, 21, 26), (3, 22, 25), (3, 23, 24), (4, 5, 41), (4, 6, 40), (4, 7, 39), (4, 8, 38), (4, 9, 37), (4, 10, 36), (4, 11, 35), (4, 12, 34), (4, 13, 33), (4, 14, 32), (4, 15, 31), (4, 16, 30), (4, 17, 29), (4, 18, 28), (4, 19, 27), (4, 20, 26), (4, 21, 25), (4, 22, 24), (5, 6, 39), (5, 7, 38), (5, 8, 37), (5, 9, 36), (5, 10, 35), (5, 11, 34), (5, 12, 33), (5, 13, 32), (5, 14, 31), (5, 15, 30), (5, 16, 29), (5, 17, 28), (5, 18, 27), (5, 19, 26), (5, 20, 25), (5, 21, 24), (5, 22, 23), (6, 7, 37), ...]\n[right]: [(1, 12, 37), (1, 13, 36), (12, 16, 22), (3, 22, 25), (2, 14, 34), (3, 23, 24), (5, 12, 33), (5, 13, 32), (9, 10, 31), (1, 11, 38), (3, 20, 27), (3, 21, 26), (6, 19, 25), (5, 11, 34), (9, 16, 25), (2, 5, 43), (7, 20, 23), (1, 2, 47), (7, 21, 22), (6, 10, 34), (6, 17, 27), (6, 18, 26), (11, 13, 26), (2, 3, 45), (2, 4, 44), (7, 19, 24), (6, 8, 36), (10, 18, 22), (4, 13, 33), (6, 16, 28), (4, 21, 25), (3, 10, 37), (11, 19, 20), (10, 16, 24), (1, 22, 27), (4, 11, 35), (4, 12, 34), (7, 10, 33), (12, 18, 20), (4, 19, 27), (3, 8, 39), (3, 9, 38), (6, 7, 37), (1, 21, 28), (4, 10, 36), (5, 14, 31), (7, 8, 35), (7, 9, 34), (15, 16, 19), (3, 7, 40), (2, 22, 26), (9, 18, 23), (2, 23, 25), (5, 21, 24), (9, 19, 22), (1, 19, 30), (8, 15, 27), (1, 20, 29), (8, 16, 26), (4, 9, 37), (5, 19, 26), (9, 17, 24), (8, 13, 29), (2, 13, 35), (8, 14, 28), (1, 10, 39), (4, 7, 39), (12, 14, 24), (8, 12, 30), (2, 12, 36), (10, 19, 21), (1, 8, 41), (1, 9, 40), (4, 22, 24), (2, 10, 38), (3, 19, 28), (2, 11, 37), (5, 9, 36), (10, 17, 23), (2, 18, 30), (1, 7, 42), (4, 20, 26), (14, 17, 19), (3, 17, 30), (3, 18, 29), (5, 7, 38), (4, 18, 28), (7, 17, 26), (13, 18, 19), (3, 15, 32), (14, 16, 20), (3, 16, 31), (6, 14, 30), (5, 6, 39), (5, 22, 23), (11, 17, 22), (7, 15, 28), (7, 16, 27), (6, 12, 32), (6, 13, 31), ...]\nAt positional index 0, first diff: (1, 2, 47) != (1, 12, 37)\n", "test_edge_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 425, in test_edge_case_4\nAssertionError: 10 != 1\n"}}, "MLDebug1074": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1075": {"stat": "fail", "details": {"test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_case_2\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpd8677w_q/task_func.log'\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_3\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpy24r3xpc/task_func.log'\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_case_4\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmphojohh4d/task_func.log'\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_5\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmp2hj05hwo/task_func.log'\n"}}, "MLDebug1076": {"stat": "pass", "details": {}}, "MLDebug1077": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1078": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1079": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1080": {"stat": "fail", "details": {"ALL": "No module named 'flask'"}}, "MLDebug1081": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1082": {"stat": "pass", "details": {}}, "MLDebug1083": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1084": {"stat": "fail", "details": {"test_new_custom_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 86, in test_new_custom_parameters\nAssertionError: Lists differ: ['iPad,6242,2480.429651652086', 'Macbook,61[126 chars]072'] != ['Macbook,1561,444.82670855378143', 'iPad,1[123 chars]959']\n\nFirst differing element 0:\n'iPad,6242,2480.429651652086'\n'Macbook,1561,444.82670855378143'\n\n- ['iPad,6242,2480.429651652086',\n-  'Macbook,6190,1781.8985893098236',\n-  'iPhone,6251,1732.0477114754033',\n-  'Airpods,6369,1703.8542053339413',\n-  'Apple Watch,6120,1622.9736999671072']\n+ ['Macbook,1561,444.82670855378143',\n+  'iPad,1383,401.9253335536443',\n+  'Airpods,1297,381.4827132170069',\n+  'Apple Watch,1123,308.07853599252707',\n+  'iPhone,921,294.0138866107959'] : DataFrame contents should match the expected output\n"}}, "MLDebug1085": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1086": {"stat": "pass", "details": {}}, "MLDebug1087": {"stat": "fail", "details": {"ALL": "No module named 'Levenshtein'"}}, "MLDebug1088": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1089": {"stat": "fail", "details": {"ALL": "No module named 'nltk'"}}, "MLDebug1090": {"stat": "pass", "details": {}}, "MLDebug1091": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_case_1\nAssertionError: 'Hello\\nworld\\nThis was a\\ntest\\nstring\\nHappy\\ncoding!' != 'Hello\\nworld This\\nwas a test\\nstring\\nHappy\\ncoding!'\n  Hello\n+ world This\n+ was a test\n- world\n- This was a\n- test\n  string\n  Happy\n  coding!\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_case_5\nAssertionError: 'Hello,\\n@world!\\n#This$is^a&test*string' != 'Hello,\\n@world!\\n#This$was^a&test*string'\n  Hello,\n  @world!\n- #This$is^a&test*string?       ^\n+ #This$was^a&test*string?       ^^\n\n"}}, "MLDebug1092": {"stat": "pass", "details": {}}, "MLDebug1093": {"stat": "fail", "details": {"test_exception_handling": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 86, in test_exception_handling\nAssertionError: Lists differ: ['invalid file name.jpg'] != []\n\nFirst list contains 1 additional elements.\nFirst extra element 0:\n'invalid file name.jpg'\n\n- ['invalid file name.jpg']\n+ []\n"}}, "MLDebug1094": {"stat": "fail", "details": {"test_dataframe_columns": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_dataframe_columns\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_dataframe_value": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_dataframe_value\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_different_seeds_produce_different_scores": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_different_seeds_produce_different_scores\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_plot_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_plot_labels\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_random_reproducibility": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_random_reproducibility\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n", "test_scores_within_range": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_scores_within_range\n  File \"__test__.py\", line 27, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug1095": {"stat": "pass", "details": {}}, "MLDebug1096": {"stat": "pass", "details": {}}, "MLDebug1097": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 83, in test_case_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 113, in test_case_3\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 135, in test_case_4\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 147, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1226, in assert_frame_equal\n    assert_index_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 339, in assert_index_equal\n    assert_attr_equal(\"names\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: DataFrame.index are different\n\nAttribute \"names\" are different\n[left]:  ['Fruit']\n[right]: [None]\n"}}, "MLDebug1098": {"stat": "fail", "details": {"ALL": "No module named 'faker'"}}, "MLDebug1099": {"stat": "pass", "details": {}}, "MLDebug1100": {"stat": "fail", "details": {"test_function_with_non_numeric_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_function_with_non_numeric_data\n  File \"__test__.py\", line 23, in task_func\nValueError: could not convert string to float: 'x'\n"}}, "MLDebug1101": {"stat": "pass", "details": {}}, "MLDebug1102": {"stat": "pass", "details": {}}, "MLDebug1103": {"stat": "pass", "details": {}}, "MLDebug1104": {"stat": "fail", "details": {"test_empty_dictionary": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_empty_dictionary\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_non_existent_source_directory": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_non_existent_source_directory\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_non_string_dictionary": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_non_string_dictionary\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_normal_operation": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_normal_operation\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'backup_statu' is not defined\n", "test_pre_existing_files_in_backup": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_pre_existing_files_in_backup\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'backup_statu' is not defined\n"}}, "MLDebug1105": {"stat": "fail", "details": {"test_edge_case_non_categorical": "Traceback (most recent call last):\n  File \"__test__.py\", line 72, in test_edge_case_non_categorical\n  File \"__test__.py\", line 21, in task_func\nValueError: Some categories have less than 5 observations.\n"}}, "MLDebug1106": {"stat": "pass", "details": {}}, "MLDebug1107": {"stat": "fail", "details": {"test_different_pattern": "Traceback (most recent call last):\n  File \"__test__.py\", line 82, in test_different_pattern\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'result_d' is not defined\n", "test_no_matches": "Traceback (most recent call last):\n  File \"__test__.py\", line 68, in test_no_matches\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'result_d' is not defined\n", "test_regular_expression_match": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_regular_expression_match\n  File \"__test__.py\", line 30, in task_func\nNameError: name 'result_d' is not defined\n"}}, "MLDebug1108": {"stat": "fail", "details": {"test_non_int": "Traceback (most recent call last):\n  File \"__test__.py\", line 73, in test_non_int\nAssertionError: Exception not raised by task_func\n", "test_rng": "Traceback (most recent call last):\n  File \"__test__.py\", line 45, in test_rng\nAssertionError: frames are equal but should not be\n"}}, "MLDebug1109": {"stat": "pass", "details": {}}, "MLDebug1110": {"stat": "pass", "details": {}}, "MLDebug1111": {"stat": "pass", "details": {}}, "MLDebug1112": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_5\nAssertionError: 2 != 10\n"}}, "MLDebug1113": {"stat": "pass", "details": {}}, "MLDebug1114": {"stat": "pass", "details": {}}, "MLDebug1115": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_case_1\nAssertionError: 251.1735 != 250.7154\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 52, in test_case_3\nAssertionError: 414 != 474\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_4\nAssertionError: 236 != 113\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 67, in test_case_5\nAssertionError: 55 != 190\n"}}, "MLDebug1116": {"stat": "pass", "details": {}}, "MLDebug1117": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 26, in test_case_1\nAssertionError: Counter({('a', 'e'): 2, ('a', 'a'): 1, ('c', 'b'): 1, ('b', 'b'): 1}) != Counter({('d', 'a'): 1, ('b', 'b'): 1, ('d', 'd'): 1[27 chars]: 1})\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_4\nAssertionError: Counter({('d', 'c'): 2, ('e', 'b'): 2, ('d', 'd'): 1[72 chars]: 1}) != Counter({('c', 'c'): 2, ('d', 'b'): 2, ('e', 'e'): 2[57 chars]: 1})\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_5\nAssertionError: Counter({('b', 'e'): 1, ('a', 'c'): 1, ('a', 'd'): 1[27 chars]: 1}) != Counter({('a', 'e'): 1, ('d', 'b'): 1, ('c', 'c'): 1[27 chars]: 1})\n"}}, "MLDebug1118": {"stat": "fail", "details": {"test_output_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 34, in test_output_type\nAssertionError: Lists differ: [0, -1, -2, -1, -2, -3] != [0, 1, 0, -1, -2, -1]\n\nFirst differing element 1:\n-1\n1\n\n- [0, -1, -2, -1, -2, -3]\n+ [0, 1, 0, -1, -2, -1]\n"}}, "MLDebug1119": {"stat": "pass", "details": {}}, "MLDebug1120": {"stat": "fail", "details": {"test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 59, in test_case_5\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1279, in assert_frame_equal\n    assert_series_equal(\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 975, in assert_series_equal\n    assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Attributes of DataFrame.iloc[:, 0] (column name=\"x\") are different\n\nAttribute \"dtype\" are different\n[left]:  int64\n[right]: float64\n"}}, "MLDebug1121": {"stat": "pass", "details": {}}, "MLDebug1122": {"stat": "pass", "details": {}}, "MLDebug1123": {"stat": "fail", "details": {"test_plot_axes": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_plot_axes\nAssertionError: 1 != 2\n"}}, "MLDebug1124": {"stat": "fail", "details": {"test_multiple_modes_repeated": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_multiple_modes_repeated\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 920, in assert_array_equal\n    assert_array_compare(operator.__eq__, x, y, err_msg=err_msg,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 713, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not equal\n\n(shapes (6,), (2,) mismatch)\n x: array([ 3.-0.j,  0.+0.j,  0.+0.j, -3.-0.j,  0.-0.j,  0.-0.j])\n y: array([ 1.+0.j, -1.+0.j])\n"}}, "MLDebug1125": {"stat": "pass", "details": {}}, "MLDebug1126": {"stat": "pass", "details": {}}, "MLDebug1127": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug1128": {"stat": "pass", "details": {}}, "MLDebug1129": {"stat": "fail", "details": {"test_cluster_centers": "Traceback (most recent call last):\n  File \"__test__.py\", line 46, in test_cluster_centers\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'a' is not defined\n", "test_return_labels": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_return_labels\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'a' is not defined\n", "test_return_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 63, in test_return_type\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'a' is not defined\n", "test_valid_input": "Traceback (most recent call last):\n  File \"__test__.py\", line 54, in test_valid_input\n  File \"__test__.py\", line 37, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug1130": {"stat": "pass", "details": {}}, "MLDebug1131": {"stat": "pass", "details": {}}, "MLDebug1132": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 20, in test_case_1\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'resul' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 28, in test_case_2\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'resul' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 36, in test_case_3\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'resul' is not defined\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_4\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'resul' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_5\n  File \"__test__.py\", line 16, in task_func\nNameError: name 'resul' is not defined\n"}}, "MLDebug1133": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 30, in test_case_1\nAssertionError: -inf != 1.6094379124341005\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 42, in test_case_3\nAssertionError: -inf != 0.0\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_case_6\nAssertionError: -inf != 0.0\n"}}, "MLDebug1134": {"stat": "pass", "details": {}}, "MLDebug1135": {"stat": "pass", "details": {}}, "MLDebug1136": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 17, in test_case_1\nAssertionError: '38826b40a73191c118de83970f6e82dc' != 'bc9af285d87b312e61ab3661e66b741b'\n- 38826b40a73191c118de83970f6e82dc\n+ bc9af285d87b312e61ab3661e66b741b\n\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 22, in test_case_2\nAssertionError: '04814876f279477f27da502952b7ea0c' != 'dd5dec1a853625e2dc48f3d42665c337'\n- 04814876f279477f27da502952b7ea0c\n+ dd5dec1a853625e2dc48f3d42665c337\n\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_case_3\nAssertionError: '3efc87b1e99f08611c151e0eacca8997' != '2ef1af06ae4aa496eaa8e963bde5514e'\n- 3efc87b1e99f08611c151e0eacca8997\n+ 2ef1af06ae4aa496eaa8e963bde5514e\n\n"}}, "MLDebug1137": {"stat": "pass", "details": {}}, "MLDebug1138": {"stat": "pass", "details": {}}, "MLDebug1139": {"stat": "pass", "details": {}}, "MLDebug1140": {"stat": "pass", "details": {}}, "MLDebug1141": {"stat": "fail", "details": {"test_samples_type": "Traceback (most recent call last):\n  File \"__test__.py\", line 31, in test_samples_type\nAssertionError: <Figure size 640x480 with 1 Axes> is not an instance of <class 'numpy.ndarray'>\n", "test_histogram_bins": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_histogram_bins\nAttributeError: 'numpy.ndarray' object has no attribute 'axes'\n", "test_mean_approximation": "Traceback (most recent call last):\n  File \"__test__.py\", line 35, in test_mean_approximation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/fromnumeric.py\", line 3504, in mean\n    return _methods._mean(a, axis=axis, dtype=dtype,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/_methods.py\", line 131, in _mean\n    ret = ret / rcount\nTypeError: unsupported operand type(s) for /: 'Figure' and 'int'\n", "test_pdf_overlay": "Traceback (most recent call last):\n  File \"__test__.py\", line 51, in test_pdf_overlay\nAttributeError: 'numpy.ndarray' object has no attribute 'axes'\n", "test_pdf_overlay_accuracy": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_pdf_overlay_accuracy\nAttributeError: 'numpy.ndarray' object has no attribute 'axes'\n", "test_plot_title": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_plot_title\nAttributeError: 'numpy.ndarray' object has no attribute 'axes'\n", "test_samples_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 27, in test_samples_length\nTypeError: object of type 'Figure' has no len()\n", "test_std_dev_approximation": "Traceback (most recent call last):\n  File \"__test__.py\", line 39, in test_std_dev_approximation\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/fromnumeric.py\", line 3645, in std\n    return _methods._std(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/_methods.py\", line 206, in _std\n    ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/core/_methods.py\", line 168, in _var\n    arrmean = arrmean / rcount\nTypeError: unsupported operand type(s) for /: 'Figure' and 'int'\n"}}, "MLDebug1142": {"stat": "pass", "details": {}}, "MLDebug1143": {"stat": "fail", "details": {"ALL": "No module named 'statsmodels'"}}, "MLDebug1144": {"stat": "fail", "details": {"test_forecasted_values_increasing": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_forecasted_values_increasing\n  File \"__test__.py\", line 29, in task_func\nAttributeError: 'Index' object has no attribute 'reshape'\n", "test_with_custom_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 47, in test_with_custom_parameters\n  File \"__test__.py\", line 29, in task_func\nAttributeError: 'Index' object has no attribute 'reshape'\n", "test_with_default_parameters": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_with_default_parameters\n  File \"__test__.py\", line 29, in task_func\nAttributeError: 'Index' object has no attribute 'reshape'\n", "test_with_random_sales_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_with_random_sales_data\n  File \"__test__.py\", line 29, in task_func\nAttributeError: 'Index' object has no attribute 'reshape'\n", "test_with_specific_sales_data": "Traceback (most recent call last):\n  File \"__test__.py\", line 66, in test_with_specific_sales_data\n  File \"__test__.py\", line 29, in task_func\nAttributeError: 'Index' object has no attribute 'reshape'\n"}}, "MLDebug1145": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 38, in test_case_1\nAssertionError: Lists differ: ['Mobile_Phone', 'T_Shirt'] != ['Mobile_Phone', 'Coffee_Maker']\n\nFirst differing element 1:\n'T_Shirt'\n'Coffee_Maker'\n\n- ['Mobile_Phone', 'T_Shirt']\n+ ['Mobile_Phone', 'Coffee_Maker']\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 44, in test_case_2\nAssertionError: Lists differ: ['Laptop'] != ['Sweater']\n\nFirst differing element 0:\n'Laptop'\n'Sweater'\n\n- ['Laptop']\n+ ['Sweater']\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_case_3\nAssertionError: Lists differ: ['Book', 'Pen', 'Bag'] != ['Pen', 'Book', 'Bag']\n\nFirst differing element 0:\n'Book'\n'Pen'\n\n- ['Book', 'Pen', 'Bag']\n+ ['Pen', 'Book', 'Bag']\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 57, in test_case_4\nAssertionError: Lists differ: ['Books', 'Books'] != ['Books', 'Home & Kitchen']\n\nFirst differing element 1:\n'Books'\n'Home & Kitchen'\n\n- ['Books', 'Books']\n+ ['Books', 'Home & Kitchen']\n"}}, "MLDebug1146": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 48, in test_case_1\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_10": "Traceback (most recent call last):\n  File \"__test__.py\", line 108, in test_case_10\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_2": "Traceback (most recent call last):\n  File \"__test__.py\", line 58, in test_case_2\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 65, in test_case_3\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_5": "Traceback (most recent call last):\n  File \"__test__.py\", line 75, in test_case_5\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_7": "Traceback (most recent call last):\n  File \"__test__.py\", line 87, in test_case_7\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_8": "Traceback (most recent call last):\n  File \"__test__.py\", line 95, in test_case_8\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n", "test_case_9": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_case_9\n  File \"__test__.py\", line 36, in task_func\nNameError: name 'task_d' is not defined\n"}}, "MLDebug1147": {"stat": "fail", "details": {"test_case_1": "Traceback (most recent call last):\n  File \"__test__.py\", line 29, in test_case_1\nAssertionError: 10 != 13 : Length should match processed input.\n", "test_case_13": "Traceback (most recent call last):\n  File \"__test__.py\", line 98, in test_case_13\nAssertionError: '' != '______'\n+ ______ : Should replace all types of whitespaces correctly, with two underscores for tab and three for newline.\n", "test_case_3": "Traceback (most recent call last):\n  File \"__test__.py\", line 40, in test_case_3\nAssertionError: '' != '__'\n+ __ : Spaces should be replaced with underscores.\n", "test_case_4": "Traceback (most recent call last):\n  File \"__test__.py\", line 43, in test_case_4\nAssertionError: '' != '_____'\n+ _____ : Tab and newline should be replaced with underscores.\n", "test_case_6": "Traceback (most recent call last):\n  File \"__test__.py\", line 55, in test_case_6\nAssertionError: 'abcd' != 'a_b__c___d'\n- abcd\n+ a_b__c___d\n : Should replace all types of whitespaces correctly.\n"}}, "MLDebug1148": {"stat": "pass", "details": {}}, "MLDebug1149": {"stat": "pass", "details": {}}, "MLDebug1150": {"stat": "pass", "details": {}}, "MLDebug1151": {"stat": "fail", "details": {"ALL": "No module named 'docx'"}}, "MLDebug1152": {"stat": "pass", "details": {}}, "MLDebug1153": {"stat": "pass", "details": {}}, "MLDebug1154": {"stat": "fail", "details": {"test_increasing_array": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_increasing_array\n  File \"__test__.py\", line 66, in helper_assert_cumulative_probability_correctness\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 1034, in assert_array_almost_equal\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/contextlib.py\", line 79, in inner\n    return func(*args, **kwds)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/numpy/testing/_private/utils.py\", line 797, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not almost equal to 2 decimals\nCumulative probability calculation is incorrect.\nMismatched elements: 2 / 3 (66.7%)\nMax absolute difference: 0.16666667\nMax relative difference: 1.\n x: array([0.33, 0.67, 1.  ])\n y: array([0.17, 0.5 , 1.  ])\n"}}, "MLDebug1155": {"stat": "pass", "details": {}}, "MLDebug1156": {"stat": "fail", "details": {"test_path_with_trailing_delimiter": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 167, in test_path_with_trailing_delimiter\nAssertionError: Lists differ: [('Docs', {'total': 500000000000, 'used': 300000000000, 'free[91 chars]00})] != [('Docs', {'total': 100000000000, 'used': 50000000000, 'free'[86 chars]00})]\n\nFirst differing element 0:\n('Docs', {'total': 500000000000, 'used': 300000000000, 'free': 200000000000})\n('Docs', {'total': 100000000000, 'used': 50000000000, 'free': 50000000000})\n\n- [('Docs', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000}),\n-  ('src', {'free': 200000000000, 'total': 500000000000, 'used': 300000000000})]\n+ [('Docs', {'free': 50000000000, 'total': 100000000000, 'used': 50000000000}),\n+  ('src', {'free': 25000000000, 'total': 50000000000, 'used': 25000000000})]\n", "test_nonexist_path": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 78, in test_nonexist_path\n  File \"__test__.py\", line 26, in task_func\nValueError: Invalid path: contains empty components\n"}}, "MLDebug1157": {"stat": "fail", "details": {"test_custom_features": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_custom_features\nAssertionError: Lists differ: ['C', 'A', 'B', 'D', 'E'] != ['A', 'B', 'C', 'D', 'E']\n\nFirst differing element 0:\n'C'\n'A'\n\n- ['C', 'A', 'B', 'D', 'E']\n+ ['A', 'B', 'C', 'D', 'E']\n"}}, "MLDebug1158": {"stat": "pass", "details": {}}, "MLDebug1159": {"stat": "pass", "details": {}}, "MLDebug1160": {"stat": "pass", "details": {}}, "MLDebug1161": {"stat": "fail", "details": {"test_alpha_parameter": "Traceback (most recent call last):\n  File \"__test__.py\", line 60, in test_alpha_parameter\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'a' is not defined\n", "test_bins_parameter": "Traceback (most recent call last):\n  File \"__test__.py\", line 50, in test_bins_parameter\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'a' is not defined\n", "test_color_parameter": "Traceback (most recent call last):\n  File \"__test__.py\", line 79, in test_color_parameter\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'a' is not defined\n", "test_data_correctness": "Traceback (most recent call last):\n  File \"__test__.py\", line 33, in test_data_correctness\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'a' is not defined\n", "test_density_parameter": "Traceback (most recent call last):\n  File \"__test__.py\", line 69, in test_density_parameter\n  File \"__test__.py\", line 20, in task_func\nNameError: name 'a' is not defined\n"}}, "MLDebug1162": {"stat": "pass", "details": {}}, "MLDebug1163": {"stat": "pass", "details": {}}, "MLDebug1164": {"stat": "fail", "details": {"test_complex_json_structure": "Traceback (most recent call last):\n  File \"__test__.py\", line 129, in test_complex_json_structure\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_data_extraction": "Traceback (most recent call last):\n  File \"__test__.py\", line 56, in test_data_extraction\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_data_normalization": "Traceback (most recent call last):\n  File \"__test__.py\", line 64, in test_data_normalization\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n", "test_negative_values": "Traceback (most recent call last):\n  File \"__test__.py\", line 97, in test_negative_values\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n", "test_nested_json_structure": "Traceback (most recent call last):\n  File \"__test__.py\", line 103, in test_nested_json_structure\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Original Data\n[right]: None\n", "test_non_uniform_data_spacing": "Traceback (most recent call last):\n  File \"__test__.py\", line 89, in test_non_uniform_data_spacing\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 1079, in assert_series_equal\n    assert_attr_equal(\"name\", left, right, obj=obj)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 421, in assert_attr_equal\n    raise_assert_detail(obj, msg, left_attr, right_attr)\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/site-packages/pandas/_testing/asserters.py\", line 614, in raise_assert_detail\n    raise AssertionError(msg)\nAssertionError: Series are different\n\nAttribute \"name\" are different\n[left]:  Normalized Data\n[right]: None\n"}}, "MLDebug1165": {"stat": "pass", "details": {}}, "MLDebug1166": {"stat": "pass", "details": {}}, "MLDebug1167": {"stat": "pass", "details": {}}, "MLDebug1168": {"stat": "pass", "details": {}}, "MLDebug1169": {"stat": "fail", "details": {"test_correct_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 41, in test_correct_length\nAssertionError: 'a]' != ']'\n- a]\n? -\n+ ]\n\n", "test_non_empty_string_positive_length": "Traceback (most recent call last):\n  File \"__test__.py\", line 53, in test_non_empty_string_positive_length\nAssertionError: '/\\x04' != '\\x10'\n- /\u0004\n+ \u0010\n\n"}}, "MLDebug1170": {"stat": "pass", "details": {}}, "MLDebug1171": {"stat": "pass", "details": {}}, "MLDebug1172": {"stat": "fail", "details": {"test_append_to_existing_file": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 91, in test_append_to_existing_file\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 929, in assert_called_with\n    raise AssertionError(_error_message()) from cause\nAssertionError: expected call not found.\nExpected: write('{\"title\": \"New Title\"}\\n')\nActual: write('\\n')\n", "test_page_without_title": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 62, in test_page_without_title\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'), call('\"title\"'), call(': '), call('null'), call('}'), call('\\n')].\n", "test_scrape_title_page_1": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 33, in test_scrape_title_page_1\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n call('\"Test Page 1\"'),\n call('}'),\n call('\\n')].\n", "test_scrape_title_page_2": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 45, in test_scrape_title_page_2\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n call('\"Test Page 2\"'),\n call('}'),\n call('\\n')].\n", "test_very_long_title": "Traceback (most recent call last):\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 1379, in patched\n    return func(*newargs, **newkeywargs)\n  File \"__test__.py\", line 75, in test_very_long_title\n  File \"/home/jyhuang/anaconda3/envs/MedicalGPT/lib/python3.10/unittest/mock.py\", line 940, in assert_called_once_with\n    raise AssertionError(msg)\nAssertionError: Expected 'write' to be called once. Called 6 times.\nCalls: [call('{'),\n call('\"title\"'),\n call(': '),\n calln call('}'),\n call('\\n')].\n"}}, "MLDebug1173": {"stat": "pass", "details": {}}, "MLDebug1174": {"stat": "pass", "details": {}}}